{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/rbush/index.js","webpack:///./node_modules/pixelworks/lib/index.js","webpack:///./node_modules/ol/webgl.js","webpack:///./node_modules/ol/index.js","webpack:///./node_modules/ol/AssertionError.js","webpack:///./node_modules/ol/CollectionEventType.js","webpack:///./node_modules/ol/ObjectEventType.js","webpack:///./node_modules/ol/obj.js","webpack:///./node_modules/ol/events.js","webpack:///./node_modules/ol/functions.js","webpack:///./node_modules/ol/Disposable.js","webpack:///./node_modules/ol/events/Event.js","webpack:///./node_modules/ol/events/EventTarget.js","webpack:///./node_modules/ol/events/EventType.js","webpack:///./node_modules/ol/Observable.js","webpack:///./node_modules/ol/Object.js","webpack:///./node_modules/ol/Collection.js","webpack:///./node_modules/ol/MapEvent.js","webpack:///./node_modules/ol/MapBrowserEvent.js","webpack:///./node_modules/ol/has.js","webpack:///./node_modules/ol/MapBrowserEventType.js","webpack:///./node_modules/ol/MapBrowserPointerEvent.js","webpack:///./node_modules/ol/pointer/EventType.js","webpack:///./node_modules/ol/pointer/EventSource.js","webpack:///./node_modules/ol/pointer/MouseSource.js","webpack:///./node_modules/ol/pointer/MsSource.js","webpack:///./node_modules/ol/pointer/NativeSource.js","webpack:///./node_modules/ol/pointer/PointerEvent.js","webpack:///./node_modules/ol/array.js","webpack:///./node_modules/ol/pointer/TouchSource.js","webpack:///./node_modules/ol/pointer/PointerEventHandler.js","webpack:///./node_modules/ol/MapBrowserEventHandler.js","webpack:///./node_modules/ol/MapEventType.js","webpack:///./node_modules/ol/MapProperty.js","webpack:///./node_modules/ol/TileState.js","webpack:///./node_modules/ol/asserts.js","webpack:///./node_modules/ol/structs/PriorityQueue.js","webpack:///./node_modules/ol/TileQueue.js","webpack:///./node_modules/ol/tilegrid/common.js","webpack:///./node_modules/ol/math.js","webpack:///./node_modules/ol/centerconstraint.js","webpack:///./node_modules/ol/rotationconstraint.js","webpack:///./node_modules/ol/ViewHint.js","webpack:///./node_modules/ol/ViewProperty.js","webpack:///./node_modules/ol/coordinate.js","webpack:///./node_modules/ol/easing.js","webpack:///./node_modules/ol/extent/Corner.js","webpack:///./node_modules/ol/extent/Relationship.js","webpack:///./node_modules/ol/extent.js","webpack:///./node_modules/ol/geom/GeometryType.js","webpack:///./node_modules/ol/geom/GeometryLayout.js","webpack:///./node_modules/ol/geom/flat/transform.js","webpack:///./node_modules/ol/sphere.js","webpack:///./node_modules/ol/proj/Units.js","webpack:///./node_modules/ol/proj/Projection.js","webpack:///./node_modules/ol/proj/epsg3857.js","webpack:///./node_modules/ol/proj/epsg4326.js","webpack:///./node_modules/ol/proj/projections.js","webpack:///./node_modules/ol/proj/transforms.js","webpack:///./node_modules/ol/proj.js","webpack:///./node_modules/ol/transform.js","webpack:///./node_modules/ol/geom/Geometry.js","webpack:///./node_modules/ol/geom/SimpleGeometry.js","webpack:///./node_modules/ol/geom/flat/area.js","webpack:///./node_modules/ol/geom/flat/closest.js","webpack:///./node_modules/ol/geom/flat/deflate.js","webpack:///./node_modules/ol/geom/flat/inflate.js","webpack:///./node_modules/ol/geom/flat/simplify.js","webpack:///./node_modules/ol/geom/LinearRing.js","webpack:///./node_modules/ol/geom/Point.js","webpack:///./node_modules/ol/geom/flat/contains.js","webpack:///./node_modules/ol/geom/flat/interiorpoint.js","webpack:///./node_modules/ol/geom/flat/segments.js","webpack:///./node_modules/ol/geom/flat/intersectsextent.js","webpack:///./node_modules/ol/geom/flat/reverse.js","webpack:///./node_modules/ol/geom/flat/orient.js","webpack:///./node_modules/ol/geom/Polygon.js","webpack:///./node_modules/ol/View.js","webpack:///./node_modules/ol/resolutionconstraint.js","webpack:///./node_modules/ol/dom.js","webpack:///./node_modules/ol/layer/Property.js","webpack:///./node_modules/ol/layer/Base.js","webpack:///./node_modules/ol/source/State.js","webpack:///./node_modules/ol/layer/Group.js","webpack:///./node_modules/ol/size.js","webpack:///./node_modules/ol/PluggableMap.js","webpack:///./node_modules/ol/control/Control.js","webpack:///./node_modules/ol/css.js","webpack:///./node_modules/ol/render/EventType.js","webpack:///./node_modules/ol/layer/Layer.js","webpack:///./node_modules/ol/control/Attribution.js","webpack:///./node_modules/ol/control/Rotate.js","webpack:///./node_modules/ol/control/Zoom.js","webpack:///./node_modules/ol/Kinetic.js","webpack:///./node_modules/ol/interaction/Property.js","webpack:///./node_modules/ol/interaction/Interaction.js","webpack:///./node_modules/ol/interaction/DoubleClickZoom.js","webpack:///./node_modules/ol/events/condition.js","webpack:///./node_modules/ol/interaction/Pointer.js","webpack:///./node_modules/ol/interaction/DragPan.js","webpack:///./node_modules/ol/interaction/DragRotate.js","webpack:///./node_modules/ol/render/Box.js","webpack:///./node_modules/ol/interaction/DragBox.js","webpack:///./node_modules/ol/interaction/DragZoom.js","webpack:///./node_modules/ol/events/KeyCode.js","webpack:///./node_modules/ol/interaction/KeyboardPan.js","webpack:///./node_modules/ol/interaction/KeyboardZoom.js","webpack:///./node_modules/ol/interaction/MouseWheelZoom.js","webpack:///./node_modules/ol/interaction/PinchRotate.js","webpack:///./node_modules/ol/interaction/PinchZoom.js","webpack:///./node_modules/ol/interaction/DragAndDrop.js","webpack:///./node_modules/ol/interaction/DragRotateAndZoom.js","webpack:///./node_modules/ol/color.js","webpack:///./node_modules/ol/colorlike.js","webpack:///./node_modules/ol/ImageState.js","webpack:///./node_modules/ol/structs/LRUCache.js","webpack:///./node_modules/ol/render/canvas.js","webpack:///./node_modules/ol/style/Image.js","webpack:///./node_modules/ol/style/RegularShape.js","webpack:///./node_modules/ol/style/Circle.js","webpack:///./node_modules/ol/style/Fill.js","webpack:///./node_modules/ol/style/Stroke.js","webpack:///./node_modules/ol/style/Style.js","webpack:///./node_modules/ol/Feature.js","webpack:///./node_modules/ol/geom/Circle.js","webpack:///./node_modules/ol/geom/flat/interpolate.js","webpack:///./node_modules/ol/geom/flat/length.js","webpack:///./node_modules/ol/geom/LineString.js","webpack:///./node_modules/ol/geom/MultiLineString.js","webpack:///./node_modules/ol/geom/MultiPoint.js","webpack:///./node_modules/ol/geom/MultiPolygon.js","webpack:///./node_modules/ol/geom/flat/center.js","webpack:///./node_modules/ol/LayerType.js","webpack:///./node_modules/ol/layer/VectorRenderType.js","webpack:///./node_modules/ol/layer/Vector.js","webpack:///./node_modules/ol/format/FormatType.js","webpack:///./node_modules/ol/featureloader.js","webpack:///./node_modules/ol/loadingstrategy.js","webpack:///./node_modules/ol/source/Source.js","webpack:///./node_modules/ol/source/VectorEventType.js","webpack:///./node_modules/ol/structs/RBush.js","webpack:///./node_modules/ol/source/Vector.js","webpack:///./node_modules/ol/interaction/Draw.js","webpack:///./node_modules/ol/interaction/Extent.js","webpack:///./node_modules/ol/interaction/Modify.js","webpack:///./node_modules/ol/interaction/Select.js","webpack:///./node_modules/ol/interaction/Snap.js","webpack:///./node_modules/ol/interaction/Translate.js","webpack:///./node_modules/ol/reproj/common.js","webpack:///./node_modules/ol/ImageBase.js","webpack:///./node_modules/ol/ImageCanvas.js","webpack:///./node_modules/ol/render/Event.js","webpack:///./node_modules/ol/render/VectorContext.js","webpack:///./node_modules/ol/render/canvas/Immediate.js","webpack:///./node_modules/ol/style/IconImageCache.js","webpack:///./node_modules/ol/renderer/Map.js","webpack:///./node_modules/ol/renderer/canvas/Map.js","webpack:///./node_modules/ol/renderer/Layer.js","webpack:///./node_modules/ol/renderer/canvas/Layer.js","webpack:///./node_modules/ol/renderer/canvas/IntermediateCanvas.js","webpack:///./node_modules/ol/renderer/canvas/ImageLayer.js","webpack:///./node_modules/ol/TileRange.js","webpack:///./node_modules/ol/renderer/canvas/TileLayer.js","webpack:///./node_modules/ol/render/ReplayGroup.js","webpack:///./node_modules/ol/render/ReplayType.js","webpack:///./node_modules/ol/geom/flat/textpath.js","webpack:///./node_modules/ol/render/canvas/Instruction.js","webpack:///./node_modules/ol/render/replay.js","webpack:///./node_modules/ol/render/canvas/Replay.js","webpack:///./node_modules/ol/render/canvas/ImageReplay.js","webpack:///./node_modules/ol/render/canvas/LineStringReplay.js","webpack:///./node_modules/ol/render/canvas/PolygonReplay.js","webpack:///./node_modules/ol/geom/flat/straightchunk.js","webpack:///./node_modules/ol/style/TextPlacement.js","webpack:///./node_modules/ol/render/canvas/TextReplay.js","webpack:///./node_modules/ol/render/canvas/ReplayGroup.js","webpack:///./node_modules/ol/renderer/vector.js","webpack:///./node_modules/ol/renderer/canvas/VectorLayer.js","webpack:///./node_modules/ol/layer/VectorTileRenderType.js","webpack:///./node_modules/ol/renderer/canvas/VectorTileLayer.js","webpack:///./node_modules/ol/Map.js","webpack:///./node_modules/ol/control/util.js","webpack:///./node_modules/ol/interaction.js","webpack:///./node_modules/ol/layer/TileProperty.js","webpack:///./node_modules/ol/layer/Tile.js","webpack:///./node_modules/ol/Tile.js","webpack:///./node_modules/ol/ImageTile.js","webpack:///./node_modules/ol/tilecoord.js","webpack:///./node_modules/ol/TileCache.js","webpack:///./node_modules/ol/reproj.js","webpack:///./node_modules/ol/reproj/Triangulation.js","webpack:///./node_modules/ol/reproj/Tile.js","webpack:///./node_modules/ol/tileurlfunction.js","webpack:///./node_modules/ol/tilegrid/TileGrid.js","webpack:///./node_modules/ol/tilegrid.js","webpack:///./node_modules/ol/source/Tile.js","webpack:///./node_modules/ol/source/TileEventType.js","webpack:///./node_modules/ol/source/UrlTile.js","webpack:///./node_modules/ol/source/TileImage.js","webpack:///./node_modules/ol/source/XYZ.js","webpack:///./node_modules/ol/layer/Image.js","webpack:///./node_modules/ol/reproj/Image.js","webpack:///./node_modules/ol/source/Image.js","webpack:///./node_modules/ol/source/Raster.js","webpack:///./main.js","webpack:///./node_modules/pixelworks/lib/util.js","webpack:///./node_modules/pixelworks/lib/processor.js","webpack:///./node_modules/quickselect/quickselect.js","webpack:///./node_modules/style-loader/lib/urls.js","webpack:///./node_modules/style-loader/lib/addStyles.js","webpack:///./node_modules/css-loader/lib/css-base.js","webpack:///./node_modules/ol/ol.css","webpack:///./node_modules/ol/ol.css?f5a7"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","rbush","default","quickselect","maxEntries","format","this","_maxEntries","Math","max","_minEntries","ceil","_initFormat","clear","findItem","item","items","equalsFn","indexOf","length","calcBBox","node","toBBox","distBBox","children","k","destNode","createNode","minX","Infinity","minY","maxX","maxY","child","extend","leaf","a","b","min","compareNodeMinX","compareNodeMinY","bboxArea","bboxMargin","contains","intersects","height","multiSelect","arr","left","right","compare","mid","stack","pop","push","all","_all","data","search","bbox","result","len","childBBox","nodesToSearch","collides","load","insert","_build","slice","_splitRoot","tmpNode","_insert","remove","parent","index","goingUp","path","indexes","splice","_condense","compareMinX","compareMinY","toJSON","fromJSON","apply","N","M","log","pow","j","right2","right3","N2","N1","sqrt","_chooseSubtree","level","targetNode","area","enlargement","minArea","minEnlargement","isNode","insertPath","_split","_adjustParentBBoxes","_chooseSplitAxis","splitIndex","_chooseSplitIndex","newNode","bbox1","bbox2","overlap","minOverlap","_allDistMargin","sort","leftBBox","rightBBox","margin","siblings","compareArr","Function","join","Processor","CONTEXT_IDS","WEBGL_MAX_TEXTURE_SIZE","WEBGL_EXTENSIONS","HAS_WEBGL","window","gl","canvas","opt_attributes","ii","context","getContext","e","document","createElement","failIfMajorPerformanceCaveat","getParameter","MAX_TEXTURE_SIZE","getSupportedExtensions","inherits","childCtor","parentCtor","create","constructor","uidCounter_","getUid","obj","ol_uid","AssertionError","code","split","message","Error","ol_AssertionError","CollectionEventType","ObjectEventType","obj_assign","assign","target","var_sources","undefined","TypeError","output","arguments","source","key","getValues","values","isEmpty","findListener","listeners","listener","opt_this","opt_setDeleteIndex","listenerObj","bindTo","deleteIndex","getListeners","type","listenerMap","ol_lm","getListenerMap","removeListeners","removeEventListener","boundListener","keys","listen","opt_once","callOnce","addEventListener","evt","unlistenByKey","bindListener","listenOnce","unlisten","TRUE","FALSE","UNDEFINED","Disposable","disposed_","dispose","disposeInternal","ol_Disposable","Event","propagationStopped","stopPropagation","preventDefault","events_Event","EventTarget","pendingRemovals_","dispatching_","listeners_","dispatchEvent","event","propagate","pendingRemovals","unlistenAll","hasListener","opt_type","events_EventTarget","EventType","CHANGE","CLEAR","CONTEXTMENU","CLICK","DBLCLICK","DRAGENTER","DRAGOVER","DROP","ERROR","KEYDOWN","KEYPRESS","LOAD","MOUSEDOWN","MOUSEMOVE","MOUSEOUT","MOUSEUP","MOUSEWHEEL","MSPOINTERDOWN","RESIZE","TOUCHSTART","TOUCHMOVE","TOUCHEND","WHEEL","Observable","revision_","changed","getRevision","on","Array","isArray","once","un","ol_Observable","ObjectEvent","oldValue","BaseObject","opt_values","values_","setProperties","changeEventTypeCache","getChangeEventType","getKeys","getProperties","notify","eventType","set","opt_silent","unset","ol_Object","Property","CollectionEvent","opt_element","element","Collection","opt_array","opt_options","options","unique_","unique","array_","assertUnique_","updateLength_","getLength","forEach","f","array","getArray","insertAt","elem","removeAt","prev","setAt","opt_except","ol_Collection","MapEvent","map","opt_frameState","frameState","ol_MapEvent","MapBrowserEvent","browserEvent","opt_dragging","originalEvent","pixel","getEventPixel","coordinate","getCoordinateFromPixel","dragging","ol_MapBrowserEvent","ua","navigator","userAgent","toLowerCase","FIREFOX","SAFARI","WEBKIT","MAC","DEVICE_PIXEL_RATIO","devicePixelRatio","CANVAS_LINE_DASH","has","setLineDash","TOUCH","POINTER","MSPOINTER","MapBrowserEventType","SINGLECLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","MapBrowserPointerEvent","pointerEvent","ol_MapBrowserPointerEvent","pointer_EventType","EventSource","dispatcher","mapping","mapping_","getEvents","getHandlerForEvent","pointer_EventSource","MouseSource","mousedown","mousemove","mouseup","mouseover","mouseout","pointerMap","lastTouches","POINTER_ID","POINTER_TYPE","prepareEvent","inEvent","cloneEvent","pd","pointerId","isPrimary","pointerType","isEventSimulatedFromTouch_","lts","x","clientX","y","clientY","t","dx","abs","dy","toString","cancel","down","move","button","up","cleanupMouse","enterOver","leaveOut","pointer_MouseSource","MsSource","MSPointerDown","msPointerDown","MSPointerMove","msPointerMove","MSPointerUp","msPointerUp","MSPointerOut","msPointerOut","MSPointerOver","msPointerOver","MSPointerCancel","msPointerCancel","MSGotPointerCapture","msGotPointerCapture","MSLostPointerCapture","msLostPointerCapture","POINTER_TYPES","prepareEvent_","cleanup","makeEvent","pointer_MsSource","NativeSource","pointerdown","pointerDown","pointermove","pointerMove","pointerup","pointerUp","pointerout","pointerOut","pointerover","pointerOver","pointercancel","pointerCancel","gotpointercapture","gotPointerCapture","lostpointercapture","lostPointerCapture","fireNativeEvent","pointer_NativeSource","PointerEvent","opt_eventDict","eventDict","buttons","getButtons_","pressure","getPressure_","bubbles","cancelable","view","detail","screenX","screenY","ctrlKey","altKey","shiftKey","metaKey","relatedTarget","width","tiltX","tiltY","hwTimestamp","HAS_BUTTONS","which","ev","MouseEvent","pointer_PointerEvent","numberSafeCompareFunction","includes","linearFindNearest","direction","reverseSubArray","begin","end","tmp","extension","equals","arr1","arr2","len1","TouchSource","mouseSource","touchstart","touchmove","touchend","touchcancel","firstTouchId_","clickCount_","resetId_","dedupTimeout_","isPrimaryTouch_","inTouch","identifier","setPrimaryTouch_","count","cancelResetClickCount_","removePrimaryPointer_","inPointer","resetClickCount_","setTimeout","resetClickCountHandler_","bind","clearTimeout","touchToPointer_","webkitRadiusX","radiusX","webkitRadiusY","radiusY","webkitForce","force","processTouches_","inFunction","touches","changedTouches","pointer","findTouch_","touchList","searchId","vacuumTouches_","out","cancelOut_","dedupSynthMouse_","overDown_","outTarget","over","enter","moveOverOut_","outEvent","upOut_","leave","cleanUpPointer_","lt","found","array_remove","pointer_TouchSource","PointerEventHandler","element_","eventMap_","eventSourceList_","registerSources","CLONE_PROPS","registerSource","register_","newEvents","handler","eventSource","addEvents_","unregister_","removeEvents_","eventHandler_","events","eventName","eventCopy","fireEvent","contains_","container","contained","inType","wrapMouseEvent","pointer_PointerEventHandler","MapBrowserEventHandler","moveTolerance","map_","clickTimeoutId_","dragging_","dragListenerKeys_","moveTolerance_","down_","getViewport","activePointers_","trackedTouches_","pointerEventHandler_","documentPointerEventHandler_","pointerdownListenerKey_","handlePointerDown_","relayedListenerKey_","relayEvent_","emulateClick_","newEvent","updateActivePointers_","handlePointerUp_","isMouseActionButton_","handlePointerMove_","isMoving_","ol_MapBrowserEventHandler","MapEventType","MapProperty","LAYERGROUP","SIZE","TARGET","VIEW","TileState","assert","assertion","errorCode","PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getCount","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isKeyQueued","isQueued","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","structs_PriorityQueue","TileQueue","tilePriorityFunction","tileChangeCallback","getKey","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","handleTileChange","getTilesLoading","tile","state","getState","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","abortedTiles","ol_TileQueue","DEFAULT_MAX_ZOOM","DEFAULT_TILE_SIZE","clamp","cosh","exp","squaredSegmentDistance","x1","y1","x2","y2","math_squaredDistance","toRadians","angleInDegrees","PI","modulo","lerp","none","center","disable","rotation","delta","rotationconstraint_none","ViewHint","ANIMATING","INTERACTING","ViewProperty","coordinate_add","closestOnSegment","segment","x0","y0","start","along","coordinate_equals","coordinate1","coordinate2","rotate","angle","cosAngle","cos","sinAngle","sin","coordinate_scale","scale","coordinate_squaredDistance","coord1","coord2","coordinate_distance","squaredDistanceToSegment","easeIn","easeOut","inAndOut","linear","Corner","BOTTOM_LEFT","BOTTOM_RIGHT","TOP_LEFT","TOP_RIGHT","Relationship","UNKNOWN","INTERSECTING","ABOVE","RIGHT","BELOW","LEFT","boundingExtent","coordinates","extent","createEmpty","extendCoordinate","buffer","opt_extent","clone","closestSquaredDistanceXY","containsCoordinate","containsXY","containsExtent","extent1","extent2","coordinateRelationship","relationship","createOrUpdate","createOrUpdateEmpty","createOrUpdateFromCoordinate","createOrUpdateFromFlatCoordinates","flatCoordinates","offset","stride","extendFlatCoordinates","extent_equals","extent_extend","extendCoordinates","extendXY","forEachCorner","callback","val","getBottomLeft","getBottomRight","getTopRight","getTopLeft","getArea","extent_isEmpty","getWidth","getHeight","getCenter","getForViewAndSize","resolution","size","cosRotation","sinRotation","xCos","xSin","yCos","ySin","x3","y3","getIntersection","intersection","extent_intersects","GeometryType","POINT","LINE_STRING","LINEAR_RING","POLYGON","MULTI_POINT","MULTI_LINE_STRING","MULTI_POLYGON","GEOMETRY_COLLECTION","CIRCLE","GeometryLayout","XY","XYZ","XYM","XYZM","transform2D","transform","opt_dest","dest","DEFAULT_RADIUS","getDistance","c1","c2","opt_radius","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","Units","DEGREES","FEET","METERS","PIXELS","TILE_PIXELS","USFEET","METERS_PER_UNIT","proj_Units","Projection","code_","units_","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","canWrapX","getCode","getExtent","getUnits","getMetersPerUnit","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setExtent","setWorldExtent","setGetPointResolution","func","getPointResolutionFunc","proj_Projection","RADIUS","HALF_SIZE","EXTENT","WORLD_EXTENT","EPSG3857Projection","units","point","PROJECTIONS","fromEPSG4326","input","opt_output","opt_dimension","dimension","halfSize","tan","epsg3857_toEPSG4326","atan","epsg4326_EXTENT","epsg4326_METERS_PER_UNIT","EPSG4326Projection","opt_axisOrientation","epsg4326_PROJECTIONS","projections_cache","transforms","transforms_add","destination","transformFn","sourceCode","destinationCode","cloneTransform","identityTransform","addProjection","projection","projections_add","proj_get","projectionLike","opt_units","pointResolution","toEPSG4326","getTransformFromProjections","vertices","addEquivalentProjections","projections","addProjections","createProjection","defaultCode","equivalent","projection1","projection2","equalUnits","sourceProjection","destinationProjection","transformFunc","transforms_get","getTransform","proj_transform","projections2","forwardTransform","inverseTransform","tmp_","multiply","transform1","transform2","a1","b1","d1","e1","f1","a2","b2","d2","e2","f2","transform_set","setFromArray","ol_transform_scale","transform_translate","compose","dx1","dy1","sx","sy","dx2","dy2","Geometry","extentRevision_","simplifiedGeometryCache","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","tmpTransform","closestPointXY","closestPoint","minSquaredDistance","getClosestPoint","opt_closestPoint","NaN","intersectsCoordinate","computeExtent","returnOrUpdate","anchor","opt_sy","opt_anchor","simplify","tolerance","getSimplifiedGeometry","squaredTolerance","getType","applyTransform","intersectsExtent","translate","deltaX","deltaY","inCoordinates","outCoordinates","pixelExtent","projectedExtent","geom_Geometry","SimpleGeometry","layout","getStrideForLayout","getCoordinates","getFirstCoordinate","getFlatCoordinates","getLastCoordinate","getLayout","simplifiedGeometry","getSimplifiedGeometryInternal","getStride","setFlatCoordinatesInternal","setCoordinates","opt_layout","setLayout","nesting","getLayoutForStride","anchorX","anchorY","transform_rotate","transform_scale","geom_SimpleGeometry","area_linearRing","twiceArea","area_linearRings","ends","assignClosest","offset1","offset2","maxSquaredDelta","squaredDelta","arrayMaxSquaredDelta","assignClosestPoint","maxDelta","isRing","opt_tmpPoint","squaredDistance","tmpPoint","assignClosestArrayPoint","deflateCoordinate","deflateCoordinates","deflateCoordinatesArray","coordinatess","opt_ends","jj","inflateCoordinates","opt_coordinates","inflateCoordinatesArray","opt_coordinatess","inflateMultiCoordinatesArray","endss","opt_coordinatesss","coordinatesss","douglasPeucker","simplifiedFlatCoordinates","simplifiedOffset","markers","last","first","maxSquaredDistance","douglasPeuckerArray","simplifiedEnds","snap","round","quantize","quantizeArray","LinearRing","maxDelta_","maxDeltaRevision_","linearRing","setFlatCoordinates","simplifiedLinearRing","geom_LinearRing","Point","geom_Point","linearRingContainsExtent","linearRingContainsXY","wn","linearRingsContainsXY","getInteriorPointOfArray","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","segmentLength","isNaN","point1","point2","ret","intersectsLineString","coordinatesExtent","startRel","endRel","startX","startY","endX","endY","slope","intersectsSegment","intersectsLinearRingArray","intersectsLinearRing","reverse_coordinates","linearRingIsClockwise","edge","linearRingIsOriented","opt_right","isClockwise","orientLinearRings","orientLinearRingsArray","Polygon","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","appendLinearRing","polygon","getOrientedFlatCoordinates","getEnds","getFlatInteriorPoint","flatCenter","getInteriorPoint","getLinearRingCount","getLinearRing","getLinearRings","linearRings","simplifiedPolygon","geom_Polygon","fromExtent","fromCircle","circle","opt_sides","opt_angle","sides","arrayLength","makeRegular","getRadius","startAngle","DEFAULT_MIN_ZOOM","View","hints_","animations_","updateAnimationKey_","updateAnimations_","projection_","applyOptions_","isNoopAnimation","animation","sourceCenter","targetCenter","sourceResolution","targetResolution","sourceRotation","targetRotation","properties","resolutionConstraintInfo","resolutionConstraint","maxResolution","minResolution","minZoom","maxZoom","zoomFactor","resolutions","z","floor","power","defaultMaxResolution","defaultMinResolution","opt_maxLevel","oldLevel","newLevel","createSnapToPower","constraint","createResolutionConstraint","maxResolution_","minResolution_","zoomFactor_","resolutions_","minZoom_","centerConstraint","createCenterConstraint","rotationConstraint","enableRotation","constrainRotation","opt_tolerance","createSnapToZero","theta","createSnapToN","createRotationConstraint","constraints_","zoom","constrainResolution","Number","getResolution","options_","getUpdatedOptions_","newOptions","getZoom","getRotation","animate","var_args","animationCount","isDef","setCenter","setZoom","setRotation","Date","now","series","complete","duration","easing","setHint","getAnimating","getInteracting","cancelAnimations","cancelAnimationFrame","more","seriesComplete","elapsed","fraction","progress","calculateCenterZoom","calculateCenterRotate","filter","Boolean","requestAnimationFrame","currentCenter","currentResolution","getSizeFromViewport_","selector","querySelector","metrics","getComputedStyle","parseInt","constrainCenter","opt_delta","opt_direction","getConstraints","getHints","opt_hints","calculateExtent","opt_size","getMaxResolution","getMinResolution","getMaxZoom","getZoomForResolution","setMaxZoom","getMinZoom","setMinZoom","getProjection","getResolutions","getResolutionForExtent","xResolution","yResolution","getResolutionForValueFunction","opt_power","getValueForResolutionFunction","nearest","getResolutionForZoom","fit","geometryOrExtent","geometry","padding","coords","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","constrainedResolution","centerRotX","centerRotY","setResolution","centerOn","position","centerX","centerY","hint","ol_View","createCanvasContext2D","opt_width","opt_height","replaceNode","oldNode","parentNode","replaceChild","removeNode","removeChild","layer_Property","BaseLayer","opacity","visible","zIndex","state_","layer","managed","getLayerState","getOpacity","sourceState","getSourceState","getVisible","getZIndex","getLayersArray","getLayerStatesArray","opt_states","setMaxResolution","setMinResolution","setOpacity","setVisible","setZIndex","zindex","Base","State","Group_Property","LayerGroup","baseOptions","layers","layersListenerKeys_","listenerKeys_","handleLayersChanged_","setLayers","handleLayerChange_","getLayers","handleLayersAdd_","handleLayersRemove_","id","layersArray","collectionEvent","states","pos","ownLayerState","layerState","Group","toSize","PluggableMap","optionsInternal","keyboardEventTarget","getElementById","layerGroup","controls","interactions","overlays","createOptionsInternal","maxTilesLoading_","maxTilesLoading","loadTilesWhileAnimating_","loadTilesWhileAnimating","loadTilesWhileInteracting_","loadTilesWhileInteracting","pixelRatio_","pixelRatio","animationDelayKey_","animationDelay_","renderFrame_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","className","style","overflow","msTouchAction","touchAction","overlayContainer_","appendChild","overlayContainerStopEvent_","overlayEvents","mapBrowserEventHandler_","handleMapBrowserEvent","keyboardEventTarget_","keyHandlerKeys_","handleBrowserEvent","overlays_","overlayIdIndex_","renderer_","createRenderer","handleResize_","focus_","postRenderFunctions_","tileQueue_","getTilePriority","handleTileChange_","skippedFeatureUids_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","control","setMap","interaction","addOverlayInternal_","getId","addControl","getControls","addInteraction","getInteractions","addLayer","getLayerGroup","addOverlay","overlay","getOverlays","setTarget","forEachFeatureAtPixel","hitTolerance","layerFilter","forEachFeatureAtCoordinate","getFeaturesAtPixel","features","feature","forEachLayerAtPixel","opt_layerFilter","opt_this2","thisArg","thisArg2","hasFeatureAtPixel","hasFeatureAtCoordinate","getEventCoordinate","viewportPosition","getBoundingClientRect","eventPosition","top","getTarget","getTargetElement","pixelToCoordinateTransform","getOverlayById","getPixelFromCoordinate","coordinateToPixelTransform","getRenderer","getSize","getView","getOverlayContainer","getOverlayContainerStopEvent","tileSourceKey","tileCenter","tileResolution","wantedTiles","focus","mapBrowserEvent","interactionsArray","getActive","handleEvent","handlePostRender","tileQueue","hints","viewHints","postRenderFunctions","render","targetElement","updateSize","removeLayerRenderers","handleViewPropertyChanged_","setAttribute","isRendered","renderSync","removeControl","removeInteraction","removeLayer","removeOverlay","time","viewState","previousFrameState","hasArea","layerStatesArray","layerStates","pixelResolution","skippedFeatureUids","usedTiles","renderFrame","setLayerGroup","setSize","setView","skipFeature","featureUid","computedStyle","offsetWidth","parseFloat","offsetHeight","unskipFeature","ol_PluggableMap","Control","target_","listenerKeys","getMap","control_Control","CLASS_HIDDEN","getFontFamilies","cache","font","family","fontFamily","render_EventType","Layer","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","handleSourcePropertyChange_","setSource","visibleAtResolution","getSource","handleSourceChange_","layer_Layer","Attribution","ulElement_","collapsed_","collapsed","collapsible_","collapsible","tipLabel","collapseLabel","collapseLabel_","textContent","label","label_","activeLabel","title","handleClick_","cssClasses","Attribution_render","renderedAttributions_","renderedVisible_","mapEvent","updateElement_","getSourceAttributions_","lookup","visibleAttributions","attributionGetter","getAttributions","attributions","display","lastChild","removeChildren","innerHTML","handleToggle_","classList","toggle","getCollapsible","setCollapsible","setCollapsed","getCollapsed","control_Attribution","Rotate","add","callResetNorth_","resetNorth","Rotate_render","duration_","autoHide_","autoHide","rotation_","msTransform","webkitTransform","resetNorth_","control_Rotate","Zoom","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","zoomByDelta_","newResolution","control_Zoom","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","update","lastIndex","firstIndex","getAngle","ol_Kinetic","interaction_Property","Interaction","setActive","Interaction_rotate","opt_duration","rotateWithoutConstraints","currentRotation","zoomWithoutConstraints","zoomByDelta","active","interaction_Interaction","DoubleClickZoom","delta_","stopEvent","interaction_DoubleClickZoom","altShiftKeysOnly","always","mouseActionButton","never","singleClick","noModifierKeys","shiftKeyOnly","targetNotEditable","tagName","mouseOnly","primaryAction","handleDragEvent","handleUpEvent","handleDownEvent","handleMoveEvent","PointerInteraction","Pointer_handleEvent","handleDownEvent_","handleDragEvent_","handleMoveEvent_","handleUpEvent_","handlingDownUpSequence","trackedPointers_","targetPointers","Pointer_centroid","pointerEvents","updateTrackedPointers_","handledUp","handled","shouldStopEvent","isPointerDraggingEvent","Pointer","DragPan","DragPan_handleDownEvent","DragPan_handleDragEvent","DragPan_handleUpEvent","kinetic_","kinetic","lastCentroid","lastPointersCount_","condition_","condition","noKinetic_","centroid","distance","centerpx","interaction_DragPan","DragRotate","DragRotate_handleDownEvent","DragRotate_handleDragEvent","DragRotate_handleUpEvent","lastAngle_","interaction_DragRotate","RenderBox","geometry_","startPixel_","endPixel_","render_","startPixel","endPixel","setPixels","createOrUpdateGeometry","getGeometry","Box","DragBoxEventType","BOXSTART","BOXDRAG","BOXEND","DragBoxEvent","DragBox","DragBox_handleDownEvent","DragBox_handleDragEvent","DragBox_handleUpEvent","box_","minArea_","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","onBoxEnd","interaction_DragBox","DragZoom","out_","mapExtent","boxPixelExtent","scaleFromCenter","interaction_DragZoom","KeyCode","UP","DOWN","KeyboardPan","KeyboardPan_handleEvent","defaultCondition_","pixelDelta_","pixelDelta","keyCode","mapUnitsDelta","pan","interaction_KeyboardPan","KeyboardZoom","KeyboardZoom_handleEvent","charCode","charCodeAt","interaction_KeyboardZoom","Mode","TRACKPAD","MouseWheelZoom","MouseWheelZoom_handleEvent","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","trackpadDeltaPerZoom_","trackpadZoomBuffer_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","wheelDeltaY","decrementInteractingHint_","rebound","timeLeft","handleWheelZoom_","setMouseAnchor","interaction_MouseWheelZoom","PinchRotate","PinchRotate_handleDownEvent","PinchRotate_handleDragEvent","PinchRotate_handleUpEvent","anchor_","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","interaction_PinchRotate","PinchZoom","PinchZoom_handleDownEvent","PinchZoom_handleDragEvent","PinchZoom_handleUpEvent","lastDistance_","lastScaleDelta_","scaleDelta","interaction_PinchZoom","DragAndDropEventType","DragAndDropEvent","file","opt_features","opt_projection","DragAndDrop","formatConstructors_","formatConstructors","dropListenKeys_","source_","handleDrop","files","dataTransfer","reader","FileReader","handleResult_","readAsText","handleStop","dropEffect","formatConstructor","tryReadFeatures_","featureProjection","addFeatures","registerListeners_","dropArea","unregisterListeners_","text","readFeatures","DragRotateAndZoom","DragRotateAndZoom_handleDownEvent","DragRotateAndZoom_handleDragEvent","DragRotateAndZoom_handleUpEvent","lastMagnitude_","magnitude","angleDelta","HEX_COLOR_RE_","NAMED_COLOR_RE_","asString","color","color_toString","cacheSize","normalize","g","asColorLike","CanvasPattern","CanvasGradient","isColorLike","ImageState","IDLE","LOADING","LOADED","LRUCache","opt_highWaterMark","highWaterMark","count_","entries_","oldest_","newest_","canExpireCache","containsKey","entry","value_","key_","newer","older","peekLast","peekLastKey","peekFirstKey","replace","prune","structs_LRUCache","defaultFillStyle","defaultLineDash","defaultStrokeStyle","defaultPadding","labelCache","checkedFonts","measureContext","textHeights","checkFont","retries","checked","referenceFonts","interval","referenceWidth","isAvailable","getMeasureContext","available","referenceFont","measureText","check","done","clearInterval","fontSpec","fontFamilies","setInterval","measureTextHeight","span","heights","body","measureTextWidth","rotateAtOffset","offsetX","offsetY","resetTransform","drawImage","image","originX","originY","w","h","alpha","globalAlpha","setTransform","ImageStyle","opacity_","rotateWithView_","rotateWithView","scale_","snapToPixel_","snapToPixel","getRotateWithView","getScale","getSnapToPixel","getAnchor","getImage","getHitDetectionImage","getImageState","getImageSize","getHitDetectionImageSize","getOrigin","setRotateWithView","setScale","setSnapToPixel","listenImageChange","unlistenImageChange","style_Image","RegularShape","checksums_","canvas_","hitDetectionCanvas_","fill_","fill","origin_","points","radius_","radius1","radius2_","radius2","stroke_","stroke","size_","imageSize_","hitDetectionImageSize_","atlasManager_","atlasManager","getFill","getPoints","getRadius2","getStroke","imageSize","strokeStyle","lineCap","lineJoin","miterLimit","lineDash","lineDashOffset","strokeWidth","getColor","getLineDash","getLineDashOffset","getLineJoin","getLineCap","getMiterLimit","renderOptions","draw_","createHitDetectionCanvas_","hasCustomHitDetectionImage","renderHitDetectionCallback","drawHitDetectionCanvas_","getChecksum","info","hitImage","angle0","radiusC","beginPath","arc","lineTo","fillStyle","lineWidth","closePath","strokeChecksum","fillChecksum","checksum","style_RegularShape","CircleStyle","setRadius","Circle","Fill","color_","checksum_","setColor","style_Fill","Stroke","lineCap_","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","width_","setLineCap","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","style_Stroke","Style","geometryFunction_","defaultGeometryFunction","setGeometry","image_","renderer","text_","zIndex_","getText","setRenderer","getGeometryFunction","setFill","setImage","setStroke","setText","defaultStyles","createDefaultStyle","createEditingStyle","styles","white","blue","concat","style_Style","Feature","opt_geometryOrProperties","id_","geometryName_","style_","styleFunction_","geometryChangeKey_","handleGeometryChanged_","setGeometryName","getGeometryName","getStyle","setStyle","getStyleFunction","handleGeometryChange_","createStyleFunction","setId","ol_Feature","Circle_Circle","setCenterAndRadius","getRadiusSquared_","geom_Circle","interpolatePoint","pointY","cumulativeLengths","haystack","needle","opt_comparator","cmp","comparator","low","high","binarySearch","lineStringCoordinateAtM","extrapolate","lo","hi","m0","lineStringLength","LineString","flatMidpoint_","flatMidpointRevision_","appendCoordinate","lineString","forEachSegment","getCoordinateAtM","opt_extrapolate","getCoordinateAt","getFlatMidpoint","simplifiedLineString","geom_LineString","MultiLineString","appendLineString","multiLineString","opt_interpolate","interpolate","lineStringsCoordinateAtM","getLineString","getLineStrings","lineStrings","getFlatMidpoints","midpoints","simplifiedMultiLineString","intersectsLineStringArray","setLineStrings","geom_MultiLineString","MultiPoint","appendPoint","multiPoint","getPoint","geom_MultiPoint","MultiPolygon","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","appendPolygon","multiPolygon","newEndss","multiArrayMaxSquaredDelta","assignClosestMultiArrayPoint","linearRingssContainsXY","linearRingss","getEndss","getFlatInteriorPoints","center_linearRingss","interiorPoints","getInteriorPointsOfMultiArray","getInteriorPoints","linearRingsAreOriented","simplifiedEndss","quantizeMultiArray","simplifiedMultiPolygon","getPolygon","prevEnds","getPolygons","polygons","intersectsLinearRingMultiArray","opt_endss","deflateMultiCoordinatesArray","lastEnds","setPolygons","geom_MultiPolygon","LayerType","IMAGE","TILE","VECTOR_TILE","VECTOR","VectorRenderType","Vector_Property","VectorLayer","renderBuffer","updateWhileAnimating","updateWhileInteracting","declutter_","declutter","renderBuffer_","updateWhileAnimating_","updateWhileInteracting_","renderMode_","renderMode","getDeclutter","setDeclutter","getRenderBuffer","getRenderOrder","getUpdateWhileAnimating","getUpdateWhileInteracting","setRenderOrder","renderOrder","styleFunction","toFunction","getRenderMode","Vector","FormatType","ARRAY_BUFFER","JSON","TEXT","XML","featureloader_xhr","url","success","failure","xhr","XMLHttpRequest","open","responseType","onload","status","responseText","responseXML","DOMParser","parseFromString","readProjection","getLastExtent","onerror","send","loadFeaturesXhr","dataProjection","loadingstrategy_all","Source","attributions_","adaptAttributions_","wrapX_","wrapX","attributionLike","getWrapX","refresh","setAttributions","setState","source_Source","VectorEventType","RBush","opt_maxEntries","rbush_","rbush_default","items_","extents","uid","getAll","getInExtent","forEach_","forEachInExtent","structs_RBush","VectorSourceEvent","opt_feature","VectorSource","loader_","format_","overlaps_","overlaps","url_","loader","strategy_","strategy","useSpatialIndex","collection","featuresRtree_","loadedExtentsRtree_","nullGeometryFeatures_","idIndex_","undefIdIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","handleFeatureChange_","valid","newFeatures","geometryFeatures","modifyingCollection","removeFeature","opt_fast","featureId","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureInExtent","forEachFeatureIntersectingExtent","getFeaturesCollection","getFeatures","getFeaturesAtCoordinate","getFeaturesInExtent","getClosestFeatureToCoordinate","opt_filter","closestFeature","previousMinSquaredDistance","minDistance","getFeatureById","getFormat","getOverlaps","getUrl","sid","removeFromIdIndex_","hasFeature","loadFeatures","loadedExtentsRtree","extentsToLoad","extentToLoad","removeLoadedExtent","removed","setLoader","source_Vector","Draw_Mode","DrawEventType","DrawEvent","Draw","Draw_handleDownEvent","Draw_handleEvent","Draw_handleUpEvent","shouldHandle_","downPx_","downTimeout_","lastDragTime_","freehand_","features_","snapTolerance_","snapTolerance","type_","mode","getMode","stopClick_","stopClick","minPoints_","minPoints","maxPoints_","maxPoints","finishCondition_","finishCondition","geometryFunction","opt_geometry","squaredLength","Constructor","dragVertexDelay_","dragVertexDelay","finishCoordinate_","sketchFeature_","sketchPoint_","sketchCoords_","sketchLine_","sketchLineCoords_","squaredClickTolerance_","clickTolerance","overlay_","getDefaultStyleFunction","geometryName","freehandCondition_","freehand","freehandCondition","updateState_","pass","addToDrawing_","startDrawing_","circleMode","finishDrawing","atFinish_","abortDrawing_","downPx","clickPx","modifyDrawing_","createOrUpdateSketchPoint_","at","potentiallyDone","potentiallyFinishCoordinates","finishCoordinate","finishPixel","updateSketchFeatures_","sketchLineGeom","ring","removeLastPoint","sketchFeature","sketchFeatures","overlaySource","ExtentEventType","ExtentInteractionEvent","ExtentInteraction","pointerHandler_","pixelTolerance_","pixelTolerance","snappedToVertex_","extentFeature_","vertexFeature_","Extent_handleDownEvent","Extent_handleDragEvent","Extent_handleEvent","Extent_handleUpEvent","extentOverlay_","boxStyle","getDefaultExtentStyleFunction","vertexOverlay_","pointerStyle","getDefaultPointerStyleFunction","vertex","snapToVertex_","getOpposingPoint","x_","y_","getPointHandler","getEdgeHandler","pixelCoordinate","createOrUpdatePointerFeature_","fixedPoint","fixedP1","fixedP2","sortByDistance","segments","getSegments","closestSegment","vertexPixel","pixel1","pixel2","squaredDist1","squaredDist2","dist","createOrUpdateExtentFeature_","extentFeature","vertexFeature","ModifyEventType","MODIFYSTART","MODIFYEND","ModifyEvent","mapBrowserPointerEvent","Modify","Modify_handleDownEvent","Modify_handleDragEvent","Modify_handleEvent","Modify_handleUpEvent","defaultDeleteCondition_","altKeyOnly","deleteCondition_","deleteCondition","insertVertexCondition_","insertVertexCondition","vertexSegments_","lastPixel_","ignoreNextSingleClick_","modified_","rBush_","changingFeature_","dragSegments_","Modify_getDefaultStyleFunction","SEGMENT_WRITERS_","writePointGeometry_","writeLineStringGeometry_","writePolygonGeometry_","writeMultiPointGeometry_","writeMultiLineStringGeometry_","writeMultiPolygonGeometry_","writeCircleGeometry_","GeometryCollection","writeGeometryCollectionGeometry_","handleSourceAdd_","handleSourceRemove_","addFeature_","handleFeatureAdd_","handleFeatureRemove_","lastPointerEvent_","CIRCLE_CENTER_INDEX","CIRCLE_CIRCUMFERENCE_INDEX","compareIndexes","handlePointerAtPixel_","insertVertices","vertexExtent","segmentDataMatches","componentSegments","segmentDataMatch","depth","closestOnSegmentData","willModifyFeatures_","insertVertex_","dragSegment","segmentData","setGeometryCoordinates_","createOrUpdateVertexFeature_","centerSegmentData","featureSegments","circumferenceSegmentData","removePoint","pointDistanceToSegmentDataSquared","pointCoordinates","circleGeometry","distanceToCenterSquared","distanceToCircumference","removeFeature_","removeFeatureSegmentData_","rBush","nodesToRemove","lines","rings","kk","geometries","getGeometriesArray","box","nodes","vertexSegments","rTree","updateSegmentIndices_","newSegmentData","newSegmentData2","removeVertex_","dragSegments","segmentsByFeature","component","newIndex","deleted","SelectEventType","SELECT","SelectEvent","selected","deselected","Select","Select_handleEvent","addCondition_","addCondition","removeCondition_","removeCondition","toggleCondition_","toggleCondition","multi_","multi","filter_","hitTolerance_","featureOverlay","Select_getDefaultStyleFunction","featureOverlay_","layerFilter_","featureLayerAssociation_","addFeatureLayerAssociation_","removeFeatureLayerAssociation_","getHitTolerance","getLayer","setHitTolerance","currentMap","selectedFeatures","Snap","Snap_handleEvent","Snap_handleUpEvent","vertex_","edge_","featuresListenerKeys_","featureChangeListenerKeys_","indexedFeaturesExtents_","pendingFeatures_","pixelCoordinate_","sortByDistance_","deltaA","deltaB","snapTo","snapped","featuresToUpdate","updateFeature_","opt_listen","register","feature_uid","segmentWriter","forEachFeatureAdd_","forEachFeatureRemove_","getFeatures_","opt_unlisten","unregister","snappedToVertex","isCircle","closestOnCircle","TranslateEventType","TRANSLATESTART","TRANSLATING","TRANSLATEEND","TranslateEvent","Translate","Translate_handleDownEvent","Translate_handleDragEvent","Translate_handleMoveEvent","Translate_handleUpEvent","lastCoordinate_","lastFeature_","handleActiveChanged_","featuresAtPixel_","newCoordinate","geom","oldMap","ImageBase","getPixelRatio","ol_ImageBase","ImageCanvas","opt_loader","error_","getError","handleLoad_","err","ol_ImageCanvas","RenderEvent","opt_vectorContext","opt_context","opt_glContext","vectorContext","glContext","render_Event","VectorContext","drawCustom","drawGeometry","drawCircle","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","setImageStyle","imageStyle","opt_declutterGroup","setTextStyle","textStyle","render_VectorContext","CanvasImmediateRenderer","viewRotation","context_","transform_","viewRotation_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageSnapToPixel_","imageWidth_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textScale_","textFillState_","textStrokeState_","textState_","pixelCoordinates_","tmpLocalTransform_","drawImages_","pixelCoordinates","localTransform","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","moveTo","drawRings_","simpleGeometry","transformGeom2D","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","flatInteriorPoints","fillState","contextFillState","strokeState","contextStrokeState","textState","contextTextState","textAlign","textBaseline","fillStyleColor","strokeStyleColor","strokeStyleLineCap","strokeStyleLineDash","strokeStyleLineDashOffset","strokeStyleLineJoin","strokeStyleWidth","strokeStyleMiterLimit","imageAnchor","imageImage","imageOrigin","textFillStyle","textFillStyleColor","textStrokeStyle","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","getFont","textOffsetX","getOffsetX","textOffsetY","getOffsetY","textRotateWithView","textRotation","textScale","textText","textTextAlign","getTextAlign","textTextBaseline","getTextBaseline","Immediate","IconImageCache","cache_","cacheSize_","maxCacheSize_","src","crossOrigin","expire","iconImage","maxCacheSize","shared","MapRenderer","layerRenderers_","layerRendererListeners_","layerRendererConstructors_","expireIconCache","sortByZIndex","state1","state2","registerLayerRenderers","constructors","getLayerRendererConstructors","calculateMatrices2D","det","mat","invert","removeLayerRendererByKey_","viewResolution","translatedCoordinate","projectionExtent","worldWidth","layerRenderer","getLayerRenderer","layerKey","candidate","handleLayerRendererChange_","getLayerRendererByKey","getLayerRenderers","removeUnusedLayerRenderers_","scheduleExpireIconCache","scheduleRemoveUnusedLayerRenderers","Map","layerRendererConstructors","CanvasMapRenderer","insertBefore","childNodes","dispatchComposeEvent_","composeEvent","clearRect","compareFnc","stableSort","save","prepareFrame","composeFrame","restore","numLayers","forEachLayerAtCoordinate","ctor","canvas_Map","LayerRenderer","layer_","createLoadedTileFinder","tiles","tileRange","forEachLoadedTile","tileCoord","handleImageChange_","renderIfReadyAndVisible","loadImage","imageState","scheduleExpireCache","tileSource","postRenderFunction","expireCache","updateUsedTiles","zKey","manageTilePyramid","currentZ","preload","opt_tileCallback","getTileRangeForExtentAndZ","getTile","getTileCoordCenter","useTile","renderer_Layer","CanvasLayerRenderer","renderedResolution","clip","topLeft","topRight","bottomRight","bottomLeft","opt_transform","postCompose","preCompose","dispatchRenderEvent","canvas_Layer","IntermediateCanvasRenderer","coordinateToCanvasPixelTransform","hitCanvasContext_","clipped","imageTransform","getImageTransform","dw","dh","imageData","getImageData","IntermediateCanvas","CanvasImageLayerRenderer","imageLayer","imageTransform_","skippedFeatures_","vectorRenderer_","mapRenderer","viewCenter","imageSource","vectorRenderer","renderedExtent","skippedFeatures","imageFrameState","newSkippedFeatures","replayGroupChanged","imageExtent","imageResolution","imagePixelRatio","ImageLayer","TileRange","TileRange_createOrUpdate","containsTileRange","ol_TileRange","CanvasTileLayerRenderer","tileLayer","oversampling_","renderedExtent_","renderedRevision","renderedTiles","newTiles_","tmpExtent","tmpTileRange_","zDirection","isDrawableTile_","tileState","useInterimTilesOnError","getUseInterimTilesOnError","getPreload","getInterimTile","sourceRevision","getTileGridForProjection","getZForResolution","oversampling","getTileRangeExtent","tilePixelRatio","getTilePixelRatio","tilesToDrawByZ","findLoadedTiles","animatingOrInteracting","tmpTileRange","inTransition","getAlpha","childTileRange","getTileCoordChildTileRange","covered","forEachTileCoordParentTileRange","tilePixelSize","getTilePixelSize","zs","currentScale","currentTilePixelSize","tileExtent","tileGutter","tilesToDraw","getGutter","tileCoordKey","getTileCoordExtent","getTileCoord","drawTileImage","gutter","transition","getOpaque","alphaChanged","endTransition","TileLayer","ReplayGroup","getReplay","replayType","render_ReplayGroup","ReplayType","DEFAULT","drawTextOnPath","measure","startM","maxAngle","reverse","numChars","previousAngle","segmentM","chunk","chunkLength","char","charAt","charLength","charM","segmentPos","unshift","Instruction","BEGIN_GEOMETRY","BEGIN_PATH","CLOSE_PATH","CUSTOM","DRAW_CHARS","DRAW_IMAGE","END_GEOMETRY","FILL","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","STROKE","Instruction_fillInstruction","Instruction_strokeInstruction","beginPathInstruction","closePathInstruction","canvas_Instruction","ORDER","TEXT_ALIGN","middle","hanging","alphabetic","ideographic","bottom","CanvasReplay","maxExtent","declutterTree","maxLineWidth","alignFill_","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","coordinateCache_","renderedTransform_","hitDetectionInstructions","Replay_tmpExtent","Replay_tmpTransform","replayTextBackground_","p1","p2","p3","p4","fillInstruction","strokeInstruction","setStrokeStyle_","replayImage_","declutterGroup","fillStroke","boxW","boxH","boxX","boxY","strokePadding","declutterArgs","applyPixelRatio","dashArray","dash","appendFlatCoordinates","closed","skipFirst","myEnd","getBufferedMaxExtent","lastCoord","nextCoord","lastRel","nextRel","skipped","drawCustomCoordinates_","replayEnds","replayEnd","beginGeometry","replayBegin","replayEndss","myEnds","endGeometry","origin","repeatSize","instruction","renderDeclutter_","groupCount","declutterData","replay_","skippedFeaturesHash","featureCallback","opt_hitExtent","skipFeatures","dd","prevX","prevY","roundX","roundY","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","batchSize","fn","backgroundFill","backgroundStroke","baseline","fillKey","strokeKey","textKey","pathLength","textLength","textStates","parts","cc","chars","part","replay","replayHitDetection","opt_featureCallback","reverseHitDetectionInstructions","createFill","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","finish","Replay","CanvasImageReplay","declutterGroup_","hitDetectionImage_","anchorX_","anchorY_","height_","originX_","originY_","drawCoordinates_","myBegin","hitDetectionImage","ImageReplay","CanvasLineStringReplay","drawFlatCoordinates_","moveToLineToInstruction","lastStroke","LineStringReplay","CanvasPolygonReplay","drawFlatCoordinatess_","numEnds","setFillStrokeStyles_","circleInstruction","PolygonReplay","matchingChunk","acos","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","chunkM","TextPlacement","CanvasTextReplay","labels_","fillStates","strokeStates","textKey_","fillKey_","strokeKey_","widths_","geometryType","placement","flatEnd","flatOffset","oo","range","drawChars_","drawTextImage_","align","numLines","widths","currentWidth","measureTextWidths","lineHeight","renderWidth","leftRight","getOverflow","getMaxAngle","getPlacement","getBackgroundFill","getBackgroundStroke","getPadding","BATCH_CONSTRUCTORS","Default","Image","Text","CanvasReplayGroup","opt_renderBuffer","declutterTree_","tolerance_","maxExtent_","resolution_","replaysByZIndex_","hitDetectionContext_","hitDetectionTransform_","circleArrayCache","0","fillCircleArrayRowToMiddle","addDeclutter","group","flatClipCoords","getClipCoords","hasReplays","replays","candidates","replayKey","declutterReplays","contextSize","hitExtent","mask","arraySize","error","getCircleArray","declutteredFeatures","zIndexKey","getReplays","opt_replayTypes","opt_declutterReplays","replayTypes","canvas_ReplayGroup","SIMPLIFY_TOLERANCE","GEOMETRY_RENDERERS","replayGroup","imageReplay","textReplay","lineStringReplay","polygonReplay","geometryRenderer","circleReplay","defaultOrder","feature1","feature2","getSquaredTolerance","getTolerance","renderFeature","loading","renderGeometry","getGeometries","renderFeatureInternal","CanvasVectorLayerRenderer","vectorLayer","dirty_","renderedRevision_","renderedResolution_","renderedRenderOrder_","replayGroup_","handleFontsChanged_","vectorSource","clipExtent","replayContext","drawOffsetX","drawOffsetY","transparentLayer","hasRenderListeners","drawWidth","drawHeight","drawSize","world","mainContextAlpha","handleStyleImageChange_","animating","interacting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","vectorLayerRenderOrder","dirty","canvas_VectorLayer","VectorTileRenderType","IMAGE_REPLAYS","hybrid","VECTOR_REPLAYS","vector","CanvasVectorTileLayerRenderer","renderedLayerRevision_","tmpTransform_","createReplayGroup_","renderTileImage_","layerRevision","revision","replayState","getReplayState","renderedRenderOrder","sourceTileGrid","getTileGrid","zIndexKeys","tt","tileKeys","sourceTile","sourceTileCoord","sourceTileExtent","sharedExtent","bufferedExtent","tileProjection","reproject","setProjection","setReplayGroup","getReplayGroup","getReplayTransform_","renderResolution","clips","worldOffset","currentClip","zz","replayData","replayDeclutter","renderedTileRevision","wrappedTileCoord","pixelScale","VectorTileLayer","Map_Map","zoomOptions","rotateOptions","attribution","attributionOptions","defaults","altShiftDragRotate","doubleClickZoom","zoomDelta","zoomDuration","dragPan","pinchRotate","pinchZoom","keyboard","mouseWheelZoom","shiftDragZoom","interaction_defaults","ol_Map","TileProperty","Tile_TileLayer","setPreload","setUseInterimTilesOnError","Tile","Tile_Tile","interimTile","transition_","transitionStarts_","refreshInterimChain","ol_Tile","ImageTile","tileLoadFunction","crossOrigin_","src_","imageListenerKeys_","tileLoadFunction_","getBlankImage","ctx","fillRect","unlistenImage_","handleImageError_","handleImageLoad_","naturalWidth","naturalHeight","ol_ImageTile","tilecoord_createOrUpdate","opt_tileCoord","getKeyZXY","tilecoord_getKey","TileCache","pruneExceptNewestZ","fromKey","ol_TileCache","calculateSourceResolution","sourceProj","targetProj","targetMetersPerUnit","sourceMetersPerUnit","sourceExtent","compensationFactor","isFinite","enlargeClipPoint","centroidX","centroidY","dX","dY","reproj_render","targetExtent","triangulation","sources","opt_renderEdges","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","getTriangles","triangle","u0","v0","u1","v1","u2","v2","sourceNumericalShiftX","sourceNumericalShiftY","affineCoefs","maxRow","maxEl","absValue","coef","solveLinearSystem","p0","Triangulation","maxSourceExtent","errorThreshold","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","addQuad_","leftBound","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","maxSubdivision","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","reproj_Triangulation","ReprojTile","targetTileGrid","getTileFunction","opt_errorThreshold","renderEdges_","gutter_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","maxTargetExtent","limitedTargetExtent","sourceProjExtent","errorThresholdInPixels","triangulation_","sourceRange","srcX","srcY","unlistenSources_","reproject_","getTileSize","leftToLoad","sourceListenKey","reproj_Tile","createFromTemplate","template","zRegEx","xRegEx","yRegEx","dashYRegEx","getFullTileRange","createFromTemplates","templates","tileUrlFunctions","hash","createFromTileUrlFunctions","nullTileUrlFunction","TileGrid","opt_func","opt_strict","every","currentVal","res","isSorted","origins","origins_","tileSizes_","tileSizes","tileSize_","tileSize","fullTileRanges_","tmpSize_","sizes","calculateTileRanges_","tmpTileCoord","forEachTileCoord","opt_tileRange","tileCoordExtent","getTileCoordForXYAndZ_","getTileCoordForCoordAndResolution","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","adjustX","adjustY","xFromOrigin","yFromOrigin","tileCoordX","tileCoordY","getTileCoordForCoordAndZ","getTileCoordResolution","fullTileRanges","tilegrid_TileGrid","getForProjection","opt_maxZoom","opt_tileSize","opt_corner","corner","resolutionsFromExtent","getCorner","createForExtent","extentFromProjection","createForProjection","half","TileSource","opaque_","opaque","tilePixelRatio_","tileCache","tmpSize","tileOptions","getTileCacheForProjection","loaded","setKey","thisProj","ratio","getTileCoordForTileUrlFunction","worldsAway","withinExtentAndZ","TileSourceEvent","source_Tile","TileEventType","UrlTile","tileUrlFunction","fixedTileUrlFunction","urls","setUrls","setUrl","setTileUrlFunction","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getUrls","setTileLoadFunction","opt_key","match","exec","startCharCode","stopCharCode","String","fromCharCode","stop","expandUrl","source_UrlTile","TileImage","defaultTileLoadFunction","tileClass","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","renderReprojectionEdges_","imageTile","usedTileCache","getGutterInternal","projKey","createTile_","urlTileCoord","tileUrl","newTile","getTileInternal","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","proj","source_TileImage","createXYZ","source_XYZ","Image_ImageLayer","layer_Image","ReprojImage","getImageFunction","targetResolution_","targetExtent_","sourceImage_","sourcePixelRatio_","sourceListenerKey_","unlistenSource_","reproj_Image","ImageSourceEventType","ImageSourceEvent","ImageSource","reprojectedImage_","reprojectedRevision_","findNearestResolution","idx","getImageInternal","handleImageChange","source_Image","RasterEventType","RasterOperationType","RasterSourceEvent","RasterSource","worker_","operationType_","operationType","threads_","threads","renderers_","renderers","createRenderers","requestedFrameState_","renderedImageCanvas_","operation","setOperation","lib","opt_lib","imageOps","queue","updateFrameState_","allSourcesReady_","ready","processSources_","imageDatas","process","onWorkerComplete_","putImageData","sharedContext","createTileRenderer","createImageRenderer","raster","pixels","main_output","innerText","hasImageData","ImageData","_","newImageData","createImageData","createMinion","workerHasImageData","newWorkerImageData","buffers","meta","numBuffers","numBytes","byteLength","images","Uint8ClampedArray","arrays","createWorker","config","onMessage","blob","Blob","URL","createObjectURL","worker","Worker","_imageOps","workers","_onWorkerMessage","minion","postMessage","createFauxWorker","_workers","_queue","_maxQueueLength","_running","_dataLookup","_job","inputs","_enqueue","_dispatch","destroy","_destroyed","job","shift","slices","_resolveJob","swap","defaultCompare","quickselectStep","sd","newLeft","newRight","factory","css","location","baseUrl","protocol","host","currentDir","pathname","fullMatch","origUrl","newUrl","unquotedOrigUrl","trim","$1","test","stringify","memo","stylesInDom","isOldIE","atob","getElement","styleTarget","HTMLIFrameElement","contentDocument","head","singleton","singletonCounter","stylesInsertedAtTop","fixUrls","addStylesToDom","domStyle","refs","addStyle","listToStyles","list","newStyles","base","media","sourceMap","insertStyleElement","insertInto","lastStyleElementInsertedAtTop","nextSibling","firstChild","before","removeStyleElement","createStyleElement","attrs","addAttrs","el","styleIndex","applyToSingletonTag","revokeObjectURL","btoa","link","rel","createLinkElement","autoFixUrls","convertToAbsoluteUrls","unescape","encodeURIComponent","oldSrc","href","styleSheet","cssText","newObj","DEBUG","newList","mayRemove","textStore","replaceText","replacement","cssNode","useSourceMap","content","cssMapping","sourceMapping","sourceURLs","sourceRoot","cssWithMappingToString","mediaQuery","alreadyImportedModules","hmr","locals"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","'use strict';\n\nmodule.exports = rbush;\nmodule.exports.default = rbush;\n\nvar quickselect = require('quickselect');\n\nfunction rbush(maxEntries, format) {\n    if (!(this instanceof rbush)) return new rbush(maxEntries, format);\n\n    // max entries in a node is 9 by default; min node fill is 40% for best performance\n    this._maxEntries = Math.max(4, maxEntries || 9);\n    this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\n\n    if (format) {\n        this._initFormat(format);\n    }\n\n    this.clear();\n}\n\nrbush.prototype = {\n\n    all: function () {\n        return this._all(this.data, []);\n    },\n\n    search: function (bbox) {\n\n        var node = this.data,\n            result = [],\n            toBBox = this.toBBox;\n\n        if (!intersects(bbox, node)) return result;\n\n        var nodesToSearch = [],\n            i, len, child, childBBox;\n\n        while (node) {\n            for (i = 0, len = node.children.length; i < len; i++) {\n\n                child = node.children[i];\n                childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf) result.push(child);\n                    else if (contains(bbox, childBBox)) this._all(child, result);\n                    else nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return result;\n    },\n\n    collides: function (bbox) {\n\n        var node = this.data,\n            toBBox = this.toBBox;\n\n        if (!intersects(bbox, node)) return false;\n\n        var nodesToSearch = [],\n            i, len, child, childBBox;\n\n        while (node) {\n            for (i = 0, len = node.children.length; i < len; i++) {\n\n                child = node.children[i];\n                childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf || contains(bbox, childBBox)) return true;\n                    nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return false;\n    },\n\n    load: function (data) {\n        if (!(data && data.length)) return this;\n\n        if (data.length < this._minEntries) {\n            for (var i = 0, len = data.length; i < len; i++) {\n                this.insert(data[i]);\n            }\n            return this;\n        }\n\n        // recursively build the tree with the given data from scratch using OMT algorithm\n        var node = this._build(data.slice(), 0, data.length - 1, 0);\n\n        if (!this.data.children.length) {\n            // save as is if tree is empty\n            this.data = node;\n\n        } else if (this.data.height === node.height) {\n            // split root if trees have the same height\n            this._splitRoot(this.data, node);\n\n        } else {\n            if (this.data.height < node.height) {\n                // swap trees if inserted one is bigger\n                var tmpNode = this.data;\n                this.data = node;\n                node = tmpNode;\n            }\n\n            // insert the small tree into the large tree at appropriate level\n            this._insert(node, this.data.height - node.height - 1, true);\n        }\n\n        return this;\n    },\n\n    insert: function (item) {\n        if (item) this._insert(item, this.data.height - 1);\n        return this;\n    },\n\n    clear: function () {\n        this.data = createNode([]);\n        return this;\n    },\n\n    remove: function (item, equalsFn) {\n        if (!item) return this;\n\n        var node = this.data,\n            bbox = this.toBBox(item),\n            path = [],\n            indexes = [],\n            i, parent, index, goingUp;\n\n        // depth-first iterative tree traversal\n        while (node || path.length) {\n\n            if (!node) { // go up\n                node = path.pop();\n                parent = path[path.length - 1];\n                i = indexes.pop();\n                goingUp = true;\n            }\n\n            if (node.leaf) { // check current node\n                index = findItem(item, node.children, equalsFn);\n\n                if (index !== -1) {\n                    // item found, remove the item and condense tree upwards\n                    node.children.splice(index, 1);\n                    path.push(node);\n                    this._condense(path);\n                    return this;\n                }\n            }\n\n            if (!goingUp && !node.leaf && contains(node, bbox)) { // go down\n                path.push(node);\n                indexes.push(i);\n                i = 0;\n                parent = node;\n                node = node.children[0];\n\n            } else if (parent) { // go right\n                i++;\n                node = parent.children[i];\n                goingUp = false;\n\n            } else node = null; // nothing found\n        }\n\n        return this;\n    },\n\n    toBBox: function (item) { return item; },\n\n    compareMinX: compareNodeMinX,\n    compareMinY: compareNodeMinY,\n\n    toJSON: function () { return this.data; },\n\n    fromJSON: function (data) {\n        this.data = data;\n        return this;\n    },\n\n    _all: function (node, result) {\n        var nodesToSearch = [];\n        while (node) {\n            if (node.leaf) result.push.apply(result, node.children);\n            else nodesToSearch.push.apply(nodesToSearch, node.children);\n\n            node = nodesToSearch.pop();\n        }\n        return result;\n    },\n\n    _build: function (items, left, right, height) {\n\n        var N = right - left + 1,\n            M = this._maxEntries,\n            node;\n\n        if (N <= M) {\n            // reached leaf level; return leaf\n            node = createNode(items.slice(left, right + 1));\n            calcBBox(node, this.toBBox);\n            return node;\n        }\n\n        if (!height) {\n            // target height of the bulk-loaded tree\n            height = Math.ceil(Math.log(N) / Math.log(M));\n\n            // target number of root entries to maximize storage utilization\n            M = Math.ceil(N / Math.pow(M, height - 1));\n        }\n\n        node = createNode([]);\n        node.leaf = false;\n        node.height = height;\n\n        // split the items into M mostly square tiles\n\n        var N2 = Math.ceil(N / M),\n            N1 = N2 * Math.ceil(Math.sqrt(M)),\n            i, j, right2, right3;\n\n        multiSelect(items, left, right, N1, this.compareMinX);\n\n        for (i = left; i <= right; i += N1) {\n\n            right2 = Math.min(i + N1 - 1, right);\n\n            multiSelect(items, i, right2, N2, this.compareMinY);\n\n            for (j = i; j <= right2; j += N2) {\n\n                right3 = Math.min(j + N2 - 1, right2);\n\n                // pack each entry recursively\n                node.children.push(this._build(items, j, right3, height - 1));\n            }\n        }\n\n        calcBBox(node, this.toBBox);\n\n        return node;\n    },\n\n    _chooseSubtree: function (bbox, node, level, path) {\n\n        var i, len, child, targetNode, area, enlargement, minArea, minEnlargement;\n\n        while (true) {\n            path.push(node);\n\n            if (node.leaf || path.length - 1 === level) break;\n\n            minArea = minEnlargement = Infinity;\n\n            for (i = 0, len = node.children.length; i < len; i++) {\n                child = node.children[i];\n                area = bboxArea(child);\n                enlargement = enlargedArea(bbox, child) - area;\n\n                // choose entry with the least area enlargement\n                if (enlargement < minEnlargement) {\n                    minEnlargement = enlargement;\n                    minArea = area < minArea ? area : minArea;\n                    targetNode = child;\n\n                } else if (enlargement === minEnlargement) {\n                    // otherwise choose one with the smallest area\n                    if (area < minArea) {\n                        minArea = area;\n                        targetNode = child;\n                    }\n                }\n            }\n\n            node = targetNode || node.children[0];\n        }\n\n        return node;\n    },\n\n    _insert: function (item, level, isNode) {\n\n        var toBBox = this.toBBox,\n            bbox = isNode ? item : toBBox(item),\n            insertPath = [];\n\n        // find the best node for accommodating the item, saving all nodes along the path too\n        var node = this._chooseSubtree(bbox, this.data, level, insertPath);\n\n        // put the item into the node\n        node.children.push(item);\n        extend(node, bbox);\n\n        // split on node overflow; propagate upwards if necessary\n        while (level >= 0) {\n            if (insertPath[level].children.length > this._maxEntries) {\n                this._split(insertPath, level);\n                level--;\n            } else break;\n        }\n\n        // adjust bboxes along the insertion path\n        this._adjustParentBBoxes(bbox, insertPath, level);\n    },\n\n    // split overflowed node into two\n    _split: function (insertPath, level) {\n\n        var node = insertPath[level],\n            M = node.children.length,\n            m = this._minEntries;\n\n        this._chooseSplitAxis(node, m, M);\n\n        var splitIndex = this._chooseSplitIndex(node, m, M);\n\n        var newNode = createNode(node.children.splice(splitIndex, node.children.length - splitIndex));\n        newNode.height = node.height;\n        newNode.leaf = node.leaf;\n\n        calcBBox(node, this.toBBox);\n        calcBBox(newNode, this.toBBox);\n\n        if (level) insertPath[level - 1].children.push(newNode);\n        else this._splitRoot(node, newNode);\n    },\n\n    _splitRoot: function (node, newNode) {\n        // split root node\n        this.data = createNode([node, newNode]);\n        this.data.height = node.height + 1;\n        this.data.leaf = false;\n        calcBBox(this.data, this.toBBox);\n    },\n\n    _chooseSplitIndex: function (node, m, M) {\n\n        var i, bbox1, bbox2, overlap, area, minOverlap, minArea, index;\n\n        minOverlap = minArea = Infinity;\n\n        for (i = m; i <= M - m; i++) {\n            bbox1 = distBBox(node, 0, i, this.toBBox);\n            bbox2 = distBBox(node, i, M, this.toBBox);\n\n            overlap = intersectionArea(bbox1, bbox2);\n            area = bboxArea(bbox1) + bboxArea(bbox2);\n\n            // choose distribution with minimum overlap\n            if (overlap < minOverlap) {\n                minOverlap = overlap;\n                index = i;\n\n                minArea = area < minArea ? area : minArea;\n\n            } else if (overlap === minOverlap) {\n                // otherwise choose distribution with minimum area\n                if (area < minArea) {\n                    minArea = area;\n                    index = i;\n                }\n            }\n        }\n\n        return index;\n    },\n\n    // sorts node children by the best axis for split\n    _chooseSplitAxis: function (node, m, M) {\n\n        var compareMinX = node.leaf ? this.compareMinX : compareNodeMinX,\n            compareMinY = node.leaf ? this.compareMinY : compareNodeMinY,\n            xMargin = this._allDistMargin(node, m, M, compareMinX),\n            yMargin = this._allDistMargin(node, m, M, compareMinY);\n\n        // if total distributions margin value is minimal for x, sort by minX,\n        // otherwise it's already sorted by minY\n        if (xMargin < yMargin) node.children.sort(compareMinX);\n    },\n\n    // total margin of all possible split distributions where each node is at least m full\n    _allDistMargin: function (node, m, M, compare) {\n\n        node.children.sort(compare);\n\n        var toBBox = this.toBBox,\n            leftBBox = distBBox(node, 0, m, toBBox),\n            rightBBox = distBBox(node, M - m, M, toBBox),\n            margin = bboxMargin(leftBBox) + bboxMargin(rightBBox),\n            i, child;\n\n        for (i = m; i < M - m; i++) {\n            child = node.children[i];\n            extend(leftBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(leftBBox);\n        }\n\n        for (i = M - m - 1; i >= m; i--) {\n            child = node.children[i];\n            extend(rightBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(rightBBox);\n        }\n\n        return margin;\n    },\n\n    _adjustParentBBoxes: function (bbox, path, level) {\n        // adjust bboxes along the given tree path\n        for (var i = level; i >= 0; i--) {\n            extend(path[i], bbox);\n        }\n    },\n\n    _condense: function (path) {\n        // go through the path, removing empty nodes and updating bboxes\n        for (var i = path.length - 1, siblings; i >= 0; i--) {\n            if (path[i].children.length === 0) {\n                if (i > 0) {\n                    siblings = path[i - 1].children;\n                    siblings.splice(siblings.indexOf(path[i]), 1);\n\n                } else this.clear();\n\n            } else calcBBox(path[i], this.toBBox);\n        }\n    },\n\n    _initFormat: function (format) {\n        // data format (minX, minY, maxX, maxY accessors)\n\n        // uses eval-type function compilation instead of just accepting a toBBox function\n        // because the algorithms are very sensitive to sorting functions performance,\n        // so they should be dead simple and without inner calls\n\n        var compareArr = ['return a', ' - b', ';'];\n\n        this.compareMinX = new Function('a', 'b', compareArr.join(format[0]));\n        this.compareMinY = new Function('a', 'b', compareArr.join(format[1]));\n\n        this.toBBox = new Function('a',\n            'return {minX: a' + format[0] +\n            ', minY: a' + format[1] +\n            ', maxX: a' + format[2] +\n            ', maxY: a' + format[3] + '};');\n    }\n};\n\nfunction findItem(item, items, equalsFn) {\n    if (!equalsFn) return items.indexOf(item);\n\n    for (var i = 0; i < items.length; i++) {\n        if (equalsFn(item, items[i])) return i;\n    }\n    return -1;\n}\n\n// calculate node's bbox from bboxes of its children\nfunction calcBBox(node, toBBox) {\n    distBBox(node, 0, node.children.length, toBBox, node);\n}\n\n// min bounding rectangle of node children from k to p-1\nfunction distBBox(node, k, p, toBBox, destNode) {\n    if (!destNode) destNode = createNode(null);\n    destNode.minX = Infinity;\n    destNode.minY = Infinity;\n    destNode.maxX = -Infinity;\n    destNode.maxY = -Infinity;\n\n    for (var i = k, child; i < p; i++) {\n        child = node.children[i];\n        extend(destNode, node.leaf ? toBBox(child) : child);\n    }\n\n    return destNode;\n}\n\nfunction extend(a, b) {\n    a.minX = Math.min(a.minX, b.minX);\n    a.minY = Math.min(a.minY, b.minY);\n    a.maxX = Math.max(a.maxX, b.maxX);\n    a.maxY = Math.max(a.maxY, b.maxY);\n    return a;\n}\n\nfunction compareNodeMinX(a, b) { return a.minX - b.minX; }\nfunction compareNodeMinY(a, b) { return a.minY - b.minY; }\n\nfunction bboxArea(a)   { return (a.maxX - a.minX) * (a.maxY - a.minY); }\nfunction bboxMargin(a) { return (a.maxX - a.minX) + (a.maxY - a.minY); }\n\nfunction enlargedArea(a, b) {\n    return (Math.max(b.maxX, a.maxX) - Math.min(b.minX, a.minX)) *\n           (Math.max(b.maxY, a.maxY) - Math.min(b.minY, a.minY));\n}\n\nfunction intersectionArea(a, b) {\n    var minX = Math.max(a.minX, b.minX),\n        minY = Math.max(a.minY, b.minY),\n        maxX = Math.min(a.maxX, b.maxX),\n        maxY = Math.min(a.maxY, b.maxY);\n\n    return Math.max(0, maxX - minX) *\n           Math.max(0, maxY - minY);\n}\n\nfunction contains(a, b) {\n    return a.minX <= b.minX &&\n           a.minY <= b.minY &&\n           b.maxX <= a.maxX &&\n           b.maxY <= a.maxY;\n}\n\nfunction intersects(a, b) {\n    return b.minX <= a.maxX &&\n           b.minY <= a.maxY &&\n           b.maxX >= a.minX &&\n           b.maxY >= a.minY;\n}\n\nfunction createNode(children) {\n    return {\n        children: children,\n        height: 1,\n        leaf: true,\n        minX: Infinity,\n        minY: Infinity,\n        maxX: -Infinity,\n        maxY: -Infinity\n    };\n}\n\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\n// combines selection algorithm with binary divide & conquer approach\n\nfunction multiSelect(arr, left, right, n, compare) {\n    var stack = [left, right],\n        mid;\n\n    while (stack.length) {\n        right = stack.pop();\n        left = stack.pop();\n\n        if (right - left <= n) continue;\n\n        mid = left + Math.ceil((right - left) / n / 2) * n;\n        quickselect(arr, mid, left, right, compare);\n\n        stack.push(left, mid, mid, right);\n    }\n}\n","var Processor = require('./processor');\n\nexports.Processor = Processor;\n","/**\n * @module ol/webgl\n */\n\n/**\n * Constants taken from goog.webgl\n */\n\n\n/**\n * @const\n * @type {number}\n */\nexport const ONE = 1;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const SRC_ALPHA = 0x0302;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const COLOR_ATTACHMENT0 = 0x8CE0;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const COLOR_BUFFER_BIT = 0x00004000;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const TRIANGLES = 0x0004;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const TRIANGLE_STRIP = 0x0005;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const ONE_MINUS_SRC_ALPHA = 0x0303;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const ARRAY_BUFFER = 0x8892;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const ELEMENT_ARRAY_BUFFER = 0x8893;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const STREAM_DRAW = 0x88E0;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const STATIC_DRAW = 0x88E4;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const DYNAMIC_DRAW = 0x88E8;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const CULL_FACE = 0x0B44;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const BLEND = 0x0BE2;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const STENCIL_TEST = 0x0B90;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const DEPTH_TEST = 0x0B71;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const SCISSOR_TEST = 0x0C11;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const UNSIGNED_BYTE = 0x1401;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const UNSIGNED_SHORT = 0x1403;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const UNSIGNED_INT = 0x1405;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const FLOAT = 0x1406;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const RGBA = 0x1908;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const FRAGMENT_SHADER = 0x8B30;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const VERTEX_SHADER = 0x8B31;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const LINK_STATUS = 0x8B82;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const LINEAR = 0x2601;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const TEXTURE_MAG_FILTER = 0x2800;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const TEXTURE_MIN_FILTER = 0x2801;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const TEXTURE_WRAP_S = 0x2802;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const TEXTURE_WRAP_T = 0x2803;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const TEXTURE_2D = 0x0DE1;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const TEXTURE0 = 0x84C0;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const CLAMP_TO_EDGE = 0x812F;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const COMPILE_STATUS = 0x8B81;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const FRAMEBUFFER = 0x8D40;\n\n\n/** end of goog.webgl constants\n */\n\n\n/**\n * @const\n * @type {Array.<string>}\n */\nconst CONTEXT_IDS = [\n  'experimental-webgl',\n  'webgl',\n  'webkit-3d',\n  'moz-webgl'\n];\n\n\n/**\n * @param {HTMLCanvasElement} canvas Canvas.\n * @param {Object=} opt_attributes Attributes.\n * @return {WebGLRenderingContext} WebGL rendering context.\n */\nexport function getContext(canvas, opt_attributes) {\n  const ii = CONTEXT_IDS.length;\n  for (let i = 0; i < ii; ++i) {\n    try {\n      const context = canvas.getContext(CONTEXT_IDS[i], opt_attributes);\n      if (context) {\n        return /** @type {!WebGLRenderingContext} */ (context);\n      }\n    } catch (e) {\n      // pass\n    }\n  }\n  return null;\n}\n","/**\n * @module ol\n */\n\nimport {getContext} from './webgl.js';\n\n\n/**\n * An array with two elements, representing a pixel. The first element is the\n * x-coordinate, the second the y-coordinate of the pixel.\n * @typedef {Array.<number>} Pixel\n * @api\n */\n\n\n/**\n * Include debuggable shader sources.  Default is `true`. This should be set to\n * `false` for production builds.\n * TODO: move to a separate ol-webgl package\n * @type {boolean}\n */\nexport const DEBUG_WEBGL = true;\n\n\n/**\n * TODO: move to a separate ol-webgl package\n * The maximum supported WebGL texture size in pixels. If WebGL is not\n * supported, the value is set to `undefined`.\n * @type {number|undefined}\n */\nlet WEBGL_MAX_TEXTURE_SIZE; // value is set below\n\n\n/**\n * TODO: move to a separate ol-webgl package\n * List of supported WebGL extensions.\n * @type {Array.<string>}\n */\nlet WEBGL_EXTENSIONS; // value is set below\n\n\n/**\n * TODO: move to a separate ol-webgl package\n * WebGL is available.\n * @type {boolean}\n */\nlet HAS_WEBGL = false;\n\n\nif (typeof window !== 'undefined' && 'WebGLRenderingContext' in window) {\n  try {\n    const canvas = /** @type {HTMLCanvasElement} */ (document.createElement('CANVAS'));\n    const gl = getContext(canvas, {failIfMajorPerformanceCaveat: true});\n    if (gl) {\n      HAS_WEBGL = true;\n      WEBGL_MAX_TEXTURE_SIZE = /** @type {number} */ (gl.getParameter(gl.MAX_TEXTURE_SIZE));\n      WEBGL_EXTENSIONS = gl.getSupportedExtensions();\n    }\n  } catch (e) {\n    // pass\n  }\n}\n\nexport {HAS_WEBGL, WEBGL_MAX_TEXTURE_SIZE, WEBGL_EXTENSIONS};\n\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = 'v4.6.4';\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * Usage:\n *\n *     function ParentClass(a, b) { }\n *     ParentClass.prototype.foo = function(a) { }\n *\n *     function ChildClass(a, b, c) {\n *       // Call parent constructor\n *       ParentClass.call(this, a, b);\n *     }\n *     inherits(ChildClass, ParentClass);\n *\n *     var child = new ChildClass('a', 'b', 'see');\n *     child.foo(); // This works.\n *\n * @param {!Function} childCtor Child constructor.\n * @param {!Function} parentCtor Parent constructor.\n * @function\n * @api\n */\nexport function inherits(childCtor, parentCtor) {\n  childCtor.prototype = Object.create(parentCtor.prototype);\n  childCtor.prototype.constructor = childCtor;\n}\n\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {number} The unique ID for the object.\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = ++uidCounter_);\n}\n","/**\n * @module ol/AssertionError\n */\nimport {VERSION, inherits} from './index.js';\n\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error}\n * @constructor\n * @extends {Error}\n * @param {number} code Error code.\n */\nconst AssertionError = function(code) {\n\n  const path = VERSION ? VERSION.split('-')[0] : 'latest';\n\n  /**\n   * @type {string}\n   */\n  this.message = 'Assertion failed. See https://openlayers.org/en/' + path +\n      '/doc/errors/#' + code + ' for details.';\n\n  /**\n   * Error code. The meaning of the code can be found on\n   * {@link https://openlayers.org/en/latest/doc/errors/} (replace `latest` with\n   * the version found in the OpenLayers script's header comment if a version\n   * other than the latest is used).\n   * @type {number}\n   * @api\n   */\n  this.code = code;\n\n  this.name = 'AssertionError';\n\n};\n\ninherits(AssertionError, Error);\n\nexport default AssertionError;\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection~CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection~CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove'\n};\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object~ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange'\n};\n","/**\n * @module ol/obj\n */\n\n\n/**\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\n * one or more source objects to a target object.\n *\n * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n * @param {!Object} target The target object.\n * @param {...Object} var_sources The source object(s).\n * @return {!Object} The modified target object.\n */\nexport const assign = (typeof Object.assign === 'function') ? Object.assign : function(target, var_sources) {\n  if (target === undefined || target === null) {\n    throw new TypeError('Cannot convert undefined or null to object');\n  }\n\n  const output = Object(target);\n  for (let i = 1, ii = arguments.length; i < ii; ++i) {\n    const source = arguments[i];\n    if (source !== undefined && source !== null) {\n      for (const key in source) {\n        if (source.hasOwnProperty(key)) {\n          output[key] = source[key];\n        }\n      }\n    }\n  }\n  return output;\n};\n\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n\n/**\n * Get an array of property values from an object.\n * @param {Object<K,V>} object The object from which to get the values.\n * @return {!Array<V>} The property values.\n * @template K,V\n */\nexport function getValues(object) {\n  const values = [];\n  for (const property in object) {\n    values.push(object[property]);\n  }\n  return values;\n}\n\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n\n/**\n * Key to use with {@link module:ol/Observable~Observable#unByKey}.\n * @typedef {Object} EventsKey\n * @property {Object} [bindTo]\n * @property {module:ol/events~ListenerFunction} [boundListener]\n * @property {boolean} callOnce\n * @property {number} [deleteIndex]\n * @property {module:ol/events~ListenerFunction} listener\n * @property {EventTarget|module:ol/events/EventTarget} target\n * @property {string} type\n * @api\n */\n\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function(module:ol/events/Event)|function(module:ol/events/Event): boolean} ListenerFunction\n * @api\n */\n\n\n/**\n * @param {module:ol/events~EventsKey} listenerObj Listener object.\n * @return {module:ol/events~ListenerFunction} Bound listener.\n */\nexport function bindListener(listenerObj) {\n  const boundListener = function(evt) {\n    const listener = listenerObj.listener;\n    const bindTo = listenerObj.bindTo || listenerObj.target;\n    if (listenerObj.callOnce) {\n      unlistenByKey(listenerObj);\n    }\n    return listener.call(bindTo, evt);\n  };\n  listenerObj.boundListener = boundListener;\n  return boundListener;\n}\n\n\n/**\n * Finds the matching {@link module:ol/events~EventsKey} in the given listener\n * array.\n *\n * @param {!Array<!module:ol/events~EventsKey>} listeners Array of listeners.\n * @param {!Function} listener The listener function.\n * @param {Object=} opt_this The `this` value inside the listener.\n * @param {boolean=} opt_setDeleteIndex Set the deleteIndex on the matching\n *     listener, for {@link module:ol/events~unlistenByKey}.\n * @return {module:ol/events~EventsKey|undefined} The matching listener object.\n */\nexport function findListener(listeners, listener, opt_this, opt_setDeleteIndex) {\n  let listenerObj;\n  for (let i = 0, ii = listeners.length; i < ii; ++i) {\n    listenerObj = listeners[i];\n    if (listenerObj.listener === listener &&\n        listenerObj.bindTo === opt_this) {\n      if (opt_setDeleteIndex) {\n        listenerObj.deleteIndex = i;\n      }\n      return listenerObj;\n    }\n  }\n  return undefined;\n}\n\n\n/**\n * @param {module:ol/events/EventTarget~EventTargetLike} target Target.\n * @param {string} type Type.\n * @return {Array.<module:ol/events~EventsKey>|undefined} Listeners.\n */\nexport function getListeners(target, type) {\n  const listenerMap = target.ol_lm;\n  return listenerMap ? listenerMap[type] : undefined;\n}\n\n\n/**\n * Get the lookup of listeners.  If one does not exist on the target, it is\n * created.\n * @param {module:ol/events/EventTarget~EventTargetLike} target Target.\n * @return {!Object.<string, Array.<module:ol/events~EventsKey>>} Map of\n *     listeners by event type.\n */\nfunction getListenerMap(target) {\n  let listenerMap = target.ol_lm;\n  if (!listenerMap) {\n    listenerMap = target.ol_lm = {};\n  }\n  return listenerMap;\n}\n\n\n/**\n * Clean up all listener objects of the given type.  All properties on the\n * listener objects will be removed, and if no listeners remain in the listener\n * map, it will be removed from the target.\n * @param {module:ol/events/EventTarget~EventTargetLike} target Target.\n * @param {string} type Type.\n */\nfunction removeListeners(target, type) {\n  const listeners = getListeners(target, type);\n  if (listeners) {\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      target.removeEventListener(type, listeners[i].boundListener);\n      clear(listeners[i]);\n    }\n    listeners.length = 0;\n    const listenerMap = target.ol_lm;\n    if (listenerMap) {\n      delete listenerMap[type];\n      if (Object.keys(listenerMap).length === 0) {\n        delete target.ol_lm;\n      }\n    }\n  }\n}\n\n\n/**\n * Registers an event listener on an event target. Inspired by\n * {@link https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html}\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events~unlistenByKey}.\n *\n * @param {module:ol/events/EventTarget~EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {module:ol/events~ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean=} opt_once If true, add the listener as one-off listener.\n * @return {module:ol/events~EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, opt_this, opt_once) {\n  const listenerMap = getListenerMap(target);\n  let listeners = listenerMap[type];\n  if (!listeners) {\n    listeners = listenerMap[type] = [];\n  }\n  let listenerObj = findListener(listeners, listener, opt_this, false);\n  if (listenerObj) {\n    if (!opt_once) {\n      // Turn one-off listener into a permanent one.\n      listenerObj.callOnce = false;\n    }\n  } else {\n    listenerObj = /** @type {module:ol/events~EventsKey} */ ({\n      bindTo: opt_this,\n      callOnce: !!opt_once,\n      listener: listener,\n      target: target,\n      type: type\n    });\n    target.addEventListener(type, bindListener(listenerObj));\n    listeners.push(listenerObj);\n  }\n\n  return listenerObj;\n}\n\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * {@link https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html}\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events~unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events~listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {module:ol/events/EventTarget~EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {module:ol/events~ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {module:ol/events~EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, opt_this) {\n  return listen(target, type, listener, opt_this, true);\n}\n\n\n/**\n * Unregisters an event listener on an event target. Inspired by\n * {@link https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html}\n *\n * To return a listener, this function needs to be called with the exact same\n * arguments that were used for a previous {@link module:ol/events~listen} call.\n *\n * @param {module:ol/events/EventTarget~EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {module:ol/events~ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n */\nexport function unlisten(target, type, listener, opt_this) {\n  const listeners = getListeners(target, type);\n  if (listeners) {\n    const listenerObj = findListener(listeners, listener, opt_this, true);\n    if (listenerObj) {\n      unlistenByKey(listenerObj);\n    }\n  }\n}\n\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * {@link https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html}\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events~listen} or {@link module:ol/events~listenOnce}.\n *\n * @param {module:ol/events~EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.boundListener);\n    const listeners = getListeners(key.target, key.type);\n    if (listeners) {\n      const i = 'deleteIndex' in key ? key.deleteIndex : listeners.indexOf(key);\n      if (i !== -1) {\n        listeners.splice(i, 1);\n      }\n      if (listeners.length === 0) {\n        removeListeners(key.target, key.type);\n      }\n    }\n    clear(key);\n  }\n}\n\n\n/**\n * Unregisters all event listeners on an event target. Inspired by\n * {@link https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html}\n *\n * @param {module:ol/events/EventTarget~EventTargetLike} target Target.\n */\nexport function unlistenAll(target) {\n  const listenerMap = getListenerMap(target);\n  for (const type in listenerMap) {\n    removeListeners(target, type);\n  }\n}\n","/**\n * @module ol/functions\n */\n\n/**\n * Always returns true.\n * @returns {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @returns {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {undefined} Nothing.\n */\nexport function UNDEFINED() {}\n","/**\n * @module ol/Disposable\n */\nimport {UNDEFINED} from './functions.js';\n\n/**\n * Objects that need to clean up after themselves.\n * @constructor\n */\nconst Disposable = function() {};\n\n/**\n * The object has already been disposed.\n * @type {boolean}\n * @private\n */\nDisposable.prototype.disposed_ = false;\n\n/**\n * Clean up.\n */\nDisposable.prototype.dispose = function() {\n  if (!this.disposed_) {\n    this.disposed_ = true;\n    this.disposeInternal();\n  }\n};\n\n/**\n * Extension point for disposable objects.\n * @protected\n */\nDisposable.prototype.disposeInternal = UNDEFINED;\nexport default Disposable;\n","/**\n * @module ol/events/Event\n */\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * @see {@link https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface}\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/EventTarget~EventTarget}.\n *\n * @constructor\n * @param {string} type Type.\n */\nconst Event = function(type) {\n\n  /**\n   * @type {boolean}\n   */\n  this.propagationStopped;\n\n  /**\n   * The event type.\n   * @type {string}\n   * @api\n   */\n  this.type = type;\n\n  /**\n   * The event target.\n   * @type {Object}\n   * @api\n   */\n  this.target = null;\n\n};\n\n\n/**\n * Stop event propagation.\n * @function\n * @api\n */\nEvent.prototype.preventDefault =\n\n  /**\n   * Stop event propagation.\n   * @function\n   * @api\n   */\n  Event.prototype.stopPropagation = function() {\n    this.propagationStopped = true;\n  };\n\n\n/**\n * @param {Event|module:ol/events/Event} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n\n/**\n * @param {Event|module:ol/events/Event} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default Event;\n","/**\n * @module ol/events/EventTarget\n */\nimport {inherits} from '../index.js';\nimport Disposable from '../Disposable.js';\nimport {unlistenAll} from '../events.js';\nimport {UNDEFINED} from '../functions.js';\nimport Event from '../events/Event.js';\n\n\n/**\n * @typedef {EventTarget|module:ol/events/EventTarget} EventTargetLike\n */\n\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * @see {@link https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget}\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n *\n * @constructor\n * @extends {module:ol/Disposable}\n */\nconst EventTarget = function() {\n\n  Disposable.call(this);\n\n  /**\n   * @private\n   * @type {!Object.<string, number>}\n   */\n  this.pendingRemovals_ = {};\n\n  /**\n   * @private\n   * @type {!Object.<string, number>}\n   */\n  this.dispatching_ = {};\n\n  /**\n   * @private\n   * @type {!Object.<string, Array.<module:ol/events~ListenerFunction>>}\n   */\n  this.listeners_ = {};\n\n};\n\ninherits(EventTarget, Disposable);\n\n\n/**\n * @param {string} type Type.\n * @param {module:ol/events~ListenerFunction} listener Listener.\n */\nEventTarget.prototype.addEventListener = function(type, listener) {\n  let listeners = this.listeners_[type];\n  if (!listeners) {\n    listeners = this.listeners_[type] = [];\n  }\n  if (listeners.indexOf(listener) === -1) {\n    listeners.push(listener);\n  }\n};\n\n\n/**\n * @param {{type: string,\n *     target: (EventTarget|module:ol/events/EventTarget|undefined)}|module:ol/events/Event|\n *     string} event Event or event type.\n * @return {boolean|undefined} `false` if anyone called preventDefault on the\n *     event object or if any of the listeners returned false.\n */\nEventTarget.prototype.dispatchEvent = function(event) {\n  const evt = typeof event === 'string' ? new Event(event) : event;\n  const type = evt.type;\n  evt.target = this;\n  const listeners = this.listeners_[type];\n  let propagate;\n  if (listeners) {\n    if (!(type in this.dispatching_)) {\n      this.dispatching_[type] = 0;\n      this.pendingRemovals_[type] = 0;\n    }\n    ++this.dispatching_[type];\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      if (listeners[i].call(this, evt) === false || evt.propagationStopped) {\n        propagate = false;\n        break;\n      }\n    }\n    --this.dispatching_[type];\n    if (this.dispatching_[type] === 0) {\n      let pendingRemovals = this.pendingRemovals_[type];\n      delete this.pendingRemovals_[type];\n      while (pendingRemovals--) {\n        this.removeEventListener(type, UNDEFINED);\n      }\n      delete this.dispatching_[type];\n    }\n    return propagate;\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nEventTarget.prototype.disposeInternal = function() {\n  unlistenAll(this);\n};\n\n\n/**\n * Get the listeners for a specified event type. Listeners are returned in the\n * order that they will be called in.\n *\n * @param {string} type Type.\n * @return {Array.<module:ol/events~ListenerFunction>} Listeners.\n */\nEventTarget.prototype.getListeners = function(type) {\n  return this.listeners_[type];\n};\n\n\n/**\n * @param {string=} opt_type Type. If not provided,\n *     `true` will be returned if this EventTarget has any listeners.\n * @return {boolean} Has listeners.\n */\nEventTarget.prototype.hasListener = function(opt_type) {\n  return opt_type ?\n    opt_type in this.listeners_ :\n    Object.keys(this.listeners_).length > 0;\n};\n\n\n/**\n * @param {string} type Type.\n * @param {module:ol/events~ListenerFunction} listener Listener.\n */\nEventTarget.prototype.removeEventListener = function(type, listener) {\n  const listeners = this.listeners_[type];\n  if (listeners) {\n    const index = listeners.indexOf(listener);\n    if (type in this.pendingRemovals_) {\n      // make listener a no-op, and remove later in #dispatchEvent()\n      listeners[index] = UNDEFINED;\n      ++this.pendingRemovals_[type];\n    } else {\n      listeners.splice(index, 1);\n      if (listeners.length === 0) {\n        delete this.listeners_[type];\n      }\n    }\n  }\n};\nexport default EventTarget;\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~Event#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  ERROR: 'error',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  MOUSEDOWN: 'mousedown',\n  MOUSEMOVE: 'mousemove',\n  MOUSEOUT: 'mouseout',\n  MOUSEUP: 'mouseup',\n  MOUSEWHEEL: 'mousewheel',\n  MSPOINTERDOWN: 'MSPointerDown',\n  RESIZE: 'resize',\n  TOUCHSTART: 'touchstart',\n  TOUCHMOVE: 'touchmove',\n  TOUCHEND: 'touchend',\n  WHEEL: 'wheel'\n};\n","/**\n * @module ol/Observable\n */\nimport {inherits} from './index.js';\nimport {listen, unlistenByKey, unlisten, listenOnce} from './events.js';\nimport EventTarget from './events/EventTarget.js';\nimport EventType from './events/EventType.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @constructor\n * @extends {module:ol/events/EventTarget}\n * @fires module:ol/events/Event~Event\n * @struct\n * @api\n */\nconst Observable = function() {\n\n  EventTarget.call(this);\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.revision_ = 0;\n\n};\n\ninherits(Observable, EventTarget);\n\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {module:ol/events~EventsKey|Array.<module:ol/events~EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {module:ol/events~EventsKey} */ (key));\n  }\n}\n\n\n/**\n * Increases the revision counter and dispatches a 'change' event.\n * @api\n */\nObservable.prototype.changed = function() {\n  ++this.revision_;\n  this.dispatchEvent(EventType.CHANGE);\n};\n\n\n/**\n * Dispatches an event and calls all listeners listening for events\n * of this type. The event parameter can either be a string or an\n * Object with a `type` property.\n *\n * @param {{type: string,\n *     target: (EventTarget|module:ol/events/EventTarget|undefined)}|\n *     module:ol/events/Event|string} event Event object.\n * @function\n * @api\n */\nObservable.prototype.dispatchEvent;\n\n\n/**\n * Get the version number for this object.  Each time the object is modified,\n * its version number will be incremented.\n * @return {number} Revision.\n * @api\n */\nObservable.prototype.getRevision = function() {\n  return this.revision_;\n};\n\n\n/**\n * Listen for a certain type of event.\n * @param {string|Array.<string>} type The event type or array of event types.\n * @param {function(?): ?} listener The listener function.\n * @return {module:ol/events~EventsKey|Array.<module:ol/events~EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on = function(type, listener) {\n  if (Array.isArray(type)) {\n    const len = type.length;\n    const keys = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      keys[i] = listen(this, type[i], listener);\n    }\n    return keys;\n  } else {\n    return listen(this, /** @type {string} */ (type), listener);\n  }\n};\n\n\n/**\n * Listen once for a certain type of event.\n * @param {string|Array.<string>} type The event type or array of event types.\n * @param {function(?): ?} listener The listener function.\n * @return {module:ol/events~EventsKey|Array.<module:ol/events~EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once = function(type, listener) {\n  if (Array.isArray(type)) {\n    const len = type.length;\n    const keys = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      keys[i] = listenOnce(this, type[i], listener);\n    }\n    return keys;\n  } else {\n    return listenOnce(this, /** @type {string} */ (type), listener);\n  }\n};\n\n\n/**\n * Unlisten for a certain type of event.\n * @param {string|Array.<string>} type The event type or array of event types.\n * @param {function(?): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un = function(type, listener) {\n  if (Array.isArray(type)) {\n    for (let i = 0, ii = type.length; i < ii; ++i) {\n      unlisten(this, type[i], listener);\n    }\n    return;\n  } else {\n    unlisten(this, /** @type {string} */ (type), listener);\n  }\n};\nexport default Observable;\n","/**\n * @module ol/Object\n */\nimport {getUid, inherits} from './index.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport Event from './events/Event.js';\nimport {assign} from './obj.js';\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of\n * this type.\n *\n * @param {string} type The event type.\n * @param {string} key The property name.\n * @param {*} oldValue The old value for `key`.\n * @extends {module:ol/events/Event}\n * @constructor\n */\nconst ObjectEvent = function(type, key, oldValue) {\n  Event.call(this, type);\n\n  /**\n   * The name of the property whose value is changing.\n   * @type {string}\n   * @api\n   */\n  this.key = key;\n\n  /**\n   * The old value. To get the new value use `e.target.get(e.key)` where\n   * `e` is the event object.\n   * @type {*}\n   * @api\n   */\n  this.oldValue = oldValue;\n\n};\ninherits(ObjectEvent, Event);\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @constructor\n * @extends {module:ol/Observable}\n * @param {Object.<string, *>=} opt_values An object with key-value pairs.\n * @fires module:ol/Object~ObjectEvent\n * @api\n */\nconst BaseObject = function(opt_values) {\n  Observable.call(this);\n\n  // Call {@link module:ol~getUid} to ensure that the order of objects' ids is\n  // the same as the order in which they were created.  This also helps to\n  // ensure that object properties are always added in the same order, which\n  // helps many JavaScript engines generate faster code.\n  getUid(this);\n\n  /**\n   * @private\n   * @type {!Object.<string, *>}\n   */\n  this.values_ = {};\n\n  if (opt_values !== undefined) {\n    this.setProperties(opt_values);\n  }\n};\n\ninherits(BaseObject, Observable);\n\n\n/**\n * @type {Object.<string, string>}\n */\nconst changeEventTypeCache = {};\n\n\n/**\n * @param {string} key Key name.\n * @return {string} Change name.\n */\nexport function getChangeEventType(key) {\n  return changeEventTypeCache.hasOwnProperty(key) ?\n    changeEventTypeCache[key] :\n    (changeEventTypeCache[key] = 'change:' + key);\n}\n\n\n/**\n * Gets a value.\n * @param {string} key Key name.\n * @return {*} Value.\n * @api\n */\nBaseObject.prototype.get = function(key) {\n  let value;\n  if (this.values_.hasOwnProperty(key)) {\n    value = this.values_[key];\n  }\n  return value;\n};\n\n\n/**\n * Get a list of object property names.\n * @return {Array.<string>} List of property names.\n * @api\n */\nBaseObject.prototype.getKeys = function() {\n  return Object.keys(this.values_);\n};\n\n\n/**\n * Get an object of all property names and values.\n * @return {Object.<string, *>} Object.\n * @api\n */\nBaseObject.prototype.getProperties = function() {\n  return assign({}, this.values_);\n};\n\n\n/**\n * @param {string} key Key name.\n * @param {*} oldValue Old value.\n */\nBaseObject.prototype.notify = function(key, oldValue) {\n  let eventType;\n  eventType = getChangeEventType(key);\n  this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n  eventType = ObjectEventType.PROPERTYCHANGE;\n  this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n};\n\n\n/**\n * Sets a value.\n * @param {string} key Key name.\n * @param {*} value Value.\n * @param {boolean=} opt_silent Update without triggering an event.\n * @api\n */\nBaseObject.prototype.set = function(key, value, opt_silent) {\n  if (opt_silent) {\n    this.values_[key] = value;\n  } else {\n    const oldValue = this.values_[key];\n    this.values_[key] = value;\n    if (oldValue !== value) {\n      this.notify(key, oldValue);\n    }\n  }\n};\n\n\n/**\n * Sets a collection of key-value pairs.  Note that this changes any existing\n * properties and adds new ones (it does not remove any existing properties).\n * @param {Object.<string, *>} values Values.\n * @param {boolean=} opt_silent Update without triggering an event.\n * @api\n */\nBaseObject.prototype.setProperties = function(values, opt_silent) {\n  for (const key in values) {\n    this.set(key, values[key], opt_silent);\n  }\n};\n\n\n/**\n * Unsets a property.\n * @param {string} key Key name.\n * @param {boolean=} opt_silent Unset without triggering an event.\n * @api\n */\nBaseObject.prototype.unset = function(key, opt_silent) {\n  if (key in this.values_) {\n    const oldValue = this.values_[key];\n    delete this.values_[key];\n    if (!opt_silent) {\n      this.notify(key, oldValue);\n    }\n  }\n};\n\n\nexport default BaseObject;\n","/**\n * @module ol/Collection\n */\nimport {inherits} from './index.js';\nimport AssertionError from './AssertionError.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport BaseObject from './Object.js';\nimport Event from './events/Event.js';\n\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n *\n * @constructor\n * @extends {module:ol/events/Event}\n * @param {module:ol/CollectionEventType} type Type.\n * @param {*=} opt_element Element.\n */\nexport const CollectionEvent = function(type, opt_element) {\n\n  Event.call(this, type);\n\n  /**\n   * The element that is added to or removed from the collection.\n   * @type {*}\n   * @api\n   */\n  this.element = opt_element;\n\n};\n\ninherits(CollectionEvent, Event);\n\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @constructor\n * @extends {module:ol/Object}\n * @fires module:ol/Collection~CollectionEvent\n * @param {Array.<T>=} opt_array Array.\n * @param {module:ol/Collection~Options=} opt_options Collection options.\n * @template T\n * @api\n */\nconst Collection = function(opt_array, opt_options) {\n\n  BaseObject.call(this);\n\n  const options = opt_options || {};\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.unique_ = !!options.unique;\n\n  /**\n   * @private\n   * @type {!Array.<T>}\n   */\n  this.array_ = opt_array ? opt_array : [];\n\n  if (this.unique_) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      this.assertUnique_(this.array_[i], i);\n    }\n  }\n\n  this.updateLength_();\n\n};\n\ninherits(Collection, BaseObject);\n\n\n/**\n * Remove all elements from the collection.\n * @api\n */\nCollection.prototype.clear = function() {\n  while (this.getLength() > 0) {\n    this.pop();\n  }\n};\n\n\n/**\n * Add elements to the collection.  This pushes each item in the provided array\n * to the end of the collection.\n * @param {!Array.<T>} arr Array.\n * @return {module:ol/Collection.<T>} This collection.\n * @api\n */\nCollection.prototype.extend = function(arr) {\n  for (let i = 0, ii = arr.length; i < ii; ++i) {\n    this.push(arr[i]);\n  }\n  return this;\n};\n\n\n/**\n * Iterate over each element, calling the provided callback.\n * @param {function(T, number, Array.<T>): *} f The function to call\n *     for every element. This function takes 3 arguments (the element, the\n *     index and the array). The return value is ignored.\n * @api\n */\nCollection.prototype.forEach = function(f) {\n  const array = this.array_;\n  for (let i = 0, ii = array.length; i < ii; ++i) {\n    f(array[i], i, array);\n  }\n};\n\n\n/**\n * Get a reference to the underlying Array object. Warning: if the array\n * is mutated, no events will be dispatched by the collection, and the\n * collection's \"length\" property won't be in sync with the actual length\n * of the array.\n * @return {!Array.<T>} Array.\n * @api\n */\nCollection.prototype.getArray = function() {\n  return this.array_;\n};\n\n\n/**\n * Get the element at the provided index.\n * @param {number} index Index.\n * @return {T} Element.\n * @api\n */\nCollection.prototype.item = function(index) {\n  return this.array_[index];\n};\n\n\n/**\n * Get the length of this collection.\n * @return {number} The length of the array.\n * @observable\n * @api\n */\nCollection.prototype.getLength = function() {\n  return /** @type {number} */ (this.get(Property.LENGTH));\n};\n\n\n/**\n * Insert an element at the provided index.\n * @param {number} index Index.\n * @param {T} elem Element.\n * @api\n */\nCollection.prototype.insertAt = function(index, elem) {\n  if (this.unique_) {\n    this.assertUnique_(elem);\n  }\n  this.array_.splice(index, 0, elem);\n  this.updateLength_();\n  this.dispatchEvent(\n    new CollectionEvent(CollectionEventType.ADD, elem));\n};\n\n\n/**\n * Remove the last element of the collection and return it.\n * Return `undefined` if the collection is empty.\n * @return {T|undefined} Element.\n * @api\n */\nCollection.prototype.pop = function() {\n  return this.removeAt(this.getLength() - 1);\n};\n\n\n/**\n * Insert the provided element at the end of the collection.\n * @param {T} elem Element.\n * @return {number} New length of the collection.\n * @api\n */\nCollection.prototype.push = function(elem) {\n  if (this.unique_) {\n    this.assertUnique_(elem);\n  }\n  const n = this.getLength();\n  this.insertAt(n, elem);\n  return this.getLength();\n};\n\n\n/**\n * Remove the first occurrence of an element from the collection.\n * @param {T} elem Element.\n * @return {T|undefined} The removed element or undefined if none found.\n * @api\n */\nCollection.prototype.remove = function(elem) {\n  const arr = this.array_;\n  for (let i = 0, ii = arr.length; i < ii; ++i) {\n    if (arr[i] === elem) {\n      return this.removeAt(i);\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * Remove the element at the provided index and return it.\n * Return `undefined` if the collection does not contain this index.\n * @param {number} index Index.\n * @return {T|undefined} Value.\n * @api\n */\nCollection.prototype.removeAt = function(index) {\n  const prev = this.array_[index];\n  this.array_.splice(index, 1);\n  this.updateLength_();\n  this.dispatchEvent(new CollectionEvent(CollectionEventType.REMOVE, prev));\n  return prev;\n};\n\n\n/**\n * Set the element at the provided index.\n * @param {number} index Index.\n * @param {T} elem Element.\n * @api\n */\nCollection.prototype.setAt = function(index, elem) {\n  const n = this.getLength();\n  if (index < n) {\n    if (this.unique_) {\n      this.assertUnique_(elem, index);\n    }\n    const prev = this.array_[index];\n    this.array_[index] = elem;\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.REMOVE, prev));\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem));\n  } else {\n    for (let j = n; j < index; ++j) {\n      this.insertAt(j, undefined);\n    }\n    this.insertAt(index, elem);\n  }\n};\n\n\n/**\n * @private\n */\nCollection.prototype.updateLength_ = function() {\n  this.set(Property.LENGTH, this.array_.length);\n};\n\n\n/**\n * @private\n * @param {T} elem Element.\n * @param {number=} opt_except Optional index to ignore.\n */\nCollection.prototype.assertUnique_ = function(elem, opt_except) {\n  for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n    if (this.array_[i] === elem && i !== opt_except) {\n      throw new AssertionError(58);\n    }\n  }\n};\n\nexport default Collection;\n","/**\n * @module ol/MapEvent\n */\nimport {inherits} from './index.js';\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map event.\n *\n * @constructor\n * @extends {module:ol/events/Event}\n * @param {string} type Event type.\n * @param {module:ol/PluggableMap} map Map.\n * @param {?module:ol/PluggableMap~FrameState=} opt_frameState Frame state.\n */\nconst MapEvent = function(type, map, opt_frameState) {\n\n  Event.call(this, type);\n\n  /**\n   * The map where the event occurred.\n   * @type {module:ol/PluggableMap}\n   * @api\n   */\n  this.map = map;\n\n  /**\n   * The frame state at the time of the event.\n   * @type {?module:ol/PluggableMap~FrameState}\n   * @api\n   */\n  this.frameState = opt_frameState !== undefined ? opt_frameState : null;\n\n};\n\ninherits(MapEvent, Event);\nexport default MapEvent;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport {inherits} from './index.js';\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map browser event.\n *\n * @constructor\n * @extends {module:ol/MapEvent}\n * @param {string} type Event type.\n * @param {module:ol/PluggableMap} map Map.\n * @param {Event} browserEvent Browser event.\n * @param {boolean=} opt_dragging Is the map currently being dragged?\n * @param {?module:ol/PluggableMap~FrameState=} opt_frameState Frame state.\n */\nconst MapBrowserEvent = function(type, map, browserEvent, opt_dragging, opt_frameState) {\n\n  MapEvent.call(this, type, map, opt_frameState);\n\n  /**\n   * The original browser event.\n   * @const\n   * @type {Event}\n   * @api\n   */\n  this.originalEvent = browserEvent;\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original browser event.\n   * @type {module:ol~Pixel}\n   * @api\n   */\n  this.pixel = map.getEventPixel(browserEvent);\n\n  /**\n   * The coordinate in view projection corresponding to the original browser event.\n   * @type {module:ol/coordinate~Coordinate}\n   * @api\n   */\n  this.coordinate = map.getCoordinateFromPixel(this.pixel);\n\n  /**\n   * Indicates if the map is currently being dragged. Only set for\n   * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n   *\n   * @type {boolean}\n   * @api\n   */\n  this.dragging = opt_dragging !== undefined ? opt_dragging : false;\n\n};\n\ninherits(MapBrowserEvent, MapEvent);\n\n\n/**\n * Prevents the default browser action.\n * @see https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault\n * @override\n * @api\n */\nMapBrowserEvent.prototype.preventDefault = function() {\n  MapEvent.prototype.preventDefault.call(this);\n  this.originalEvent.preventDefault();\n};\n\n\n/**\n * Prevents further propagation of the current event.\n * @see https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation\n * @override\n * @api\n */\nMapBrowserEvent.prototype.stopPropagation = function() {\n  MapEvent.prototype.stopPropagation.call(this);\n  this.originalEvent.stopPropagation();\n};\nexport default MapBrowserEvent;\n","/**\n * @module ol/has\n */\nimport {HAS_WEBGL} from './index.js';\n\nconst ua = typeof navigator !== 'undefined' ?\n  navigator.userAgent.toLowerCase() : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.indexOf('firefox') !== -1;\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.indexOf('macintosh') !== -1;\n\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO = window.devicePixelRatio || 1;\n\n\n/**\n * True if the browser's Canvas implementation implements {get,set}LineDash.\n * @type {boolean}\n */\nexport const CANVAS_LINE_DASH = function() {\n  let has = false;\n  try {\n    has = !!document.createElement('CANVAS').getContext('2d').setLineDash;\n  } catch (e) {\n    // pass\n  }\n  return has;\n}();\n\n\n/**\n * Is HTML5 geolocation supported in the current browser?\n * @const\n * @type {boolean}\n * @api\n */\nexport const GEOLOCATION = 'geolocation' in navigator;\n\n\n/**\n * True if browser supports touch events.\n * @const\n * @type {boolean}\n * @api\n */\nexport const TOUCH = 'ontouchstart' in window;\n\n\n/**\n * True if browser supports pointer events.\n * @const\n * @type {boolean}\n */\nexport const POINTER = 'PointerEvent' in window;\n\n\n/**\n * True if browser supports ms pointer events (IE 10).\n * @const\n * @type {boolean}\n */\nexport const MSPOINTER = !!(navigator.msPointerEnabled);\n\n\n/**\n * True if both OpenLayers and browser support WebGL.\n * @const\n * @type {boolean}\n * @api\n */\nexport const WEBGL = HAS_WEBGL;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel'\n};\n","/**\n * @module ol/MapBrowserPointerEvent\n */\nimport {inherits} from './index.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\n\n/**\n * @constructor\n * @extends {module:ol/MapBrowserEvent}\n * @param {string} type Event type.\n * @param {module:ol/PluggableMap} map Map.\n * @param {module:ol/pointer/PointerEvent} pointerEvent Pointer\n * event.\n * @param {boolean=} opt_dragging Is the map currently being dragged?\n * @param {?module:ol/PluggableMap~FrameState=} opt_frameState Frame state.\n */\nconst MapBrowserPointerEvent = function(type, map, pointerEvent, opt_dragging,\n  opt_frameState) {\n\n  MapBrowserEvent.call(this, type, map, pointerEvent.originalEvent, opt_dragging,\n    opt_frameState);\n\n  /**\n   * @const\n   * @type {module:ol/pointer/PointerEvent}\n   */\n  this.pointerEvent = pointerEvent;\n\n};\n\ninherits(MapBrowserPointerEvent, MapBrowserEvent);\nexport default MapBrowserPointerEvent;\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel'\n};\n","/**\n * @module ol/pointer/EventSource\n */\n/**\n * @param {module:ol/pointer/PointerEventHandler} dispatcher Event handler.\n * @param {!Object.<string, function(Event)>} mapping Event mapping.\n * @constructor\n */\nconst EventSource = function(dispatcher, mapping) {\n  /**\n   * @type {module:ol/pointer/PointerEventHandler}\n   */\n  this.dispatcher = dispatcher;\n\n  /**\n   * @private\n   * @const\n   * @type {!Object.<string, function(Event)>}\n   */\n  this.mapping_ = mapping;\n};\n\n\n/**\n * List of events supported by this source.\n * @return {Array.<string>} Event names\n */\nEventSource.prototype.getEvents = function() {\n  return Object.keys(this.mapping_);\n};\n\n\n/**\n * Returns the handler that should handle a given event type.\n * @param {string} eventType The event type.\n * @return {function(Event)} Handler\n */\nEventSource.prototype.getHandlerForEvent = function(eventType) {\n  return this.mapping_[eventType];\n};\nexport default EventSource;\n","/**\n * @module ol/pointer/MouseSource\n */\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport {inherits} from '../index.js';\nimport EventSource from '../pointer/EventSource.js';\n\n/**\n * @param {module:ol/pointer/PointerEventHandler} dispatcher Event handler.\n * @constructor\n * @extends {module:ol/pointer/EventSource}\n */\nconst MouseSource = function(dispatcher) {\n  const mapping = {\n    'mousedown': this.mousedown,\n    'mousemove': this.mousemove,\n    'mouseup': this.mouseup,\n    'mouseover': this.mouseover,\n    'mouseout': this.mouseout\n  };\n  EventSource.call(this, dispatcher, mapping);\n\n  /**\n   * @const\n   * @type {!Object.<string, Event|Object>}\n   */\n  this.pointerMap = dispatcher.pointerMap;\n\n  /**\n   * @const\n   * @type {Array.<module:ol~Pixel>}\n   */\n  this.lastTouches = [];\n};\n\ninherits(MouseSource, EventSource);\n\n\n/**\n * @type {number}\n */\nexport const POINTER_ID = 1;\n\n\n/**\n * @type {string}\n */\nexport const POINTER_TYPE = 'mouse';\n\n\n/**\n * Radius around touchend that swallows mouse events.\n *\n * @type {number}\n */\nconst DEDUP_DIST = 25;\n\n\n/**\n * Detect if a mouse event was simulated from a touch by\n * checking if previously there was a touch event at the\n * same position.\n *\n * FIXME - Known problem with the native Android browser on\n * Samsung GT-I9100 (Android 4.1.2):\n * In case the page is scrolled, this function does not work\n * correctly when a canvas is used (WebGL or canvas renderer).\n * Mouse listeners on canvas elements (for this browser), create\n * two mouse events: One 'good' and one 'bad' one (on other browsers or\n * when a div is used, there is only one event). For the 'bad' one,\n * clientX/clientY and also pageX/pageY are wrong when the page\n * is scrolled. Because of that, this function can not detect if\n * the events were simulated from a touch event. As result, a\n * pointer event at a wrong position is dispatched, which confuses\n * the map interactions.\n * It is unclear, how one can get the correct position for the event\n * or detect that the positions are invalid.\n *\n * @private\n * @param {Event} inEvent The in event.\n * @return {boolean} True, if the event was generated by a touch.\n */\nMouseSource.prototype.isEventSimulatedFromTouch_ = function(inEvent) {\n  const lts = this.lastTouches;\n  const x = inEvent.clientX;\n  const y = inEvent.clientY;\n  for (let i = 0, l = lts.length, t; i < l && (t = lts[i]); i++) {\n    // simulated mouse events will be swallowed near a primary touchend\n    const dx = Math.abs(x - t[0]);\n    const dy = Math.abs(y - t[1]);\n    if (dx <= DEDUP_DIST && dy <= DEDUP_DIST) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * Creates a copy of the original event that will be used\n * for the fake pointer event.\n *\n * @param {Event} inEvent The in event.\n * @param {module:ol/pointer/PointerEventHandler} dispatcher Event handler.\n * @return {Object} The copied event.\n */\nfunction prepareEvent(inEvent, dispatcher) {\n  const e = dispatcher.cloneEvent(inEvent, inEvent);\n\n  // forward mouse preventDefault\n  const pd = e.preventDefault;\n  e.preventDefault = function() {\n    inEvent.preventDefault();\n    pd();\n  };\n\n  e.pointerId = POINTER_ID;\n  e.isPrimary = true;\n  e.pointerType = POINTER_TYPE;\n\n  return e;\n}\n\n\n/**\n * Handler for `mousedown`.\n *\n * @param {Event} inEvent The in event.\n */\nMouseSource.prototype.mousedown = function(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    // TODO(dfreedman) workaround for some elements not sending mouseup\n    // http://crbug/149091\n    if (POINTER_ID.toString() in this.pointerMap) {\n      this.cancel(inEvent);\n    }\n    const e = prepareEvent(inEvent, this.dispatcher);\n    this.pointerMap[POINTER_ID.toString()] = inEvent;\n    this.dispatcher.down(e, inEvent);\n  }\n};\n\n\n/**\n * Handler for `mousemove`.\n *\n * @param {Event} inEvent The in event.\n */\nMouseSource.prototype.mousemove = function(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    const e = prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.move(e, inEvent);\n  }\n};\n\n\n/**\n * Handler for `mouseup`.\n *\n * @param {Event} inEvent The in event.\n */\nMouseSource.prototype.mouseup = function(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    const p = this.pointerMap[POINTER_ID.toString()];\n\n    if (p && p.button === inEvent.button) {\n      const e = prepareEvent(inEvent, this.dispatcher);\n      this.dispatcher.up(e, inEvent);\n      this.cleanupMouse();\n    }\n  }\n};\n\n\n/**\n * Handler for `mouseover`.\n *\n * @param {Event} inEvent The in event.\n */\nMouseSource.prototype.mouseover = function(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    const e = prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.enterOver(e, inEvent);\n  }\n};\n\n\n/**\n * Handler for `mouseout`.\n *\n * @param {Event} inEvent The in event.\n */\nMouseSource.prototype.mouseout = function(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    const e = prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.leaveOut(e, inEvent);\n  }\n};\n\n\n/**\n * Dispatches a `pointercancel` event.\n *\n * @param {Event} inEvent The in event.\n */\nMouseSource.prototype.cancel = function(inEvent) {\n  const e = prepareEvent(inEvent, this.dispatcher);\n  this.dispatcher.cancel(e, inEvent);\n  this.cleanupMouse();\n};\n\n\n/**\n * Remove the mouse from the list of active pointers.\n */\nMouseSource.prototype.cleanupMouse = function() {\n  delete this.pointerMap[POINTER_ID.toString()];\n};\nexport default MouseSource;\n","/**\n * @module ol/pointer/MsSource\n */\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport {inherits} from '../index.js';\nimport EventSource from '../pointer/EventSource.js';\n\n/**\n * @param {module:ol/pointer/PointerEventHandler} dispatcher Event handler.\n * @constructor\n * @extends {module:ol/pointer/EventSource}\n */\nconst MsSource = function(dispatcher) {\n  const mapping = {\n    'MSPointerDown': this.msPointerDown,\n    'MSPointerMove': this.msPointerMove,\n    'MSPointerUp': this.msPointerUp,\n    'MSPointerOut': this.msPointerOut,\n    'MSPointerOver': this.msPointerOver,\n    'MSPointerCancel': this.msPointerCancel,\n    'MSGotPointerCapture': this.msGotPointerCapture,\n    'MSLostPointerCapture': this.msLostPointerCapture\n  };\n  EventSource.call(this, dispatcher, mapping);\n\n  /**\n   * @const\n   * @type {!Object.<string, MSPointerEvent|Object>}\n   */\n  this.pointerMap = dispatcher.pointerMap;\n};\n\ninherits(MsSource, EventSource);\n\n/**\n * @const\n * @type {Array.<string>}\n */\nconst POINTER_TYPES = [\n  '',\n  'unavailable',\n  'touch',\n  'pen',\n  'mouse'\n];\n\n\n/**\n * Creates a copy of the original event that will be used\n * for the fake pointer event.\n *\n * @private\n * @param {MSPointerEvent} inEvent The in event.\n * @return {Object} The copied event.\n */\nMsSource.prototype.prepareEvent_ = function(inEvent) {\n  let e = inEvent;\n  if (typeof inEvent.pointerType === 'number') {\n    e = this.dispatcher.cloneEvent(inEvent, inEvent);\n    e.pointerType = POINTER_TYPES[inEvent.pointerType];\n  }\n\n  return e;\n};\n\n\n/**\n * Remove this pointer from the list of active pointers.\n * @param {number} pointerId Pointer identifier.\n */\nMsSource.prototype.cleanup = function(pointerId) {\n  delete this.pointerMap[pointerId.toString()];\n};\n\n\n/**\n * Handler for `msPointerDown`.\n *\n * @param {MSPointerEvent} inEvent The in event.\n */\nMsSource.prototype.msPointerDown = function(inEvent) {\n  this.pointerMap[inEvent.pointerId.toString()] = inEvent;\n  const e = this.prepareEvent_(inEvent);\n  this.dispatcher.down(e, inEvent);\n};\n\n\n/**\n * Handler for `msPointerMove`.\n *\n * @param {MSPointerEvent} inEvent The in event.\n */\nMsSource.prototype.msPointerMove = function(inEvent) {\n  const e = this.prepareEvent_(inEvent);\n  this.dispatcher.move(e, inEvent);\n};\n\n\n/**\n * Handler for `msPointerUp`.\n *\n * @param {MSPointerEvent} inEvent The in event.\n */\nMsSource.prototype.msPointerUp = function(inEvent) {\n  const e = this.prepareEvent_(inEvent);\n  this.dispatcher.up(e, inEvent);\n  this.cleanup(inEvent.pointerId);\n};\n\n\n/**\n * Handler for `msPointerOut`.\n *\n * @param {MSPointerEvent} inEvent The in event.\n */\nMsSource.prototype.msPointerOut = function(inEvent) {\n  const e = this.prepareEvent_(inEvent);\n  this.dispatcher.leaveOut(e, inEvent);\n};\n\n\n/**\n * Handler for `msPointerOver`.\n *\n * @param {MSPointerEvent} inEvent The in event.\n */\nMsSource.prototype.msPointerOver = function(inEvent) {\n  const e = this.prepareEvent_(inEvent);\n  this.dispatcher.enterOver(e, inEvent);\n};\n\n\n/**\n * Handler for `msPointerCancel`.\n *\n * @param {MSPointerEvent} inEvent The in event.\n */\nMsSource.prototype.msPointerCancel = function(inEvent) {\n  const e = this.prepareEvent_(inEvent);\n  this.dispatcher.cancel(e, inEvent);\n  this.cleanup(inEvent.pointerId);\n};\n\n\n/**\n * Handler for `msLostPointerCapture`.\n *\n * @param {MSPointerEvent} inEvent The in event.\n */\nMsSource.prototype.msLostPointerCapture = function(inEvent) {\n  const e = this.dispatcher.makeEvent('lostpointercapture', inEvent, inEvent);\n  this.dispatcher.dispatchEvent(e);\n};\n\n\n/**\n * Handler for `msGotPointerCapture`.\n *\n * @param {MSPointerEvent} inEvent The in event.\n */\nMsSource.prototype.msGotPointerCapture = function(inEvent) {\n  const e = this.dispatcher.makeEvent('gotpointercapture', inEvent, inEvent);\n  this.dispatcher.dispatchEvent(e);\n};\nexport default MsSource;\n","/**\n * @module ol/pointer/NativeSource\n */\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport {inherits} from '../index.js';\nimport EventSource from '../pointer/EventSource.js';\n\n/**\n * @param {module:ol/pointer/PointerEventHandler} dispatcher Event handler.\n * @constructor\n * @extends {module:ol/pointer/EventSource}\n */\nconst NativeSource = function(dispatcher) {\n  const mapping = {\n    'pointerdown': this.pointerDown,\n    'pointermove': this.pointerMove,\n    'pointerup': this.pointerUp,\n    'pointerout': this.pointerOut,\n    'pointerover': this.pointerOver,\n    'pointercancel': this.pointerCancel,\n    'gotpointercapture': this.gotPointerCapture,\n    'lostpointercapture': this.lostPointerCapture\n  };\n  EventSource.call(this, dispatcher, mapping);\n};\n\ninherits(NativeSource, EventSource);\n\n\n/**\n * Handler for `pointerdown`.\n *\n * @param {Event} inEvent The in event.\n */\nNativeSource.prototype.pointerDown = function(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n};\n\n\n/**\n * Handler for `pointermove`.\n *\n * @param {Event} inEvent The in event.\n */\nNativeSource.prototype.pointerMove = function(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n};\n\n\n/**\n * Handler for `pointerup`.\n *\n * @param {Event} inEvent The in event.\n */\nNativeSource.prototype.pointerUp = function(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n};\n\n\n/**\n * Handler for `pointerout`.\n *\n * @param {Event} inEvent The in event.\n */\nNativeSource.prototype.pointerOut = function(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n};\n\n\n/**\n * Handler for `pointerover`.\n *\n * @param {Event} inEvent The in event.\n */\nNativeSource.prototype.pointerOver = function(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n};\n\n\n/**\n * Handler for `pointercancel`.\n *\n * @param {Event} inEvent The in event.\n */\nNativeSource.prototype.pointerCancel = function(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n};\n\n\n/**\n * Handler for `lostpointercapture`.\n *\n * @param {Event} inEvent The in event.\n */\nNativeSource.prototype.lostPointerCapture = function(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n};\n\n\n/**\n * Handler for `gotpointercapture`.\n *\n * @param {Event} inEvent The in event.\n */\nNativeSource.prototype.gotPointerCapture = function(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n};\nexport default NativeSource;\n","/**\n * @module ol/pointer/PointerEvent\n */\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport {inherits} from '../index.js';\nimport Event from '../events/Event.js';\n\n/**\n * A class for pointer events.\n *\n * This class is used as an abstraction for mouse events,\n * touch events and even native pointer events.\n *\n * @constructor\n * @extends {module:ol/events/Event}\n * @param {string} type The type of the event to create.\n * @param {Event} originalEvent The event.\n * @param {Object.<string, ?>=} opt_eventDict An optional dictionary of\n *    initial event properties.\n */\nconst PointerEvent = function(type, originalEvent, opt_eventDict) {\n  Event.call(this, type);\n\n  /**\n   * @const\n   * @type {Event}\n   */\n  this.originalEvent = originalEvent;\n\n  const eventDict = opt_eventDict ? opt_eventDict : {};\n\n  /**\n   * @type {number}\n   */\n  this.buttons = this.getButtons_(eventDict);\n\n  /**\n   * @type {number}\n   */\n  this.pressure = this.getPressure_(eventDict, this.buttons);\n\n  // MouseEvent related properties\n\n  /**\n   * @type {boolean}\n   */\n  this.bubbles = 'bubbles' in eventDict ? eventDict['bubbles'] : false;\n\n  /**\n   * @type {boolean}\n   */\n  this.cancelable = 'cancelable' in eventDict ? eventDict['cancelable'] : false;\n\n  /**\n   * @type {Object}\n   */\n  this.view = 'view' in eventDict ? eventDict['view'] : null;\n\n  /**\n   * @type {number}\n   */\n  this.detail = 'detail' in eventDict ? eventDict['detail'] : null;\n\n  /**\n   * @type {number}\n   */\n  this.screenX = 'screenX' in eventDict ? eventDict['screenX'] : 0;\n\n  /**\n   * @type {number}\n   */\n  this.screenY = 'screenY' in eventDict ? eventDict['screenY'] : 0;\n\n  /**\n   * @type {number}\n   */\n  this.clientX = 'clientX' in eventDict ? eventDict['clientX'] : 0;\n\n  /**\n   * @type {number}\n   */\n  this.clientY = 'clientY' in eventDict ? eventDict['clientY'] : 0;\n\n  /**\n   * @type {boolean}\n   */\n  this.ctrlKey = 'ctrlKey' in eventDict ? eventDict['ctrlKey'] : false;\n\n  /**\n   * @type {boolean}\n   */\n  this.altKey = 'altKey' in eventDict ? eventDict['altKey'] : false;\n\n  /**\n   * @type {boolean}\n   */\n  this.shiftKey = 'shiftKey' in eventDict ? eventDict['shiftKey'] : false;\n\n  /**\n   * @type {boolean}\n   */\n  this.metaKey = 'metaKey' in eventDict ? eventDict['metaKey'] : false;\n\n  /**\n   * @type {number}\n   */\n  this.button = 'button' in eventDict ? eventDict['button'] : 0;\n\n  /**\n   * @type {Node}\n   */\n  this.relatedTarget = 'relatedTarget' in eventDict ?\n    eventDict['relatedTarget'] : null;\n\n  // PointerEvent related properties\n\n  /**\n   * @const\n   * @type {number}\n   */\n  this.pointerId = 'pointerId' in eventDict ? eventDict['pointerId'] : 0;\n\n  /**\n   * @type {number}\n   */\n  this.width = 'width' in eventDict ? eventDict['width'] : 0;\n\n  /**\n   * @type {number}\n   */\n  this.height = 'height' in eventDict ? eventDict['height'] : 0;\n\n  /**\n   * @type {number}\n   */\n  this.tiltX = 'tiltX' in eventDict ? eventDict['tiltX'] : 0;\n\n  /**\n   * @type {number}\n   */\n  this.tiltY = 'tiltY' in eventDict ? eventDict['tiltY'] : 0;\n\n  /**\n   * @type {string}\n   */\n  this.pointerType = 'pointerType' in eventDict ? eventDict['pointerType'] : '';\n\n  /**\n   * @type {number}\n   */\n  this.hwTimestamp = 'hwTimestamp' in eventDict ? eventDict['hwTimestamp'] : 0;\n\n  /**\n   * @type {boolean}\n   */\n  this.isPrimary = 'isPrimary' in eventDict ? eventDict['isPrimary'] : false;\n\n  // keep the semantics of preventDefault\n  if (originalEvent.preventDefault) {\n    this.preventDefault = function() {\n      originalEvent.preventDefault();\n    };\n  }\n};\n\ninherits(PointerEvent, Event);\n\n\n/**\n * Is the `buttons` property supported?\n * @type {boolean}\n */\nlet HAS_BUTTONS = false;\n\n\n/**\n * @private\n * @param {Object.<string, ?>} eventDict The event dictionary.\n * @return {number} Button indicator.\n */\nPointerEvent.prototype.getButtons_ = function(eventDict) {\n  // According to the w3c spec,\n  // http://www.w3.org/TR/DOM-Level-3-Events/#events-MouseEvent-button\n  // MouseEvent.button == 0 can mean either no mouse button depressed, or the\n  // left mouse button depressed.\n  //\n  // As of now, the only way to distinguish between the two states of\n  // MouseEvent.button is by using the deprecated MouseEvent.which property, as\n  // this maps mouse buttons to positive integers > 0, and uses 0 to mean that\n  // no mouse button is held.\n  //\n  // MouseEvent.which is derived from MouseEvent.button at MouseEvent creation,\n  // but initMouseEvent does not expose an argument with which to set\n  // MouseEvent.which. Calling initMouseEvent with a buttonArg of 0 will set\n  // MouseEvent.button == 0 and MouseEvent.which == 1, breaking the expectations\n  // of app developers.\n  //\n  // The only way to propagate the correct state of MouseEvent.which and\n  // MouseEvent.button to a new MouseEvent.button == 0 and MouseEvent.which == 0\n  // is to call initMouseEvent with a buttonArg value of -1.\n  //\n  // This is fixed with DOM Level 4's use of buttons\n  let buttons;\n  if (eventDict.buttons || HAS_BUTTONS) {\n    buttons = eventDict.buttons;\n  } else {\n    switch (eventDict.which) {\n      case 1: buttons = 1; break;\n      case 2: buttons = 4; break;\n      case 3: buttons = 2; break;\n      default: buttons = 0;\n    }\n  }\n  return buttons;\n};\n\n\n/**\n * @private\n * @param {Object.<string, ?>} eventDict The event dictionary.\n * @param {number} buttons Button indicator.\n * @return {number} The pressure.\n */\nPointerEvent.prototype.getPressure_ = function(eventDict, buttons) {\n  // Spec requires that pointers without pressure specified use 0.5 for down\n  // state and 0 for up state.\n  let pressure = 0;\n  if (eventDict.pressure) {\n    pressure = eventDict.pressure;\n  } else {\n    pressure = buttons ? 0.5 : 0;\n  }\n  return pressure;\n};\n\n\n/**\n * Checks if the `buttons` property is supported.\n */\n(function() {\n  try {\n    const ev = new MouseEvent('click', {buttons: 1});\n    HAS_BUTTONS = ev.buttons === 1;\n  } catch (e) {\n    // pass\n  }\n})();\nexport default PointerEvent;\n","/**\n * @module ol/array\n */\n\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array.<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function=} opt_comparator Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, opt_comparator) {\n  let mid, cmp;\n  const comparator = opt_comparator || numberSafeCompareFunction;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + (high - low >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) { /* Too low. */\n      low  = mid + 1;\n\n    } else { /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function numberSafeCompareFunction(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n\n/**\n * Whether the array contains the given object.\n * @param {Array.<*>} arr The array to test for the presence of the element.\n * @param {*} obj The object for which to test.\n * @return {boolean} The object is in the array.\n */\nexport function includes(arr, obj) {\n  return arr.indexOf(obj) >= 0;\n}\n\n\n/**\n * @param {Array.<number>} arr Array.\n * @param {number} target Target.\n * @param {number} direction 0 means return the nearest, > 0\n *    means return the largest nearest, < 0 means return the\n *    smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  const n = arr.length;\n  if (arr[0] <= target) {\n    return 0;\n  } else if (target <= arr[n - 1]) {\n    return n - 1;\n  } else {\n    let i;\n    if (direction > 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] < target) {\n          return i - 1;\n        }\n      }\n    } else if (direction < 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] <= target) {\n          return i;\n        }\n      }\n    } else {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] == target) {\n          return i;\n        } else if (arr[i] < target) {\n          if (arr[i - 1] - target < target - arr[i]) {\n            return i - 1;\n          } else {\n            return i;\n          }\n        }\n      }\n    }\n    return n - 1;\n  }\n}\n\n\n/**\n * @param {Array.<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n\n/**\n * @param {Array.<VALUE>} arr The array to modify.\n * @param {!Array.<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n\n/**\n * @param {Array.<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n\n/**\n * @param {Array.<VALUE>} arr The array to search in.\n * @param {function(VALUE, number, ?) : boolean} func The function to compare.\n * @template VALUE\n * @return {VALUE|null} The element found or null.\n */\nexport function find(arr, func) {\n  const length = arr.length >>> 0;\n  let value;\n\n  for (let i = 0; i < length; i++) {\n    value = arr[i];\n    if (func(value, i, arr)) {\n      return value;\n    }\n  }\n  return null;\n}\n\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n/**\n * @param {Array.<*>} arr The array to sort (modifies original).\n * @param {Function} compareFnc Comparison function.\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function(a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n\n/**\n * @param {Array.<*>} arr The array to search in.\n * @param {Function} func Comparison function.\n * @return {number} Return index.\n */\nexport function findIndex(arr, func) {\n  let index;\n  const found = !arr.every(function(el, idx) {\n    index = idx;\n    return !func(el, idx, arr);\n  });\n  return found ? index : -1;\n}\n\n\n/**\n * @param {Array.<*>} arr The array to test.\n * @param {Function=} opt_func Comparison function.\n * @param {boolean=} opt_strict Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, opt_func, opt_strict) {\n  const compare = opt_func || numberSafeCompareFunction;\n  return arr.every(function(currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || opt_strict && res === 0);\n  });\n}\n","/**\n * @module ol/pointer/TouchSource\n */\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport {inherits} from '../index.js';\nimport {remove} from '../array.js';\nimport EventSource from '../pointer/EventSource.js';\nimport {POINTER_ID} from '../pointer/MouseSource.js';\n\n\n/**\n * @constructor\n * @param {module:ol/pointer/PointerEventHandler} dispatcher The event handler.\n * @param {module:ol/pointer/MouseSource} mouseSource Mouse source.\n * @extends {module:ol/pointer/EventSource}\n */\nconst TouchSource = function(dispatcher, mouseSource) {\n  const mapping = {\n    'touchstart': this.touchstart,\n    'touchmove': this.touchmove,\n    'touchend': this.touchend,\n    'touchcancel': this.touchcancel\n  };\n  EventSource.call(this, dispatcher, mapping);\n\n  /**\n   * @const\n   * @type {!Object.<string, Event|Object>}\n   */\n  this.pointerMap = dispatcher.pointerMap;\n\n  /**\n   * @const\n   * @type {module:ol/pointer/MouseSource}\n   */\n  this.mouseSource = mouseSource;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.firstTouchId_ = undefined;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.clickCount_ = 0;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.resetId_ = undefined;\n\n  /**\n   * Mouse event timeout: This should be long enough to\n   * ignore compat mouse events made by touch.\n   * @private\n   * @type {number}\n   */\n  this.dedupTimeout_ = 2500;\n};\n\ninherits(TouchSource, EventSource);\n\n\n/**\n * @type {number}\n */\nconst CLICK_COUNT_TIMEOUT = 200;\n\n\n/**\n * @type {string}\n */\nconst POINTER_TYPE = 'touch';\n\n/**\n * @private\n * @param {Touch} inTouch The in touch.\n * @return {boolean} True, if this is the primary touch.\n */\nTouchSource.prototype.isPrimaryTouch_ = function(inTouch) {\n  return this.firstTouchId_ === inTouch.identifier;\n};\n\n\n/**\n * Set primary touch if there are no pointers, or the only pointer is the mouse.\n * @param {Touch} inTouch The in touch.\n * @private\n */\nTouchSource.prototype.setPrimaryTouch_ = function(inTouch) {\n  const count = Object.keys(this.pointerMap).length;\n  if (count === 0 || (count === 1 && POINTER_ID.toString() in this.pointerMap)) {\n    this.firstTouchId_ = inTouch.identifier;\n    this.cancelResetClickCount_();\n  }\n};\n\n\n/**\n * @private\n * @param {Object} inPointer The in pointer object.\n */\nTouchSource.prototype.removePrimaryPointer_ = function(inPointer) {\n  if (inPointer.isPrimary) {\n    this.firstTouchId_ = undefined;\n    this.resetClickCount_();\n  }\n};\n\n\n/**\n * @private\n */\nTouchSource.prototype.resetClickCount_ = function() {\n  this.resetId_ = setTimeout(\n    this.resetClickCountHandler_.bind(this),\n    CLICK_COUNT_TIMEOUT);\n};\n\n\n/**\n * @private\n */\nTouchSource.prototype.resetClickCountHandler_ = function() {\n  this.clickCount_ = 0;\n  this.resetId_ = undefined;\n};\n\n\n/**\n * @private\n */\nTouchSource.prototype.cancelResetClickCount_ = function() {\n  if (this.resetId_ !== undefined) {\n    clearTimeout(this.resetId_);\n  }\n};\n\n\n/**\n * @private\n * @param {Event} browserEvent Browser event\n * @param {Touch} inTouch Touch event\n * @return {Object} A pointer object.\n */\nTouchSource.prototype.touchToPointer_ = function(browserEvent, inTouch) {\n  const e = this.dispatcher.cloneEvent(browserEvent, inTouch);\n  // Spec specifies that pointerId 1 is reserved for Mouse.\n  // Touch identifiers can start at 0.\n  // Add 2 to the touch identifier for compatibility.\n  e.pointerId = inTouch.identifier + 2;\n  // TODO: check if this is necessary?\n  //e.target = findTarget(e);\n  e.bubbles = true;\n  e.cancelable = true;\n  e.detail = this.clickCount_;\n  e.button = 0;\n  e.buttons = 1;\n  e.width = inTouch.webkitRadiusX || inTouch.radiusX || 0;\n  e.height = inTouch.webkitRadiusY || inTouch.radiusY || 0;\n  e.pressure = inTouch.webkitForce || inTouch.force || 0.5;\n  e.isPrimary = this.isPrimaryTouch_(inTouch);\n  e.pointerType = POINTER_TYPE;\n\n  // make sure that the properties that are different for\n  // each `Touch` object are not copied from the BrowserEvent object\n  e.clientX = inTouch.clientX;\n  e.clientY = inTouch.clientY;\n  e.screenX = inTouch.screenX;\n  e.screenY = inTouch.screenY;\n\n  return e;\n};\n\n\n/**\n * @private\n * @param {Event} inEvent Touch event\n * @param {function(Event, Object)} inFunction In function.\n */\nTouchSource.prototype.processTouches_ = function(inEvent, inFunction) {\n  const touches = Array.prototype.slice.call(inEvent.changedTouches);\n  const count = touches.length;\n  function preventDefault() {\n    inEvent.preventDefault();\n  }\n  for (let i = 0; i < count; ++i) {\n    const pointer = this.touchToPointer_(inEvent, touches[i]);\n    // forward touch preventDefaults\n    pointer.preventDefault = preventDefault;\n    inFunction.call(this, inEvent, pointer);\n  }\n};\n\n\n/**\n * @private\n * @param {TouchList} touchList The touch list.\n * @param {number} searchId Search identifier.\n * @return {boolean} True, if the `Touch` with the given id is in the list.\n */\nTouchSource.prototype.findTouch_ = function(touchList, searchId) {\n  const l = touchList.length;\n  for (let i = 0; i < l; i++) {\n    const touch = touchList[i];\n    if (touch.identifier === searchId) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * In some instances, a touchstart can happen without a touchend. This\n * leaves the pointermap in a broken state.\n * Therefore, on every touchstart, we remove the touches that did not fire a\n * touchend event.\n * To keep state globally consistent, we fire a pointercancel for\n * this \"abandoned\" touch\n *\n * @private\n * @param {Event} inEvent The in event.\n */\nTouchSource.prototype.vacuumTouches_ = function(inEvent) {\n  const touchList = inEvent.touches;\n  // pointerMap.getCount() should be < touchList.length here,\n  // as the touchstart has not been processed yet.\n  const keys = Object.keys(this.pointerMap);\n  const count = keys.length;\n  if (count >= touchList.length) {\n    const d = [];\n    for (let i = 0; i < count; ++i) {\n      const key = keys[i];\n      const value = this.pointerMap[key];\n      // Never remove pointerId == 1, which is mouse.\n      // Touch identifiers are 2 smaller than their pointerId, which is the\n      // index in pointermap.\n      if (key != POINTER_ID && !this.findTouch_(touchList, key - 2)) {\n        d.push(value.out);\n      }\n    }\n    for (let i = 0; i < d.length; ++i) {\n      this.cancelOut_(inEvent, d[i]);\n    }\n  }\n};\n\n\n/**\n * Handler for `touchstart`, triggers `pointerover`,\n * `pointerenter` and `pointerdown` events.\n *\n * @param {Event} inEvent The in event.\n */\nTouchSource.prototype.touchstart = function(inEvent) {\n  this.vacuumTouches_(inEvent);\n  this.setPrimaryTouch_(inEvent.changedTouches[0]);\n  this.dedupSynthMouse_(inEvent);\n  this.clickCount_++;\n  this.processTouches_(inEvent, this.overDown_);\n};\n\n\n/**\n * @private\n * @param {Event} browserEvent The event.\n * @param {Object} inPointer The in pointer object.\n */\nTouchSource.prototype.overDown_ = function(browserEvent, inPointer) {\n  this.pointerMap[inPointer.pointerId] = {\n    target: inPointer.target,\n    out: inPointer,\n    outTarget: inPointer.target\n  };\n  this.dispatcher.over(inPointer, browserEvent);\n  this.dispatcher.enter(inPointer, browserEvent);\n  this.dispatcher.down(inPointer, browserEvent);\n};\n\n\n/**\n * Handler for `touchmove`.\n *\n * @param {Event} inEvent The in event.\n */\nTouchSource.prototype.touchmove = function(inEvent) {\n  inEvent.preventDefault();\n  this.processTouches_(inEvent, this.moveOverOut_);\n};\n\n\n/**\n * @private\n * @param {Event} browserEvent The event.\n * @param {Object} inPointer The in pointer.\n */\nTouchSource.prototype.moveOverOut_ = function(browserEvent, inPointer) {\n  const event = inPointer;\n  const pointer = this.pointerMap[event.pointerId];\n  // a finger drifted off the screen, ignore it\n  if (!pointer) {\n    return;\n  }\n  const outEvent = pointer.out;\n  const outTarget = pointer.outTarget;\n  this.dispatcher.move(event, browserEvent);\n  if (outEvent && outTarget !== event.target) {\n    outEvent.relatedTarget = event.target;\n    event.relatedTarget = outTarget;\n    // recover from retargeting by shadow\n    outEvent.target = outTarget;\n    if (event.target) {\n      this.dispatcher.leaveOut(outEvent, browserEvent);\n      this.dispatcher.enterOver(event, browserEvent);\n    } else {\n      // clean up case when finger leaves the screen\n      event.target = outTarget;\n      event.relatedTarget = null;\n      this.cancelOut_(browserEvent, event);\n    }\n  }\n  pointer.out = event;\n  pointer.outTarget = event.target;\n};\n\n\n/**\n * Handler for `touchend`, triggers `pointerup`,\n * `pointerout` and `pointerleave` events.\n *\n * @param {Event} inEvent The event.\n */\nTouchSource.prototype.touchend = function(inEvent) {\n  this.dedupSynthMouse_(inEvent);\n  this.processTouches_(inEvent, this.upOut_);\n};\n\n\n/**\n * @private\n * @param {Event} browserEvent An event.\n * @param {Object} inPointer The inPointer object.\n */\nTouchSource.prototype.upOut_ = function(browserEvent, inPointer) {\n  this.dispatcher.up(inPointer, browserEvent);\n  this.dispatcher.out(inPointer, browserEvent);\n  this.dispatcher.leave(inPointer, browserEvent);\n  this.cleanUpPointer_(inPointer);\n};\n\n\n/**\n * Handler for `touchcancel`, triggers `pointercancel`,\n * `pointerout` and `pointerleave` events.\n *\n * @param {Event} inEvent The in event.\n */\nTouchSource.prototype.touchcancel = function(inEvent) {\n  this.processTouches_(inEvent, this.cancelOut_);\n};\n\n\n/**\n * @private\n * @param {Event} browserEvent The event.\n * @param {Object} inPointer The in pointer.\n */\nTouchSource.prototype.cancelOut_ = function(browserEvent, inPointer) {\n  this.dispatcher.cancel(inPointer, browserEvent);\n  this.dispatcher.out(inPointer, browserEvent);\n  this.dispatcher.leave(inPointer, browserEvent);\n  this.cleanUpPointer_(inPointer);\n};\n\n\n/**\n * @private\n * @param {Object} inPointer The inPointer object.\n */\nTouchSource.prototype.cleanUpPointer_ = function(inPointer) {\n  delete this.pointerMap[inPointer.pointerId];\n  this.removePrimaryPointer_(inPointer);\n};\n\n\n/**\n * Prevent synth mouse events from creating pointer events.\n *\n * @private\n * @param {Event} inEvent The in event.\n */\nTouchSource.prototype.dedupSynthMouse_ = function(inEvent) {\n  const lts = this.mouseSource.lastTouches;\n  const t = inEvent.changedTouches[0];\n  // only the primary finger will synth mouse events\n  if (this.isPrimaryTouch_(t)) {\n    // remember x/y of last touch\n    const lt = [t.clientX, t.clientY];\n    lts.push(lt);\n\n    setTimeout(function() {\n      // remove touch after timeout\n      remove(lts, lt);\n    }, this.dedupTimeout_);\n  }\n};\nexport default TouchSource;\n","/**\n * @module ol/pointer/PointerEventHandler\n */\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport {inherits} from '../index.js';\nimport {listen, unlisten} from '../events.js';\nimport EventTarget from '../events/EventTarget.js';\nimport {POINTER, MSPOINTER, TOUCH} from '../has.js';\nimport PointerEventType from '../pointer/EventType.js';\nimport MouseSource from '../pointer/MouseSource.js';\nimport MsSource from '../pointer/MsSource.js';\nimport NativeSource from '../pointer/NativeSource.js';\nimport PointerEvent from '../pointer/PointerEvent.js';\nimport TouchSource from '../pointer/TouchSource.js';\n\n/**\n * @constructor\n * @extends {module:ol/events/EventTarget}\n * @param {Element|HTMLDocument} element Viewport element.\n */\nconst PointerEventHandler = function(element) {\n  EventTarget.call(this);\n\n  /**\n   * @const\n   * @private\n   * @type {Element|HTMLDocument}\n   */\n  this.element_ = element;\n\n  /**\n   * @const\n   * @type {!Object.<string, Event|Object>}\n   */\n  this.pointerMap = {};\n\n  /**\n   * @type {Object.<string, function(Event)>}\n   * @private\n   */\n  this.eventMap_ = {};\n\n  /**\n   * @type {Array.<module:ol/pointer/EventSource>}\n   * @private\n   */\n  this.eventSourceList_ = [];\n\n  this.registerSources();\n};\n\ninherits(PointerEventHandler, EventTarget);\n\n/**\n * Properties to copy when cloning an event, with default values.\n * @type {Array.<Array>}\n */\nconst CLONE_PROPS = [\n  // MouseEvent\n  ['bubbles', false],\n  ['cancelable', false],\n  ['view', null],\n  ['detail', null],\n  ['screenX', 0],\n  ['screenY', 0],\n  ['clientX', 0],\n  ['clientY', 0],\n  ['ctrlKey', false],\n  ['altKey', false],\n  ['shiftKey', false],\n  ['metaKey', false],\n  ['button', 0],\n  ['relatedTarget', null],\n  // DOM Level 3\n  ['buttons', 0],\n  // PointerEvent\n  ['pointerId', 0],\n  ['width', 0],\n  ['height', 0],\n  ['pressure', 0],\n  ['tiltX', 0],\n  ['tiltY', 0],\n  ['pointerType', ''],\n  ['hwTimestamp', 0],\n  ['isPrimary', false],\n  // event instance\n  ['type', ''],\n  ['target', null],\n  ['currentTarget', null],\n  ['which', 0]\n];\n\n\n/**\n * Set up the event sources (mouse, touch and native pointers)\n * that generate pointer events.\n */\nPointerEventHandler.prototype.registerSources = function() {\n  if (POINTER) {\n    this.registerSource('native', new NativeSource(this));\n  } else if (MSPOINTER) {\n    this.registerSource('ms', new MsSource(this));\n  } else {\n    const mouseSource = new MouseSource(this);\n    this.registerSource('mouse', mouseSource);\n\n    if (TOUCH) {\n      this.registerSource('touch', new TouchSource(this, mouseSource));\n    }\n  }\n\n  // register events on the viewport element\n  this.register_();\n};\n\n\n/**\n * Add a new event source that will generate pointer events.\n *\n * @param {string} name A name for the event source\n * @param {module:ol/pointer/EventSource} source The source event.\n */\nPointerEventHandler.prototype.registerSource = function(name, source) {\n  const s = source;\n  const newEvents = s.getEvents();\n\n  if (newEvents) {\n    newEvents.forEach(function(e) {\n      const handler = s.getHandlerForEvent(e);\n\n      if (handler) {\n        this.eventMap_[e] = handler.bind(s);\n      }\n    }.bind(this));\n    this.eventSourceList_.push(s);\n  }\n};\n\n\n/**\n * Set up the events for all registered event sources.\n * @private\n */\nPointerEventHandler.prototype.register_ = function() {\n  const l = this.eventSourceList_.length;\n  for (let i = 0; i < l; i++) {\n    const eventSource = this.eventSourceList_[i];\n    this.addEvents_(eventSource.getEvents());\n  }\n};\n\n\n/**\n * Remove all registered events.\n * @private\n */\nPointerEventHandler.prototype.unregister_ = function() {\n  const l = this.eventSourceList_.length;\n  for (let i = 0; i < l; i++) {\n    const eventSource = this.eventSourceList_[i];\n    this.removeEvents_(eventSource.getEvents());\n  }\n};\n\n\n/**\n * Calls the right handler for a new event.\n * @private\n * @param {Event} inEvent Browser event.\n */\nPointerEventHandler.prototype.eventHandler_ = function(inEvent) {\n  const type = inEvent.type;\n  const handler = this.eventMap_[type];\n  if (handler) {\n    handler(inEvent);\n  }\n};\n\n\n/**\n * Setup listeners for the given events.\n * @private\n * @param {Array.<string>} events List of events.\n */\nPointerEventHandler.prototype.addEvents_ = function(events) {\n  events.forEach(function(eventName) {\n    listen(this.element_, eventName, this.eventHandler_, this);\n  }.bind(this));\n};\n\n\n/**\n * Unregister listeners for the given events.\n * @private\n * @param {Array.<string>} events List of events.\n */\nPointerEventHandler.prototype.removeEvents_ = function(events) {\n  events.forEach(function(e) {\n    unlisten(this.element_, e, this.eventHandler_, this);\n  }.bind(this));\n};\n\n\n/**\n * Returns a snapshot of inEvent, with writable properties.\n *\n * @param {Event} event Browser event.\n * @param {Event|Touch} inEvent An event that contains\n *    properties to copy.\n * @return {Object} An object containing shallow copies of\n *    `inEvent`'s properties.\n */\nPointerEventHandler.prototype.cloneEvent = function(event, inEvent) {\n  const eventCopy = {};\n  for (let i = 0, ii = CLONE_PROPS.length; i < ii; i++) {\n    const p = CLONE_PROPS[i][0];\n    eventCopy[p] = event[p] || inEvent[p] || CLONE_PROPS[i][1];\n  }\n\n  return eventCopy;\n};\n\n\n// EVENTS\n\n\n/**\n * Triggers a 'pointerdown' event.\n * @param {Object} data Pointer event data.\n * @param {Event} event The event.\n */\nPointerEventHandler.prototype.down = function(data, event) {\n  this.fireEvent(PointerEventType.POINTERDOWN, data, event);\n};\n\n\n/**\n * Triggers a 'pointermove' event.\n * @param {Object} data Pointer event data.\n * @param {Event} event The event.\n */\nPointerEventHandler.prototype.move = function(data, event) {\n  this.fireEvent(PointerEventType.POINTERMOVE, data, event);\n};\n\n\n/**\n * Triggers a 'pointerup' event.\n * @param {Object} data Pointer event data.\n * @param {Event} event The event.\n */\nPointerEventHandler.prototype.up = function(data, event) {\n  this.fireEvent(PointerEventType.POINTERUP, data, event);\n};\n\n\n/**\n * Triggers a 'pointerenter' event.\n * @param {Object} data Pointer event data.\n * @param {Event} event The event.\n */\nPointerEventHandler.prototype.enter = function(data, event) {\n  data.bubbles = false;\n  this.fireEvent(PointerEventType.POINTERENTER, data, event);\n};\n\n\n/**\n * Triggers a 'pointerleave' event.\n * @param {Object} data Pointer event data.\n * @param {Event} event The event.\n */\nPointerEventHandler.prototype.leave = function(data, event) {\n  data.bubbles = false;\n  this.fireEvent(PointerEventType.POINTERLEAVE, data, event);\n};\n\n\n/**\n * Triggers a 'pointerover' event.\n * @param {Object} data Pointer event data.\n * @param {Event} event The event.\n */\nPointerEventHandler.prototype.over = function(data, event) {\n  data.bubbles = true;\n  this.fireEvent(PointerEventType.POINTEROVER, data, event);\n};\n\n\n/**\n * Triggers a 'pointerout' event.\n * @param {Object} data Pointer event data.\n * @param {Event} event The event.\n */\nPointerEventHandler.prototype.out = function(data, event) {\n  data.bubbles = true;\n  this.fireEvent(PointerEventType.POINTEROUT, data, event);\n};\n\n\n/**\n * Triggers a 'pointercancel' event.\n * @param {Object} data Pointer event data.\n * @param {Event} event The event.\n */\nPointerEventHandler.prototype.cancel = function(data, event) {\n  this.fireEvent(PointerEventType.POINTERCANCEL, data, event);\n};\n\n\n/**\n * Triggers a combination of 'pointerout' and 'pointerleave' events.\n * @param {Object} data Pointer event data.\n * @param {Event} event The event.\n */\nPointerEventHandler.prototype.leaveOut = function(data, event) {\n  this.out(data, event);\n  if (!this.contains_(data.target, data.relatedTarget)) {\n    this.leave(data, event);\n  }\n};\n\n\n/**\n * Triggers a combination of 'pointerover' and 'pointerevents' events.\n * @param {Object} data Pointer event data.\n * @param {Event} event The event.\n */\nPointerEventHandler.prototype.enterOver = function(data, event) {\n  this.over(data, event);\n  if (!this.contains_(data.target, data.relatedTarget)) {\n    this.enter(data, event);\n  }\n};\n\n\n/**\n * @private\n * @param {Element} container The container element.\n * @param {Element} contained The contained element.\n * @return {boolean} Returns true if the container element\n *   contains the other element.\n */\nPointerEventHandler.prototype.contains_ = function(container, contained) {\n  if (!container || !contained) {\n    return false;\n  }\n  return container.contains(contained);\n};\n\n\n// EVENT CREATION AND TRACKING\n/**\n * Creates a new Event of type `inType`, based on the information in\n * `data`.\n *\n * @param {string} inType A string representing the type of event to create.\n * @param {Object} data Pointer event data.\n * @param {Event} event The event.\n * @return {module:ol/pointer/PointerEvent} A PointerEvent of type `inType`.\n */\nPointerEventHandler.prototype.makeEvent = function(inType, data, event) {\n  return new PointerEvent(inType, event, data);\n};\n\n\n/**\n * Make and dispatch an event in one call.\n * @param {string} inType A string representing the type of event.\n * @param {Object} data Pointer event data.\n * @param {Event} event The event.\n */\nPointerEventHandler.prototype.fireEvent = function(inType, data, event) {\n  const e = this.makeEvent(inType, data, event);\n  this.dispatchEvent(e);\n};\n\n\n/**\n * Creates a pointer event from a native pointer event\n * and dispatches this event.\n * @param {Event} event A platform event with a target.\n */\nPointerEventHandler.prototype.fireNativeEvent = function(event) {\n  const e = this.makeEvent(event.type, event, event);\n  this.dispatchEvent(e);\n};\n\n\n/**\n * Wrap a native mouse event into a pointer event.\n * This proxy method is required for the legacy IE support.\n * @param {string} eventType The pointer event type.\n * @param {Event} event The event.\n * @return {module:ol/pointer/PointerEvent} The wrapped event.\n */\nPointerEventHandler.prototype.wrapMouseEvent = function(eventType, event) {\n  const pointerEvent = this.makeEvent(\n    eventType, MouseSource.prepareEvent(event, this), event);\n  return pointerEvent;\n};\n\n\n/**\n * @inheritDoc\n */\nPointerEventHandler.prototype.disposeInternal = function() {\n  this.unregister_();\n  EventTarget.prototype.disposeInternal.call(this);\n};\n\n\nexport default PointerEventHandler;\n","/**\n * @module ol/MapBrowserEventHandler\n */\nimport {inherits} from './index.js';\nimport {DEVICE_PIXEL_RATIO} from './has.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapBrowserPointerEvent from './MapBrowserPointerEvent.js';\nimport {listen, unlistenByKey} from './events.js';\nimport EventTarget from './events/EventTarget.js';\nimport PointerEventType from './pointer/EventType.js';\nimport PointerEventHandler from './pointer/PointerEventHandler.js';\n\n/**\n * @param {module:ol/PluggableMap} map The map with the viewport to\n * listen to events on.\n * @param {number=} moveTolerance The minimal distance the pointer must travel\n * to trigger a move.\n * @constructor\n * @extends {module:ol/events/EventTarget}\n */\nconst MapBrowserEventHandler = function(map, moveTolerance) {\n\n  EventTarget.call(this);\n\n  /**\n   * This is the element that we will listen to the real events on.\n   * @type {module:ol/PluggableMap}\n   * @private\n   */\n  this.map_ = map;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.clickTimeoutId_ = 0;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.dragging_ = false;\n\n  /**\n   * @type {!Array.<module:ol/events~EventsKey>}\n   * @private\n   */\n  this.dragListenerKeys_ = [];\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.moveTolerance_ = moveTolerance ?\n    moveTolerance * DEVICE_PIXEL_RATIO : DEVICE_PIXEL_RATIO;\n\n  /**\n   * The most recent \"down\" type event (or null if none have occurred).\n   * Set on pointerdown.\n   * @type {module:ol/pointer/PointerEvent}\n   * @private\n   */\n  this.down_ = null;\n\n  const element = this.map_.getViewport();\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.activePointers_ = 0;\n\n  /**\n   * @type {!Object.<number, boolean>}\n   * @private\n   */\n  this.trackedTouches_ = {};\n\n  /**\n   * Event handler which generates pointer events for\n   * the viewport element.\n   *\n   * @type {module:ol/pointer/PointerEventHandler}\n   * @private\n   */\n  this.pointerEventHandler_ = new PointerEventHandler(element);\n\n  /**\n   * Event handler which generates pointer events for\n   * the document (used when dragging).\n   *\n   * @type {module:ol/pointer/PointerEventHandler}\n   * @private\n   */\n  this.documentPointerEventHandler_ = null;\n\n  /**\n   * @type {?module:ol/events~EventsKey}\n   * @private\n   */\n  this.pointerdownListenerKey_ = listen(this.pointerEventHandler_,\n    PointerEventType.POINTERDOWN,\n    this.handlePointerDown_, this);\n\n  /**\n   * @type {?module:ol/events~EventsKey}\n   * @private\n   */\n  this.relayedListenerKey_ = listen(this.pointerEventHandler_,\n    PointerEventType.POINTERMOVE,\n    this.relayEvent_, this);\n\n};\n\ninherits(MapBrowserEventHandler, EventTarget);\n\n\n/**\n * @param {module:ol/pointer/PointerEvent} pointerEvent Pointer\n * event.\n * @private\n */\nMapBrowserEventHandler.prototype.emulateClick_ = function(pointerEvent) {\n  let newEvent = new MapBrowserPointerEvent(\n    MapBrowserEventType.CLICK, this.map_, pointerEvent);\n  this.dispatchEvent(newEvent);\n  if (this.clickTimeoutId_ !== 0) {\n    // double-click\n    clearTimeout(this.clickTimeoutId_);\n    this.clickTimeoutId_ = 0;\n    newEvent = new MapBrowserPointerEvent(\n      MapBrowserEventType.DBLCLICK, this.map_, pointerEvent);\n    this.dispatchEvent(newEvent);\n  } else {\n    // click\n    this.clickTimeoutId_ = setTimeout(function() {\n      this.clickTimeoutId_ = 0;\n      const newEvent = new MapBrowserPointerEvent(\n        MapBrowserEventType.SINGLECLICK, this.map_, pointerEvent);\n      this.dispatchEvent(newEvent);\n    }.bind(this), 250);\n  }\n};\n\n\n/**\n * Keeps track on how many pointers are currently active.\n *\n * @param {module:ol/pointer/PointerEvent} pointerEvent Pointer\n * event.\n * @private\n */\nMapBrowserEventHandler.prototype.updateActivePointers_ = function(pointerEvent) {\n  const event = pointerEvent;\n\n  if (event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL) {\n    delete this.trackedTouches_[event.pointerId];\n  } else if (event.type == MapBrowserEventType.POINTERDOWN) {\n    this.trackedTouches_[event.pointerId] = true;\n  }\n  this.activePointers_ = Object.keys(this.trackedTouches_).length;\n};\n\n\n/**\n * @param {module:ol/pointer/PointerEvent} pointerEvent Pointer\n * event.\n * @private\n */\nMapBrowserEventHandler.prototype.handlePointerUp_ = function(pointerEvent) {\n  this.updateActivePointers_(pointerEvent);\n  const newEvent = new MapBrowserPointerEvent(\n    MapBrowserEventType.POINTERUP, this.map_, pointerEvent);\n  this.dispatchEvent(newEvent);\n\n  // We emulate click events on left mouse button click, touch contact, and pen\n  // contact. isMouseActionButton returns true in these cases (evt.button is set\n  // to 0).\n  // See http://www.w3.org/TR/pointerevents/#button-states\n  // We only fire click, singleclick, and doubleclick if nobody has called\n  // event.stopPropagation() or event.preventDefault().\n  if (!newEvent.propagationStopped && !this.dragging_ && this.isMouseActionButton_(pointerEvent)) {\n    this.emulateClick_(this.down_);\n  }\n\n  if (this.activePointers_ === 0) {\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n    this.dragging_ = false;\n    this.down_ = null;\n    this.documentPointerEventHandler_.dispose();\n    this.documentPointerEventHandler_ = null;\n  }\n};\n\n\n/**\n * @param {module:ol/pointer/PointerEvent} pointerEvent Pointer\n * event.\n * @return {boolean} If the left mouse button was pressed.\n * @private\n */\nMapBrowserEventHandler.prototype.isMouseActionButton_ = function(pointerEvent) {\n  return pointerEvent.button === 0;\n};\n\n\n/**\n * @param {module:ol/pointer/PointerEvent} pointerEvent Pointer\n * event.\n * @private\n */\nMapBrowserEventHandler.prototype.handlePointerDown_ = function(pointerEvent) {\n  this.updateActivePointers_(pointerEvent);\n  const newEvent = new MapBrowserPointerEvent(\n    MapBrowserEventType.POINTERDOWN, this.map_, pointerEvent);\n  this.dispatchEvent(newEvent);\n\n  this.down_ = pointerEvent;\n\n  if (this.dragListenerKeys_.length === 0) {\n    /* Set up a pointer event handler on the `document`,\n     * which is required when the pointer is moved outside\n     * the viewport when dragging.\n     */\n    this.documentPointerEventHandler_ =\n        new PointerEventHandler(document);\n\n    this.dragListenerKeys_.push(\n      listen(this.documentPointerEventHandler_,\n        MapBrowserEventType.POINTERMOVE,\n        this.handlePointerMove_, this),\n      listen(this.documentPointerEventHandler_,\n        MapBrowserEventType.POINTERUP,\n        this.handlePointerUp_, this),\n      /* Note that the listener for `pointercancel is set up on\n       * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n       * the `pointerup` and `pointermove` listeners.\n       *\n       * The reason for this is the following: `TouchSource.vacuumTouches_()`\n       * issues `pointercancel` events, when there was no `touchend` for a\n       * `touchstart`. Now, let's say a first `touchstart` is registered on\n       * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n       * But `documentPointerEventHandler_` doesn't know about the first\n       * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n       * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n       * only registered there.\n       */\n      listen(this.pointerEventHandler_,\n        MapBrowserEventType.POINTERCANCEL,\n        this.handlePointerUp_, this)\n    );\n  }\n};\n\n\n/**\n * @param {module:ol/pointer/PointerEvent} pointerEvent Pointer\n * event.\n * @private\n */\nMapBrowserEventHandler.prototype.handlePointerMove_ = function(pointerEvent) {\n  // Between pointerdown and pointerup, pointermove events are triggered.\n  // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n  // moved a significant distance.\n  if (this.isMoving_(pointerEvent)) {\n    this.dragging_ = true;\n    const newEvent = new MapBrowserPointerEvent(\n      MapBrowserEventType.POINTERDRAG, this.map_, pointerEvent,\n      this.dragging_);\n    this.dispatchEvent(newEvent);\n  }\n\n  // Some native android browser triggers mousemove events during small period\n  // of time. See: https://code.google.com/p/android/issues/detail?id=5491 or\n  // https://code.google.com/p/android/issues/detail?id=19827\n  // ex: Galaxy Tab P3110 + Android 4.1.1\n  pointerEvent.preventDefault();\n};\n\n\n/**\n * Wrap and relay a pointer event.  Note that this requires that the type\n * string for the MapBrowserPointerEvent matches the PointerEvent type.\n * @param {module:ol/pointer/PointerEvent} pointerEvent Pointer\n * event.\n * @private\n */\nMapBrowserEventHandler.prototype.relayEvent_ = function(pointerEvent) {\n  const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n  this.dispatchEvent(new MapBrowserPointerEvent(\n    pointerEvent.type, this.map_, pointerEvent, dragging));\n};\n\n\n/**\n * @param {module:ol/pointer/PointerEvent} pointerEvent Pointer\n * event.\n * @return {boolean} Is moving.\n * @private\n */\nMapBrowserEventHandler.prototype.isMoving_ = function(pointerEvent) {\n  return this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) > this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_;\n};\n\n\n/**\n * @inheritDoc\n */\nMapBrowserEventHandler.prototype.disposeInternal = function() {\n  if (this.relayedListenerKey_) {\n    unlistenByKey(this.relayedListenerKey_);\n    this.relayedListenerKey_ = null;\n  }\n  if (this.pointerdownListenerKey_) {\n    unlistenByKey(this.pointerdownListenerKey_);\n    this.pointerdownListenerKey_ = null;\n  }\n\n  this.dragListenerKeys_.forEach(unlistenByKey);\n  this.dragListenerKeys_.length = 0;\n\n  if (this.documentPointerEventHandler_) {\n    this.documentPointerEventHandler_.dispose();\n    this.documentPointerEventHandler_ = null;\n  }\n  if (this.pointerEventHandler_) {\n    this.pointerEventHandler_.dispose();\n    this.pointerEventHandler_ = null;\n  }\n  EventTarget.prototype.disposeInternal.call(this);\n};\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend'\n\n};\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view'\n};\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n  ABORT: 5\n};\n","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n  if (!assertion) {\n    throw new AssertionError(errorCode);\n  }\n}\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * @see http://closure-library.googlecode.com/svn/docs/closure_goog_structs_heap.js.source.html\n * @see http://hg.python.org/cpython/file/2.7/Lib/heapq.py\n *\n * @constructor\n * @param {function(T): number} priorityFunction Priority function.\n * @param {function(T): string} keyFunction Key function.\n * @struct\n * @template T\n */\nconst PriorityQueue = function(priorityFunction, keyFunction) {\n\n  /**\n   * @type {function(T): number}\n   * @private\n   */\n  this.priorityFunction_ = priorityFunction;\n\n  /**\n   * @type {function(T): string}\n   * @private\n   */\n  this.keyFunction_ = keyFunction;\n\n  /**\n   * @type {Array.<T>}\n   * @private\n   */\n  this.elements_ = [];\n\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n  this.priorities_ = [];\n\n  /**\n   * @type {!Object.<string, boolean>}\n   * @private\n   */\n  this.queuedElements_ = {};\n\n};\n\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n\n/**\n * FIXME empty description for jsdoc\n */\nPriorityQueue.prototype.clear = function() {\n  this.elements_.length = 0;\n  this.priorities_.length = 0;\n  clear(this.queuedElements_);\n};\n\n\n/**\n * Remove and return the highest-priority element. O(log N).\n * @return {T} Element.\n */\nPriorityQueue.prototype.dequeue = function() {\n  const elements = this.elements_;\n  const priorities = this.priorities_;\n  const element = elements[0];\n  if (elements.length == 1) {\n    elements.length = 0;\n    priorities.length = 0;\n  } else {\n    elements[0] = elements.pop();\n    priorities[0] = priorities.pop();\n    this.siftUp_(0);\n  }\n  const elementKey = this.keyFunction_(element);\n  delete this.queuedElements_[elementKey];\n  return element;\n};\n\n\n/**\n * Enqueue an element. O(log N).\n * @param {T} element Element.\n * @return {boolean} The element was added to the queue.\n */\nPriorityQueue.prototype.enqueue = function(element) {\n  assert(!(this.keyFunction_(element) in this.queuedElements_),\n    31); // Tried to enqueue an `element` that was already added to the queue\n  const priority = this.priorityFunction_(element);\n  if (priority != DROP) {\n    this.elements_.push(element);\n    this.priorities_.push(priority);\n    this.queuedElements_[this.keyFunction_(element)] = true;\n    this.siftDown_(0, this.elements_.length - 1);\n    return true;\n  }\n  return false;\n};\n\n\n/**\n * @return {number} Count.\n */\nPriorityQueue.prototype.getCount = function() {\n  return this.elements_.length;\n};\n\n\n/**\n * Gets the index of the left child of the node at the given index.\n * @param {number} index The index of the node to get the left child for.\n * @return {number} The index of the left child.\n * @private\n */\nPriorityQueue.prototype.getLeftChildIndex_ = function(index) {\n  return index * 2 + 1;\n};\n\n\n/**\n * Gets the index of the right child of the node at the given index.\n * @param {number} index The index of the node to get the right child for.\n * @return {number} The index of the right child.\n * @private\n */\nPriorityQueue.prototype.getRightChildIndex_ = function(index) {\n  return index * 2 + 2;\n};\n\n\n/**\n * Gets the index of the parent of the node at the given index.\n * @param {number} index The index of the node to get the parent for.\n * @return {number} The index of the parent.\n * @private\n */\nPriorityQueue.prototype.getParentIndex_ = function(index) {\n  return (index - 1) >> 1;\n};\n\n\n/**\n * Make this a heap. O(N).\n * @private\n */\nPriorityQueue.prototype.heapify_ = function() {\n  let i;\n  for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n    this.siftUp_(i);\n  }\n};\n\n\n/**\n * @return {boolean} Is empty.\n */\nPriorityQueue.prototype.isEmpty = function() {\n  return this.elements_.length === 0;\n};\n\n\n/**\n * @param {string} key Key.\n * @return {boolean} Is key queued.\n */\nPriorityQueue.prototype.isKeyQueued = function(key) {\n  return key in this.queuedElements_;\n};\n\n\n/**\n * @param {T} element Element.\n * @return {boolean} Is queued.\n */\nPriorityQueue.prototype.isQueued = function(element) {\n  return this.isKeyQueued(this.keyFunction_(element));\n};\n\n\n/**\n * @param {number} index The index of the node to move down.\n * @private\n */\nPriorityQueue.prototype.siftUp_ = function(index) {\n  const elements = this.elements_;\n  const priorities = this.priorities_;\n  const count = elements.length;\n  const element = elements[index];\n  const priority = priorities[index];\n  const startIndex = index;\n\n  while (index < (count >> 1)) {\n    const lIndex = this.getLeftChildIndex_(index);\n    const rIndex = this.getRightChildIndex_(index);\n\n    const smallerChildIndex = rIndex < count &&\n        priorities[rIndex] < priorities[lIndex] ?\n      rIndex : lIndex;\n\n    elements[index] = elements[smallerChildIndex];\n    priorities[index] = priorities[smallerChildIndex];\n    index = smallerChildIndex;\n  }\n\n  elements[index] = element;\n  priorities[index] = priority;\n  this.siftDown_(startIndex, index);\n};\n\n\n/**\n * @param {number} startIndex The index of the root.\n * @param {number} index The index of the node to move up.\n * @private\n */\nPriorityQueue.prototype.siftDown_ = function(startIndex, index) {\n  const elements = this.elements_;\n  const priorities = this.priorities_;\n  const element = elements[index];\n  const priority = priorities[index];\n\n  while (index > startIndex) {\n    const parentIndex = this.getParentIndex_(index);\n    if (priorities[parentIndex] > priority) {\n      elements[index] = elements[parentIndex];\n      priorities[index] = priorities[parentIndex];\n      index = parentIndex;\n    } else {\n      break;\n    }\n  }\n  elements[index] = element;\n  priorities[index] = priority;\n};\n\n\n/**\n * FIXME empty description for jsdoc\n */\nPriorityQueue.prototype.reprioritize = function() {\n  const priorityFunction = this.priorityFunction_;\n  const elements = this.elements_;\n  const priorities = this.priorities_;\n  let index = 0;\n  const n = elements.length;\n  let element, i, priority;\n  for (i = 0; i < n; ++i) {\n    element = elements[i];\n    priority = priorityFunction(element);\n    if (priority == DROP) {\n      delete this.queuedElements_[this.keyFunction_(element)];\n    } else {\n      priorities[index] = priority;\n      elements[index++] = element;\n    }\n  }\n  elements.length = index;\n  priorities.length = index;\n  this.heapify_();\n};\nexport default PriorityQueue;\n","/**\n * @module ol/TileQueue\n */\nimport {inherits} from './index.js';\nimport TileState from './TileState.js';\nimport {listen, unlisten} from './events.js';\nimport EventType from './events/EventType.js';\nimport PriorityQueue from './structs/PriorityQueue.js';\n\n\n/**\n * @typedef {function(module:ol/Tile, string, module:ol/coordinate~Coordinate, number): number} PriorityFunction\n */\n\n\n/**\n * @constructor\n * @extends {module:ol/structs/PriorityQueue.<Array>}\n * @param {module:ol/TileQueue~PriorityFunction} tilePriorityFunction\n *     Tile priority function.\n * @param {function(): ?} tileChangeCallback\n *     Function called on each tile change event.\n * @struct\n */\nconst TileQueue = function(tilePriorityFunction, tileChangeCallback) {\n\n  PriorityQueue.call(\n    this,\n    /**\n     * @param {Array} element Element.\n     * @return {number} Priority.\n     */\n    function(element) {\n      return tilePriorityFunction.apply(null, element);\n    },\n    /**\n     * @param {Array} element Element.\n     * @return {string} Key.\n     */\n    function(element) {\n      return (/** @type {module:ol/Tile} */ (element[0]).getKey());\n    });\n\n  /**\n   * @private\n   * @type {function(): ?}\n   */\n  this.tileChangeCallback_ = tileChangeCallback;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.tilesLoading_ = 0;\n\n  /**\n   * @private\n   * @type {!Object.<string,boolean>}\n   */\n  this.tilesLoadingKeys_ = {};\n\n};\n\ninherits(TileQueue, PriorityQueue);\n\n\n/**\n * @inheritDoc\n */\nTileQueue.prototype.enqueue = function(element) {\n  const added = PriorityQueue.prototype.enqueue.call(this, element);\n  if (added) {\n    const tile = element[0];\n    listen(tile, EventType.CHANGE, this.handleTileChange, this);\n  }\n  return added;\n};\n\n\n/**\n * @return {number} Number of tiles loading.\n */\nTileQueue.prototype.getTilesLoading = function() {\n  return this.tilesLoading_;\n};\n\n\n/**\n * @param {module:ol/events/Event} event Event.\n * @protected\n */\nTileQueue.prototype.handleTileChange = function(event) {\n  const tile = /** @type {module:ol/Tile} */ (event.target);\n  const state = tile.getState();\n  if (state === TileState.LOADED || state === TileState.ERROR ||\n      state === TileState.EMPTY || state === TileState.ABORT) {\n    unlisten(tile, EventType.CHANGE, this.handleTileChange, this);\n    const tileKey = tile.getKey();\n    if (tileKey in this.tilesLoadingKeys_) {\n      delete this.tilesLoadingKeys_[tileKey];\n      --this.tilesLoading_;\n    }\n    this.tileChangeCallback_();\n  }\n};\n\n\n/**\n * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n * @param {number} maxNewLoads Maximum number of new tiles to load.\n */\nTileQueue.prototype.loadMoreTiles = function(maxTotalLoading, maxNewLoads) {\n  let newLoads = 0;\n  let abortedTiles = false;\n  let state, tile, tileKey;\n  while (this.tilesLoading_ < maxTotalLoading && newLoads < maxNewLoads &&\n         this.getCount() > 0) {\n    tile = /** @type {module:ol/Tile} */ (this.dequeue()[0]);\n    tileKey = tile.getKey();\n    state = tile.getState();\n    if (state === TileState.ABORT) {\n      abortedTiles = true;\n    } else if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n      this.tilesLoadingKeys_[tileKey] = true;\n      ++this.tilesLoading_;\n      ++newLoads;\n      tile.load();\n    }\n  }\n  if (newLoads === 0 && abortedTiles) {\n    // Do not stop the render loop when all wanted tiles were aborted due to\n    // a small, saturated tile cache.\n    this.tileChangeCallback_();\n  }\n};\nexport default TileQueue;\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/math\n */\nimport {assert} from './asserts.js';\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n\n/**\n * Return the hyperbolic cosine of a given number. The method will use the\n * native `Math.cosh` function if it is available, otherwise the hyperbolic\n * cosine will be calculated via the reference implementation of the Mozilla\n * developer network.\n *\n * @param {number} x X.\n * @return {number} Hyperbolic cosine of x.\n */\nexport const cosh  = (function() {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  let cosh;\n  if ('cosh' in Math) {\n    // The environment supports the native Math.cosh function, use it…\n    cosh = Math.cosh;\n  } else {\n    // … else, use the reference implementation of MDN:\n    cosh = function(x) {\n      const y = Math.exp(x);\n      return (y + 1 / y) / 2;\n    };\n  }\n  return cosh;\n}());\n\n\n/**\n * @param {number} x X.\n * @return {number} The smallest power of two greater than or equal to x.\n */\nexport function roundUpToPowerOfTwo(x) {\n  assert(0 < x, 29); // `x` must be greater than `0`\n  return Math.pow(2, Math.ceil(Math.log(x) / Math.LN2));\n}\n\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array.<Array.<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array.<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return angleInRadians * 180 / Math.PI;\n}\n\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return angleInDegrees * Math.PI / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n\n/**\n * @typedef {function((module:ol/coordinate~Coordinate|undefined)): (module:ol/coordinate~Coordinate|undefined)} Type\n */\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {module:ol/centerconstraint~Type} The constraint.\n */\nexport function createExtent(extent) {\n  return (\n    /**\n     * @param {module:ol/coordinate~Coordinate=} center Center.\n     * @return {module:ol/coordinate~Coordinate|undefined} Center.\n     */\n    function(center) {\n      if (center) {\n        return [\n          clamp(center[0], extent[0], extent[2]),\n          clamp(center[1], extent[1], extent[3])\n        ];\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n\n/**\n * @param {module:ol/coordinate~Coordinate=} center Center.\n * @return {module:ol/coordinate~Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n\n/**\n * @typedef {function((number|undefined), number): (number|undefined)} Type\n */\n\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @param {number} delta Delta.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation, delta) {\n  if (rotation !== undefined) {\n    return 0;\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @param {number} delta Delta.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation, delta) {\n  if (rotation !== undefined) {\n    return rotation + delta;\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {number} n N.\n * @return {module:ol/rotationconstraint~Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = 2 * Math.PI / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {number} delta Delta.\n     * @return {number|undefined} Rotation.\n     */\n    function(rotation, delta) {\n      if (rotation !== undefined) {\n        rotation = Math.floor((rotation + delta) / theta + 0.5) * theta;\n        return rotation;\n      } else {\n        return undefined;\n      }\n    });\n}\n\n\n/**\n * @param {number=} opt_tolerance Tolerance.\n * @return {module:ol/rotationconstraint~Type} Rotation constraint.\n */\nexport function createSnapToZero(opt_tolerance) {\n  const tolerance = opt_tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {number} delta Delta.\n     * @return {number|undefined} Rotation.\n     */\n    function(rotation, delta) {\n      if (rotation !== undefined) {\n        if (Math.abs(rotation + delta) <= tolerance) {\n          return 0;\n        } else {\n          return rotation + delta;\n        }\n      } else {\n        return undefined;\n      }\n    });\n}\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1\n};\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation'\n};\n","/**\n * @module ol/coordinate\n */\nimport {modulo} from './math.js';\nimport {padNumber} from './string.js';\n\n\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array.<number>} Coordinate\n * @api\n */\n\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((module:ol/coordinate~Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {module:ol/coordinate~Coordinate} delta Delta.\n * @return {module:ol/coordinate~Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += delta[0];\n  coordinate[1] += delta[1];\n  return coordinate;\n}\n\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {module:ol/coordinate~Coordinate} coordinate The coordinate.\n * @param {module:ol/geom/Circle} circle The circle.\n * @return {module:ol/coordinate~Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + r * dx / d;\n  const y = y0 + r * dy / d;\n\n  return [x, y];\n}\n\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {module:ol/coordinate~Coordinate} coordinate The coordinate.\n * @param {Array.<module:ol/coordinate~Coordinate>} segment The two coordinates\n * of the segment.\n * @return {module:ol/coordinate~Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along = (dx === 0 && dy === 0) ? 0 :\n    ((dx * (x0 - x1)) + (dy * (y0 - y1))) / ((dx * dx + dy * dy) || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {module:ol/coordinate~Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY();\n *     var out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY(2);\n *     var out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {module:ol/coordinate~CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(opt_fractionDigits) {\n  return (\n    /**\n     * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function(coordinate) {\n      return toStringXY(coordinate, opt_fractionDigits);\n    }\n  );\n}\n\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, opt_fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const dflPrecision = opt_fractionDigits || 0;\n  const precision = Math.pow(10, dflPrecision);\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = x - (deg * 3600) - (min * 60);\n  sec = Math.ceil(sec * precision) / precision;\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  return deg + '\\u00b0 ' + padNumber(min, 2) + '\\u2032 ' +\n    padNumber(sec, 2, dflPrecision) + '\\u2033' +\n    (normalizedDegrees == 0 ? '' : ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0));\n}\n\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, opt_fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(opt_fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(opt_fractionDigits));\n  } else {\n    return '';\n  }\n}\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} coordinate1 First coordinate.\n * @param {module:ol/coordinate~Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {module:ol/coordinate~Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {module:ol/coordinate~Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} coord1 First coordinate.\n * @param {module:ol/coordinate~Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} coord1 First coordinate.\n * @param {module:ol/coordinate~Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate of the point.\n * @param {Array.<module:ol/coordinate~Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate,\n    closestOnSegment(coordinate, segment));\n}\n\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, opt_fractionDigits) {\n  if (coordinate) {\n    return degreesToStringHDMS('NS', coordinate[1], opt_fractionDigits) + ' ' +\n        degreesToStringHDMS('EW', coordinate[0], opt_fractionDigits);\n  } else {\n    return '';\n  }\n}\n\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, opt_fractionDigits) {\n  return format(coordinate, '{x}, {y}', opt_fractionDigits);\n}\n","/**\n * @module ol/easing\n */\n\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing~inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  } else {\n    return 1 - inAndOut(2 * (t - 0.5));\n  }\n}\n","/**\n * @module ol/extent/Corner\n */\n\n/**\n * Extent corner.\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right'\n};\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16\n};\n","/**\n * @module ol/extent\n */\nimport {assert} from './asserts.js';\nimport Corner from './extent/Corner.js';\nimport Relationship from './extent/Relationship.js';\n\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array.<number>} Extent\n * @api\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array.<module:ol/coordinate~Coordinate>} coordinates Coordinates.\n * @return {module:ol/extent~Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {Array.<number>} xs Xs.\n * @param {Array.<number>} ys Ys.\n * @param {module:ol/extent~Extent=} opt_extent Destination extent.\n * @private\n * @return {module:ol/extent~Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, opt_extent) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n}\n\n\n/**\n * Return extent increased by the provided value.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {module:ol/extent~Extent=} opt_extent Extent.\n * @return {module:ol/extent~Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0] - value;\n    opt_extent[1] = extent[1] - value;\n    opt_extent[2] = extent[2] + value;\n    opt_extent[3] = extent[3] + value;\n    return opt_extent;\n  } else {\n    return [\n      extent[0] - value,\n      extent[1] - value,\n      extent[2] + value,\n      extent[3] + value\n    ];\n  }\n}\n\n\n/**\n * Creates a clone of an extent.\n *\n * @param {module:ol/extent~Extent} extent Extent to clone.\n * @param {module:ol/extent~Extent=} opt_extent Extent.\n * @return {module:ol/extent~Extent} The clone.\n */\nexport function clone(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent.slice();\n  }\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {module:ol/extent~Extent} extent1 Extent 1.\n * @param {module:ol/extent~Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return extent1[0] <= extent2[0] && extent2[2] <= extent1[2] &&\n      extent1[1] <= extent2[1] && extent2[3] <= extent1[3];\n}\n\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {module:ol/extent~Extent} extent The extent.\n * @param {module:ol/coordinate~Coordinate} coordinate The coordinate.\n * @return {module:ol/extent/Relationship} The relationship (bitwise compare with\n *     module:ol/extent/Relationship~Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n\n/**\n * Create an empty extent.\n * @return {module:ol/extent~Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {module:ol/extent~Extent=} opt_extent Destination extent.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = minX;\n    opt_extent[1] = minY;\n    opt_extent[2] = maxX;\n    opt_extent[3] = maxY;\n    return opt_extent;\n  } else {\n    return [minX, minY, maxX, maxY];\n  }\n}\n\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {module:ol/extent~Extent=} opt_extent Extent.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function createOrUpdateEmpty(opt_extent) {\n  return createOrUpdate(\n    Infinity, Infinity, -Infinity, -Infinity, opt_extent);\n}\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {module:ol/extent~Extent=} opt_extent Extent.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, opt_extent) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, opt_extent);\n}\n\n\n/**\n * @param {Array.<module:ol/coordinate~Coordinate>} coordinates Coordinates.\n * @param {module:ol/extent~Extent=} opt_extent Extent.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendCoordinates(extent, coordinates);\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {module:ol/extent~Extent=} opt_extent Extent.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(flatCoordinates, offset, end, stride, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array.<Array.<module:ol/coordinate~Coordinate>>} rings Rings.\n * @param {module:ol/extent~Extent=} opt_extent Extent.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendRings(extent, rings);\n}\n\n\n/**\n * Determine if two extents are equivalent.\n * @param {module:ol/extent~Extent} extent1 Extent 1.\n * @param {module:ol/extent~Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return extent1[0] == extent2[0] && extent1[2] == extent2[2] &&\n      extent1[1] == extent2[1] && extent1[3] == extent2[3];\n}\n\n\n/**\n * Modify an extent to include another extent.\n * @param {module:ol/extent~Extent} extent1 The extent to be modified.\n * @param {module:ol/extent~Extent} extent2 The extent that will be included in the first.\n * @return {module:ol/extent~Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {Array.<module:ol/coordinate~Coordinate>} coordinates Coordinates.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function extendFlatCoordinates(extent, flatCoordinates, offset, end, stride) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {Array.<Array.<module:ol/coordinate~Coordinate>>} rings Rings.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {function(this:T, module:ol/coordinate~Coordinate): S} callback Callback.\n * @param {T=} opt_this Value to use as `this` when executing `callback`.\n * @return {S|boolean} Value.\n * @template S, T\n */\nexport function forEachCorner(extent, callback, opt_this) {\n  let val;\n  val = callback.call(opt_this, getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback.call(opt_this, getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback.call(opt_this, getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback.call(opt_this, getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n\n/**\n * Get the size of an extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {module:ol/coordinate~Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {module:ol/coordinate~Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n\n/**\n * Get the center coordinate of an extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {module:ol/coordinate~Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n\n/**\n * Get a corner coordinate of an extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {module:ol/extent/Corner} corner Corner.\n * @return {module:ol/coordinate~Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === Corner.BOTTOM_LEFT) {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === Corner.BOTTOM_RIGHT) {\n    coordinate = getBottomRight(extent);\n  } else if (corner === Corner.TOP_LEFT) {\n    coordinate = getTopLeft(extent);\n  } else if (corner === Corner.TOP_RIGHT) {\n    coordinate = getTopRight(extent);\n  } else {\n    assert(false, 13); // Invalid corner\n  }\n  return (\n    /** @type {!module:ol/coordinate~Coordinate} */ (coordinate)\n  );\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent1 Extent 1.\n * @param {module:ol/extent~Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {module:ol/size~Size} size Size.\n * @param {module:ol/extent~Extent=} opt_extent Destination extent.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, opt_extent) {\n  const dx = resolution * size[0] / 2;\n  const dy = resolution * size[1] / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  const x0 = x - xCos + ySin;\n  const x1 = x - xCos - ySin;\n  const x2 = x + xCos - ySin;\n  const x3 = x + xCos + ySin;\n  const y0 = y - xSin - yCos;\n  const y1 = y - xSin + yCos;\n  const y2 = y + xSin + yCos;\n  const y3 = y + xSin - yCos;\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3), Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3), Math.max(y0, y1, y2, y3),\n    opt_extent);\n}\n\n\n/**\n * Get the height of an extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent1 Extent 1.\n * @param {module:ol/extent~Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n\n/**\n * Get the intersection of two extents.\n * @param {module:ol/extent~Extent} extent1 Extent 1.\n * @param {module:ol/extent~Extent} extent2 Extent 2.\n * @param {module:ol/extent~Extent=} opt_extent Optional extent to populate with intersection.\n * @return {module:ol/extent~Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, opt_extent) {\n  const intersection = opt_extent ? opt_extent : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n\n/**\n * Get the size (width, height) of an extent.\n * @param {module:ol/extent~Extent} extent The extent.\n * @return {module:ol/size~Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n\n/**\n * Get the top left coordinate of an extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {module:ol/coordinate~Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n\n/**\n * Get the top right coordinate of an extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {module:ol/coordinate~Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n\n/**\n * Get the width of an extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n\n/**\n * Determine if one extent intersects another.\n * @param {module:ol/extent~Extent} extent1 Extent 1.\n * @param {module:ol/extent~Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return extent1[0] <= extent2[2] &&\n      extent1[2] >= extent2[0] &&\n      extent1[1] <= extent2[3] &&\n      extent1[3] >= extent2[1];\n}\n\n\n/**\n * Determine if an extent is empty.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {module:ol/extent~Extent=} opt_extent Extent.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function returnOrUpdate(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent;\n  }\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {module:ol/extent~Extent} extent The extent.\n * @param {module:ol/coordinate~Coordinate} start Segment start coordinate.\n * @param {module:ol/coordinate~Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (startRel === Relationship.INTERSECTING ||\n      endRel === Relationship.INTERSECTING) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) &&\n        !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - ((endY - maxY) / slope);\n      intersects = x >= minX && x <= maxX;\n    }\n    if (!intersects && !!(endRel & Relationship.RIGHT) &&\n        !(startRel & Relationship.RIGHT)) {\n      // potentially intersects right\n      y = endY - ((endX - maxX) * slope);\n      intersects = y >= minY && y <= maxY;\n    }\n    if (!intersects && !!(endRel & Relationship.BELOW) &&\n        !(startRel & Relationship.BELOW)) {\n      // potentially intersects bottom\n      x = endX - ((endY - minY) / slope);\n      intersects = x >= minX && x <= maxX;\n    }\n    if (!intersects && !!(endRel & Relationship.LEFT) &&\n        !(startRel & Relationship.LEFT)) {\n      // potentially intersects left\n      y = endY - ((endX - minX) * slope);\n      intersects = y >= minY && y <= maxY;\n    }\n\n  }\n  return intersects;\n}\n\n\n/**\n * Apply a transform function to the extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {module:ol/proj~TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {module:ol/extent~Extent=} opt_extent Destination extent.\n * @return {module:ol/extent~Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, opt_extent) {\n  const coordinates = [\n    extent[0], extent[1],\n    extent[0], extent[3],\n    extent[2], extent[1],\n    extent[2], extent[3]\n  ];\n  transformFn(coordinates, coordinates, 2);\n  const xs = [coordinates[0], coordinates[2], coordinates[4], coordinates[6]];\n  const ys = [coordinates[1], coordinates[3], coordinates[5], coordinates[7]];\n  return _boundingExtentXYs(xs, ys, opt_extent);\n}\n","/**\n * @module ol/geom/GeometryType\n */\n\n/**\n * The geometry type. One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, `'Circle'`.\n * @enum {string}\n */\nexport default {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  LINEAR_RING: 'LinearRing',\n  POLYGON: 'Polygon',\n  MULTI_POINT: 'MultiPoint',\n  MULTI_LINE_STRING: 'MultiLineString',\n  MULTI_POLYGON: 'MultiPolygon',\n  GEOMETRY_COLLECTION: 'GeometryCollection',\n  CIRCLE: 'Circle'\n};\n","/**\n * @module ol/geom/GeometryLayout\n */\n\n/**\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available. Supported values are `'XY'`,\n * `'XYZ'`, `'XYM'`, `'XYZM'`.\n * @enum {string}\n */\nexport default {\n  XY: 'XY',\n  XYZ: 'XYZ',\n  XYM: 'XYM',\n  XYZM: 'XYZM'\n};\n","/**\n * @module ol/geom/flat/transform\n */\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {module:ol/transform~Transform} transform Transform.\n * @param {Array.<number>=} opt_dest Destination.\n * @return {Array.<number>} Transformed coordinates.\n */\nexport function transform2D(flatCoordinates, offset, end, stride, transform, opt_dest) {\n  const dest = opt_dest ? opt_dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array.<number>} anchor Rotation anchor point.\n * @param {Array.<number>=} opt_dest Destination.\n * @return {Array.<number>} Transformed coordinates.\n */\nexport function rotate(flatCoordinates, offset, end, stride, angle, anchor, opt_dest) {\n  const dest = opt_dest ? opt_dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n\n/**\n * Scale the coordinates.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array.<number>} anchor Scale anchor point.\n * @param {Array.<number>=} opt_dest Destination.\n * @return {Array.<number>} Transformed coordinates.\n */\nexport function scale(flatCoordinates, offset, end, stride, sx, sy, anchor, opt_dest) {\n  const dest = opt_dest ? opt_dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array.<number>=} opt_dest Destination.\n * @return {Array.<number>} Transformed coordinates.\n */\nexport function translate(flatCoordinates, offset, end, stride, deltaX, deltaY, opt_dest) {\n  const dest = opt_dest ? opt_dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @license\n * Latitude/longitude spherical geodesy formulae taken from\n * http://www.movable-type.co.uk/scripts/latlong.html\n * Licensed under CC-BY-3.0.\n */\n\n/**\n * @module ol/sphere\n */\nimport {toRadians, toDegrees} from './math.js';\nimport GeometryType from './geom/GeometryType.js';\n\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {module:ol/proj~ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the radius of the\n * earth is used (Clarke 1866 Authalic Sphere).\n */\n\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, opt_radius) {\n  const radius = opt_radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a = Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n      Math.sin(deltaLonBy2) * Math.sin(deltaLonBy2) *\n      Math.cos(lat1) * Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {module:ol/geom/Geometry} geometry A geometry.\n * @param {module:ol/sphere~SphereMetricOptions=} opt_options Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, opt_options) {\n  const options = opt_options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT: {\n      break;\n    }\n    case GeometryType.LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      coordinates = /** @type {module:ol/geom/SimpleGeometry} */ (geometry).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {module:ol/geom/SimpleGeometry} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {module:ol/geom/SimpleGeometry} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      const geometries = /** @type {module:ol/geom/GeometryCollection} */ (geometry).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs-new.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array.<module:ol/coordinate~Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area += toRadians(x2 - x1) *\n        (2 + Math.sin(toRadians(y1)) +\n        Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return area * radius * radius / 2.0;\n}\n\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {module:ol/geom/Geometry} geometry A geometry.\n * @param {module:ol/sphere~SphereMetricOptions=} opt_options Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, opt_options) {\n  const options = opt_options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT:\n    case GeometryType.LINE_STRING:\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      break;\n    }\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {module:ol/geom/Polygon} */ (geometry).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {module:ol/geom/SimpleGeometry} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      const geometries = /** @type {module:ol/geom/GeometryCollection} */ (geometry).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {module:ol/coordinate~Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {module:ol/coordinate~Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, opt_radius) {\n  const radius = opt_radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing));\n  const lon = lon1 + Math.atan2(\n    Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n    Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat));\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * Projection units: `'degrees'`, `'ft'`, `'m'`, `'pixels'`, `'tile-pixels'` or\n * `'us-ft'`.\n * @enum {string}\n */\nconst Units = {\n  DEGREES: 'degrees',\n  FEET: 'ft',\n  METERS: 'm',\n  PIXELS: 'pixels',\n  TILE_PIXELS: 'tile-pixels',\n  USFEET: 'us-ft'\n};\n\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {Object.<module:ol/proj/Units, number>}\n * @api\n */\nexport const METERS_PER_UNIT = {};\n// use the radius of the Normal sphere\nMETERS_PER_UNIT[Units.DEGREES] = 2 * Math.PI * 6370997 / 360;\nMETERS_PER_UNIT[Units.FEET] = 0.3048;\nMETERS_PER_UNIT[Units.METERS] = 1;\nMETERS_PER_UNIT[Units.USFEET] = 1200 / 3937;\n\nexport default Units;\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from '../proj/Units.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {module:ol/proj/Units|string} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {module:ol/extent~Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link module:ol/proj/Units~METERS_PER_UNIT}\n * lookup table.\n * @property {module:ol/extent~Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, module:ol/coordinate~Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `{number}` view resolution and an `{module:ol/coordinate~Coordinate}` as arguments, and returns\n * the `{number}` resolution at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj#getPointResolution} function will be used.\n */\n\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj~get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use proj4js, aliases can be added using `proj4.defs()`; see\n * [documentation](https://github.com/proj4js/proj4js). To set an alternative\n * namespace for proj4, use {@link module:ol/proj~setProj4}.\n *\n * @constructor\n * @param {module:ol/proj/Projection~Options} options Projection options.\n * @struct\n * @api\n */\nconst Projection = function(options) {\n  /**\n   * @private\n   * @type {string}\n   */\n  this.code_ = options.code;\n\n  /**\n   * Units of projected coordinates. When set to `TILE_PIXELS`, a\n   * `this.extent_` and `this.worldExtent_` must be configured properly for each\n   * tile.\n   * @private\n   * @type {module:ol/proj/Units}\n   */\n  this.units_ = /** @type {module:ol/proj/Units} */ (options.units);\n\n  /**\n   * Validity extent of the projection in projected coordinates. For projections\n   * with `TILE_PIXELS` units, this is the extent of the tile in\n   * tile pixel space.\n   * @private\n   * @type {module:ol/extent~Extent}\n   */\n  this.extent_ = options.extent !== undefined ? options.extent : null;\n\n  /**\n   * Extent of the world in EPSG:4326. For projections with\n   * `TILE_PIXELS` units, this is the extent of the tile in\n   * projected coordinate space.\n   * @private\n   * @type {module:ol/extent~Extent}\n   */\n  this.worldExtent_ = options.worldExtent !== undefined ?\n    options.worldExtent : null;\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.axisOrientation_ = options.axisOrientation !== undefined ?\n    options.axisOrientation : 'enu';\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.global_ = options.global !== undefined ? options.global : false;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.canWrapX_ = !!(this.global_ && this.extent_);\n\n  /**\n   * @private\n   * @type {function(number, module:ol/coordinate~Coordinate):number|undefined}\n   */\n  this.getPointResolutionFunc_ = options.getPointResolution;\n\n  /**\n   * @private\n   * @type {module:ol/tilegrid/TileGrid}\n   */\n  this.defaultTileGrid_ = null;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.metersPerUnit_ = options.metersPerUnit;\n};\n\n\n/**\n * @return {boolean} The projection is suitable for wrapping the x-axis\n */\nProjection.prototype.canWrapX = function() {\n  return this.canWrapX_;\n};\n\n\n/**\n * Get the code for this projection, e.g. 'EPSG:4326'.\n * @return {string} Code.\n * @api\n */\nProjection.prototype.getCode = function() {\n  return this.code_;\n};\n\n\n/**\n * Get the validity extent for this projection.\n * @return {module:ol/extent~Extent} Extent.\n * @api\n */\nProjection.prototype.getExtent = function() {\n  return this.extent_;\n};\n\n\n/**\n * Get the units of this projection.\n * @return {module:ol/proj/Units} Units.\n * @api\n */\nProjection.prototype.getUnits = function() {\n  return this.units_;\n};\n\n\n/**\n * Get the amount of meters per unit of this projection.  If the projection is\n * not configured with `metersPerUnit` or a units identifier, the return is\n * `undefined`.\n * @return {number|undefined} Meters.\n * @api\n */\nProjection.prototype.getMetersPerUnit = function() {\n  return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n};\n\n\n/**\n * Get the world extent for this projection.\n * @return {module:ol/extent~Extent} Extent.\n * @api\n */\nProjection.prototype.getWorldExtent = function() {\n  return this.worldExtent_;\n};\n\n\n/**\n * Get the axis orientation of this projection.\n * Example values are:\n * enu - the default easting, northing, elevation.\n * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n *     or south orientated transverse mercator.\n * wnu - westing, northing, up - some planetary coordinate systems have\n *     \"west positive\" coordinate systems\n * @return {string} Axis orientation.\n * @api\n */\nProjection.prototype.getAxisOrientation = function() {\n  return this.axisOrientation_;\n};\n\n\n/**\n * Is this projection a global projection which spans the whole world?\n * @return {boolean} Whether the projection is global.\n * @api\n */\nProjection.prototype.isGlobal = function() {\n  return this.global_;\n};\n\n\n/**\n* Set if the projection is a global projection which spans the whole world\n* @param {boolean} global Whether the projection is global.\n* @api\n*/\nProjection.prototype.setGlobal = function(global) {\n  this.global_ = global;\n  this.canWrapX_ = !!(global && this.extent_);\n};\n\n\n/**\n * @return {module:ol/tilegrid/TileGrid} The default tile grid.\n */\nProjection.prototype.getDefaultTileGrid = function() {\n  return this.defaultTileGrid_;\n};\n\n\n/**\n * @param {module:ol/tilegrid/TileGrid} tileGrid The default tile grid.\n */\nProjection.prototype.setDefaultTileGrid = function(tileGrid) {\n  this.defaultTileGrid_ = tileGrid;\n};\n\n\n/**\n * Set the validity extent for this projection.\n * @param {module:ol/extent~Extent} extent Extent.\n * @api\n */\nProjection.prototype.setExtent = function(extent) {\n  this.extent_ = extent;\n  this.canWrapX_ = !!(this.global_ && extent);\n};\n\n\n/**\n * Set the world extent for this projection.\n * @param {module:ol/extent~Extent} worldExtent World extent\n *     [minlon, minlat, maxlon, maxlat].\n * @api\n */\nProjection.prototype.setWorldExtent = function(worldExtent) {\n  this.worldExtent_ = worldExtent;\n};\n\n\n/**\n * Set the getPointResolution function (see {@link module:ol/proj~getPointResolution}\n * for this projection.\n * @param {function(number, module:ol/coordinate~Coordinate):number} func Function\n * @api\n */\nProjection.prototype.setGetPointResolution = function(func) {\n  this.getPointResolutionFunc_ = func;\n};\n\n\n/**\n * Get the custom point resolution function for this projection (if set).\n * @return {function(number, module:ol/coordinate~Coordinate):number|undefined} The custom point\n * resolution function (if set).\n */\nProjection.prototype.getPointResolutionFunc = function() {\n  return this.getPointResolutionFunc_;\n};\nexport default Projection;\n","/**\n * @module ol/proj/epsg3857\n */\nimport {inherits} from '../index.js';\nimport {cosh} from '../math.js';\nimport Projection from '../proj/Projection.js';\nimport Units from '../proj/Units.js';\n\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n\n/**\n * @const\n * @type {module:ol/extent~Extent}\n */\nexport const EXTENT = [\n  -HALF_SIZE, -HALF_SIZE,\n  HALF_SIZE, HALF_SIZE\n];\n\n\n/**\n * @const\n * @type {module:ol/extent~Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n *\n * @constructor\n * @extends {module:ol/proj/Projection}\n * @param {string} code Code.\n */\nfunction EPSG3857Projection(code) {\n  Projection.call(this, {\n    code: code,\n    units: Units.METERS,\n    extent: EXTENT,\n    global: true,\n    worldExtent: WORLD_EXTENT,\n    getPointResolution: function(resolution, point) {\n      return resolution / cosh(point[1] / RADIUS);\n    }\n  });\n}\ninherits(EPSG3857Projection, Projection);\n\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array.<module:ol/proj/Projection>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('urn:ogc:def:crs:EPSG:6.18:3:3857'),\n  new EPSG3857Projection('urn:ogc:def:crs:EPSG::3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857')\n];\n\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array.<number>} input Input array of coordinate values.\n * @param {Array.<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array.<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, opt_output, opt_dimension) {\n  const length = input.length;\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  let output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  const halfSize = HALF_SIZE;\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = halfSize * input[i] / 180;\n    let y = RADIUS *\n        Math.log(Math.tan(Math.PI * (input[i + 1] + 90) / 360));\n    if (y > halfSize) {\n      y = halfSize;\n    } else if (y < -halfSize) {\n      y = -halfSize;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array.<number>} input Input array of coordinate values.\n * @param {Array.<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array.<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, opt_output, opt_dimension) {\n  const length = input.length;\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  let output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = 180 * input[i] / HALF_SIZE;\n    output[i + 1] = 360 * Math.atan(\n      Math.exp(input[i + 1] / RADIUS)) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport {inherits} from '../index.js';\nimport Projection from '../proj/Projection.js';\nimport Units from '../proj/Units.js';\n\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {module:ol/extent~Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = Math.PI * RADIUS / 180;\n\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n *\n * @constructor\n * @extends {module:ol/proj/Projection}\n * @param {string} code Code.\n * @param {string=} opt_axisOrientation Axis orientation.\n */\nfunction EPSG4326Projection(code, opt_axisOrientation) {\n  Projection.call(this, {\n    code: code,\n    units: Units.DEGREES,\n    extent: EXTENT,\n    axisOrientation: opt_axisOrientation,\n    global: true,\n    metersPerUnit: METERS_PER_UNIT,\n    worldExtent: EXTENT\n  });\n}\ninherits(EPSG4326Projection, Projection);\n\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array.<module:ol/proj/Projection>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:EPSG::4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:EPSG:6.6:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('urn:x-ogc:def:crs:EPSG:4326', 'neu')\n];\n","/**\n * @module ol/proj/projections\n */\n\n\n/**\n * @type {Object.<string, module:ol/proj/Projection>}\n */\nlet cache = {};\n\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {module:ol/proj/Projection} The projection (if cached).\n */\nexport function get(code) {\n  return cache[code] || null;\n}\n\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {module:ol/proj/Projection} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n\n/**\n * @private\n * @type {!Object.<string, Object.<string, module:ol/proj~TransformFunction>>}\n */\nlet transforms = {};\n\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {module:ol/proj/Projection} source Source.\n * @param {module:ol/proj/Projection} destination Destination.\n * @param {module:ol/proj~TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {module:ol/proj/Projection} source Source projection.\n * @param {module:ol/proj/Projection} destination Destination projection.\n * @return {module:ol/proj~TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {module:ol/proj~TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the {@link http://proj4js.org/}\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * {@link https://epsg.io/}, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj~addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection} object for the new projection and add it with\n * {@link module:ol/proj~addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj~addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection} with\n * {@link module:ol/proj~addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport {getDistance} from './sphere.js';\nimport {applyTransform} from './extent.js';\nimport {modulo} from './math.js';\nimport {toEPSG4326, fromEPSG4326, PROJECTIONS as EPSG3857_PROJECTIONS} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport Projection from './proj/Projection.js';\nimport Units, {METERS_PER_UNIT} from './proj/Units.js';\nimport * as projections from './proj/projections.js';\nimport {add as addTransformFunc, clear as clearTransformFuncs, get as getTransformFunc} from './proj/transforms.js';\n\n\n/**\n * A projection as {@link module:ol/proj/Projection}, SRS identifier\n * string or undefined.\n * @typedef {module:ol/proj/Projection|string|undefined} ProjectionLike\n * @api\n */\n\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array.<number>, Array.<number>=, number=): Array.<number>} TransformFunction\n * @api\n */\n\n\nexport {METERS_PER_UNIT};\n\n\n/**\n * @param {Array.<number>} input Input coordinate array.\n * @param {Array.<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array.<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, opt_output, opt_dimension) {\n  let output;\n  if (opt_output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    output = opt_output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n\n/**\n * @param {Array.<number>} input Input coordinate array.\n * @param {Array.<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array.<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, opt_output, opt_dimension) {\n  if (opt_output !== undefined && input !== opt_output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    input = opt_output;\n  }\n  return input;\n}\n\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {module:ol/proj/Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  projections.add(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n\n/**\n * @param {Array.<module:ol/proj/Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {module:ol/proj~ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {module:ol/proj/Projection} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  let projection = null;\n  if (projectionLike instanceof Projection) {\n    projection = projectionLike;\n  } else if (typeof projectionLike === 'string') {\n    const code = projectionLike;\n    projection = projections.get(code);\n  }\n  return projection;\n}\n\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the 'point' pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {module:ol/proj~ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {module:ol/coordinate~Coordinate} point Point to find adjusted resolution at.\n * @param {module:ol/proj/Units=} opt_units Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, opt_units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n  } else {\n    const units = projection.getUnits();\n    if (units == Units.DEGREES && !opt_units || opt_units == Units.DEGREES) {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(projection, get('EPSG:4326'));\n      let vertices = [\n        point[0] - resolution / 2, point[1],\n        point[0] + resolution / 2, point[1],\n        point[0], point[1] - resolution / 2,\n        point[0], point[1] + resolution / 2\n      ];\n      vertices = toEPSG4326(vertices, vertices, 2);\n      const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n      const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n      pointResolution = (width + height) / 2;\n      const metersPerUnit = opt_units ?\n        METERS_PER_UNIT[opt_units] :\n        projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array.<module:ol/proj/Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function(source) {\n    projections.forEach(function(destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array.<module:ol/proj/Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array.<module:ol/proj/Projection>} projections2 Projections with equal\n *     meaning.\n * @param {module:ol/proj~TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {module:ol/proj~TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(projections1, projections2, forwardTransform, inverseTransform) {\n  projections1.forEach(function(projection1) {\n    projections2.forEach(function(projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  projections.clear();\n  clearTransformFuncs();\n}\n\n\n/**\n * @param {module:ol/proj/Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {module:ol/proj/Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  } else if (typeof projection === 'string') {\n    return get(projection);\n  } else {\n    return (\n      /** @type {module:ol/proj/Projection} */ (projection)\n    );\n  }\n}\n\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(module:ol/coordinate~Coordinate): module:ol/coordinate~Coordinate} coordTransform Coordinate\n *     transform.\n * @return {module:ol/proj~TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array.<number>} input Input.\n     * @param {Array.<number>=} opt_output Output.\n     * @param {number=} opt_dimension Dimension.\n     * @return {Array.<number>} Output.\n     */\n    function(input, opt_output, opt_dimension) {\n      const length = input.length;\n      const dimension = opt_dimension !== undefined ? opt_dimension : 2;\n      const output = opt_output !== undefined ? opt_output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform([input[i], input[i + 1]]);\n        output[i] = point[0];\n        output[i + 1] = point[1];\n        for (let j = dimension - 1; j >= 2; --j) {\n          output[i + j] = input[i + j];\n        }\n      }\n      return output;\n    });\n}\n\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {module:ol/proj~ProjectionLike} source Source projection.\n * @param {module:ol/proj~ProjectionLike} destination Destination projection.\n * @param {function(module:ol/coordinate~Coordinate): module:ol/coordinate~Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(module:ol/coordinate~Coordinate): module:ol/coordinate~Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(sourceProj, destProj, createTransformFromCoordinateTransform(forward));\n  addTransformFunc(destProj, sourceProj, createTransformFromCoordinateTransform(inverse));\n}\n\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {module:ol/proj~ProjectionLike=} opt_projection Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {module:ol/coordinate~Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, opt_projection) {\n  return transform(coordinate, 'EPSG:4326',\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857');\n}\n\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {module:ol/coordinate~Coordinate} coordinate Projected coordinate.\n * @param {module:ol/proj~ProjectionLike=} opt_projection Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {module:ol/coordinate~Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, opt_projection) {\n  const lonLat = transform(coordinate,\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857', 'EPSG:4326');\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {module:ol/proj/Projection} projection1 Projection 1.\n * @param {module:ol/proj/Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  } else {\n    const transformFunc = getTransformFromProjections(projection1, projection2);\n    return transformFunc === cloneTransform && equalUnits;\n  }\n}\n\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {module:ol/proj/Projection} sourceProjection Source Projection object.\n * @param {module:ol/proj/Projection} destinationProjection Destination Projection\n *     object.\n * @return {module:ol/proj~TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(sourceProjection, destinationProjection) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {module:ol/proj~ProjectionLike} source Source.\n * @param {module:ol/proj~ProjectionLike} destination Destination.\n * @return {module:ol/proj~TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj~transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {module:ol/proj~ProjectionLike} source Source projection-like.\n * @param {module:ol/proj~ProjectionLike} destination Destination projection-like.\n * @return {module:ol/coordinate~Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {module:ol/extent~Extent} extent The extent to transform.\n * @param {module:ol/proj~ProjectionLike} source Source projection-like.\n * @param {module:ol/proj~ProjectionLike} destination Destination projection-like.\n * @return {module:ol/extent~Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc);\n}\n\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {module:ol/coordinate~Coordinate} point Point.\n * @param {module:ol/proj/Projection} sourceProjection Source projection.\n * @param {module:ol/proj/Projection} destinationProjection Destination projection.\n * @return {module:ol/coordinate~Coordinate} Point.\n */\nexport function transformWithProjections(point, sourceProjection, destinationProjection) {\n  const transformFunc = getTransformFromProjections(sourceProjection, destinationProjection);\n  return transformFunc(point);\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(EPSG4326_PROJECTIONS, EPSG3857_PROJECTIONS, fromEPSG4326, toEPSG4326);\n}\n\naddCommon();\n","/**\n * @module ol/transform\n */\nimport {assert} from './asserts.js';\n\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array.<number>} Transform\n */\n\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n\n/**\n * @private\n * @type {module:ol/transform~Transform}\n */\nconst tmp_ = new Array(6);\n\n\n/**\n * Create an identity transform.\n * @return {!module:ol/transform~Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!module:ol/transform~Transform} transform Transform.\n * @return {!module:ol/transform~Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!module:ol/transform~Transform} transform1 Transform parameters of matrix 1.\n * @param {!module:ol/transform~Transform} transform2 Transform parameters of matrix 2.\n * @return {!module:ol/transform~Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!module:ol/transform~Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!module:ol/transform~Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!module:ol/transform~Transform} transform1 Matrix to set transform to.\n * @param {!module:ol/transform~Transform} transform2 Matrix to set transform from.\n * @return {!module:ol/transform~Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {module:ol/transform~Transform} transform The transformation.\n * @param {module:ol/coordinate~Coordinate|module:ol~Pixel} coordinate The coordinate to transform.\n * @return {module:ol/coordinate~Coordinate|module:ol~Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n\n/**\n * Applies rotation to the given transform.\n * @param {!module:ol/transform~Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!module:ol/transform~Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n\n/**\n * Applies scale to a given transform.\n * @param {!module:ol/transform~Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!module:ol/transform~Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n\n/**\n * Applies translation to the given transform.\n * @param {!module:ol/transform~Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!module:ol/transform~Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!module:ol/transform~Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!module:ol/transform~Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n\n/**\n * Invert the given transform.\n * @param {!module:ol/transform~Transform} transform Transform.\n * @return {!module:ol/transform~Transform} Inverse of the transform.\n */\nexport function invert(transform) {\n  const det = determinant(transform);\n  assert(det !== 0, 32); // Transformation matrix cannot be inverted\n\n  const a = transform[0];\n  const b = transform[1];\n  const c = transform[2];\n  const d = transform[3];\n  const e = transform[4];\n  const f = transform[5];\n\n  transform[0] = d / det;\n  transform[1] = -b / det;\n  transform[2] = -c / det;\n  transform[3] = a / det;\n  transform[4] = (c * f - d * e) / det;\n  transform[5] = -(a * f - b * e) / det;\n\n  return transform;\n}\n\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!module:ol/transform~Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport {inherits} from '../index.js';\nimport BaseObject from '../Object.js';\nimport {createEmpty, getHeight, returnOrUpdate} from '../extent.js';\nimport {FALSE} from '../functions.js';\nimport {transform2D} from '../geom/flat/transform.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport Units from '../proj/Units.js';\nimport {create as createTransform, compose as composeTransform} from '../transform.js';\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @constructor\n * @abstract\n * @extends {module:ol/Object}\n * @api\n */\nconst Geometry = function() {\n\n  BaseObject.call(this);\n\n  /**\n   * @private\n   * @type {module:ol/extent~Extent}\n   */\n  this.extent_ = createEmpty();\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.extentRevision_ = -1;\n\n  /**\n   * @protected\n   * @type {Object.<string, module:ol/geom/Geometry>}\n   */\n  this.simplifiedGeometryCache = {};\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.simplifiedGeometryRevision = 0;\n\n};\n\ninherits(Geometry, BaseObject);\n\n\n/**\n * @type {module:ol/transform~Transform}\n */\nconst tmpTransform = createTransform();\n\n\n/**\n * Make a complete copy of the geometry.\n * @abstract\n * @return {!module:ol/geom/Geometry} Clone.\n */\nGeometry.prototype.clone = function() {};\n\n\n/**\n * @abstract\n * @param {number} x X.\n * @param {number} y Y.\n * @param {module:ol/coordinate~Coordinate} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @return {number} Minimum squared distance.\n */\nGeometry.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {};\n\n\n/**\n * Return the closest point of the geometry to the passed point as\n * {@link module:ol/coordinate~Coordinate coordinate}.\n * @param {module:ol/coordinate~Coordinate} point Point.\n * @param {module:ol/coordinate~Coordinate=} opt_closestPoint Closest point.\n * @return {module:ol/coordinate~Coordinate} Closest point.\n * @api\n */\nGeometry.prototype.getClosestPoint = function(point, opt_closestPoint) {\n  const closestPoint = opt_closestPoint ? opt_closestPoint : [NaN, NaN];\n  this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n  return closestPoint;\n};\n\n\n/**\n * Returns true if this geometry includes the specified coordinate. If the\n * coordinate is on the boundary of the geometry, returns false.\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @return {boolean} Contains coordinate.\n * @api\n */\nGeometry.prototype.intersectsCoordinate = function(coordinate) {\n  return this.containsXY(coordinate[0], coordinate[1]);\n};\n\n\n/**\n * @abstract\n * @param {module:ol/extent~Extent} extent Extent.\n * @protected\n * @return {module:ol/extent~Extent} extent Extent.\n */\nGeometry.prototype.computeExtent = function(extent) {};\n\n\n/**\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nGeometry.prototype.containsXY = FALSE;\n\n\n/**\n * Get the extent of the geometry.\n * @param {module:ol/extent~Extent=} opt_extent Extent.\n * @return {module:ol/extent~Extent} extent Extent.\n * @api\n */\nGeometry.prototype.getExtent = function(opt_extent) {\n  if (this.extentRevision_ != this.getRevision()) {\n    this.extent_ = this.computeExtent(this.extent_);\n    this.extentRevision_ = this.getRevision();\n  }\n  return returnOrUpdate(this.extent_, opt_extent);\n};\n\n\n/**\n * Rotate the geometry around a given coordinate. This modifies the geometry\n * coordinates in place.\n * @abstract\n * @param {number} angle Rotation angle in radians.\n * @param {module:ol/coordinate~Coordinate} anchor The rotation center.\n * @api\n */\nGeometry.prototype.rotate = function(angle, anchor) {};\n\n\n/**\n * Scale the geometry (with an optional origin).  This modifies the geometry\n * coordinates in place.\n * @abstract\n * @param {number} sx The scaling factor in the x-direction.\n * @param {number=} opt_sy The scaling factor in the y-direction (defaults to\n *     sx).\n * @param {module:ol/coordinate~Coordinate=} opt_anchor The scale origin (defaults to the center\n *     of the geometry extent).\n * @api\n */\nGeometry.prototype.scale = function(sx, opt_sy, opt_anchor) {};\n\n\n/**\n * Create a simplified version of this geometry.  For linestrings, this uses\n * the the {@link\n * https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm\n * Douglas Peucker} algorithm.  For polygons, a quantization-based\n * simplification is used to preserve topology.\n * @function\n * @param {number} tolerance The tolerance distance for simplification.\n * @return {module:ol/geom/Geometry} A new, simplified version of the original\n *     geometry.\n * @api\n */\nGeometry.prototype.simplify = function(tolerance) {\n  return this.getSimplifiedGeometry(tolerance * tolerance);\n};\n\n\n/**\n * Create a simplified version of this geometry using the Douglas Peucker\n * algorithm.\n * @see https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm\n * @abstract\n * @param {number} squaredTolerance Squared tolerance.\n * @return {module:ol/geom/Geometry} Simplified geometry.\n */\nGeometry.prototype.getSimplifiedGeometry = function(squaredTolerance) {};\n\n\n/**\n * Get the type of this geometry.\n * @abstract\n * @return {module:ol/geom/GeometryType} Geometry type.\n */\nGeometry.prototype.getType = function() {};\n\n\n/**\n * Apply a transform function to each coordinate of the geometry.\n * The geometry is modified in place.\n * If you do not want the geometry modified in place, first `clone()` it and\n * then use this function on the clone.\n * @abstract\n * @param {module:ol/proj~TransformFunction} transformFn Transform.\n */\nGeometry.prototype.applyTransform = function(transformFn) {};\n\n\n/**\n * Test if the geometry and the passed extent intersect.\n * @abstract\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {boolean} `true` if the geometry and the extent intersect.\n */\nGeometry.prototype.intersectsExtent = function(extent) {};\n\n\n/**\n * Translate the geometry.  This modifies the geometry coordinates in place.  If\n * instead you want a new geometry, first `clone()` this geometry.\n * @abstract\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n */\nGeometry.prototype.translate = function(deltaX, deltaY) {};\n\n\n/**\n * Transform each coordinate of the geometry from one coordinate reference\n * system to another. The geometry is modified in place.\n * For example, a line will be transformed to a line and a circle to a circle.\n * If you do not want the geometry modified in place, first `clone()` it and\n * then use this function on the clone.\n *\n * @param {module:ol/proj~ProjectionLike} source The current projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @param {module:ol/proj~ProjectionLike} destination The desired projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @return {module:ol/geom/Geometry} This geometry.  Note that original geometry is\n *     modified in place.\n * @api\n */\nGeometry.prototype.transform = function(source, destination) {\n  source = getProjection(source);\n  const transformFn = source.getUnits() == Units.TILE_PIXELS ?\n    function(inCoordinates, outCoordinates, stride) {\n      const pixelExtent = source.getExtent();\n      const projectedExtent = source.getWorldExtent();\n      const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n      composeTransform(tmpTransform,\n        projectedExtent[0], projectedExtent[3],\n        scale, -scale, 0,\n        0, 0);\n      transform2D(inCoordinates, 0, inCoordinates.length, stride,\n        tmpTransform, outCoordinates);\n      return getTransform(source, destination)(inCoordinates, outCoordinates, stride);\n    } :\n    getTransform(source, destination);\n  this.applyTransform(transformFn);\n  return this;\n};\nexport default Geometry;\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport {inherits} from '../index.js';\nimport {FALSE} from '../functions.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport Geometry from '../geom/Geometry.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport {rotate, scale, translate, transform2D} from '../geom/flat/transform.js';\nimport {clear} from '../obj.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @constructor\n * @abstract\n * @extends {module:ol/geom/Geometry}\n * @api\n */\nconst SimpleGeometry = function() {\n\n  Geometry.call(this);\n\n  /**\n   * @protected\n   * @type {module:ol/geom/GeometryLayout}\n   */\n  this.layout = GeometryLayout.XY;\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.stride = 2;\n\n  /**\n   * @protected\n   * @type {Array.<number>}\n   */\n  this.flatCoordinates = null;\n\n};\n\ninherits(SimpleGeometry, Geometry);\n\n\n/**\n * @param {number} stride Stride.\n * @return {module:ol/geom/GeometryLayout} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = GeometryLayout.XY;\n  } else if (stride == 3) {\n    layout = GeometryLayout.XYZ;\n  } else if (stride == 4) {\n    layout = GeometryLayout.XYZM;\n  }\n  return (\n    /** @type {module:ol/geom/GeometryLayout} */ (layout)\n  );\n}\n\n\n/**\n * @param {module:ol/geom/GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == GeometryLayout.XY) {\n    stride = 2;\n  } else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYM) {\n    stride = 3;\n  } else if (layout == GeometryLayout.XYZM) {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n\n/**\n * @inheritDoc\n */\nSimpleGeometry.prototype.containsXY = FALSE;\n\n\n/**\n * @inheritDoc\n */\nSimpleGeometry.prototype.computeExtent = function(extent) {\n  return createOrUpdateFromFlatCoordinates(this.flatCoordinates,\n    0, this.flatCoordinates.length, this.stride, extent);\n};\n\n\n/**\n * @abstract\n * @return {Array} Coordinates.\n */\nSimpleGeometry.prototype.getCoordinates = function() {};\n\n\n/**\n * Return the first coordinate of the geometry.\n * @return {module:ol/coordinate~Coordinate} First coordinate.\n * @api\n */\nSimpleGeometry.prototype.getFirstCoordinate = function() {\n  return this.flatCoordinates.slice(0, this.stride);\n};\n\n\n/**\n * @return {Array.<number>} Flat coordinates.\n */\nSimpleGeometry.prototype.getFlatCoordinates = function() {\n  return this.flatCoordinates;\n};\n\n\n/**\n * Return the last coordinate of the geometry.\n * @return {module:ol/coordinate~Coordinate} Last point.\n * @api\n */\nSimpleGeometry.prototype.getLastCoordinate = function() {\n  return this.flatCoordinates.slice(this.flatCoordinates.length - this.stride);\n};\n\n\n/**\n * Return the {@link module:ol/geom/GeometryLayout~GeometryLayout layout} of the geometry.\n * @return {module:ol/geom/GeometryLayout} Layout.\n * @api\n */\nSimpleGeometry.prototype.getLayout = function() {\n  return this.layout;\n};\n\n\n/**\n * @inheritDoc\n */\nSimpleGeometry.prototype.getSimplifiedGeometry = function(squaredTolerance) {\n  if (this.simplifiedGeometryRevision != this.getRevision()) {\n    clear(this.simplifiedGeometryCache);\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n    this.simplifiedGeometryRevision = this.getRevision();\n  }\n  // If squaredTolerance is negative or if we know that simplification will not\n  // have any effect then just return this.\n  if (squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n       squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)) {\n    return this;\n  }\n  const key = squaredTolerance.toString();\n  if (this.simplifiedGeometryCache.hasOwnProperty(key)) {\n    return this.simplifiedGeometryCache[key];\n  } else {\n    const simplifiedGeometry =\n        this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      this.simplifiedGeometryCache[key] = simplifiedGeometry;\n      return simplifiedGeometry;\n    } else {\n      // Simplification did not actually remove any coordinates.  We now know\n      // that any calls to getSimplifiedGeometry with a squaredTolerance less\n      // than or equal to the current squaredTolerance will also not have any\n      // effect.  This allows us to short circuit simplification (saving CPU\n      // cycles) and prevents the cache of simplified geometries from filling\n      // up with useless identical copies of this geometry (saving memory).\n      this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n      return this;\n    }\n  }\n};\n\n\n/**\n * @param {number} squaredTolerance Squared tolerance.\n * @return {module:ol/geom/SimpleGeometry} Simplified geometry.\n * @protected\n */\nSimpleGeometry.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  return this;\n};\n\n\n/**\n * @return {number} Stride.\n */\nSimpleGeometry.prototype.getStride = function() {\n  return this.stride;\n};\n\n\n/**\n * @param {module:ol/geom/GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @protected\n */\nSimpleGeometry.prototype.setFlatCoordinatesInternal = function(layout, flatCoordinates) {\n  this.stride = getStrideForLayout(layout);\n  this.layout = layout;\n  this.flatCoordinates = flatCoordinates;\n};\n\n\n/**\n * @abstract\n * @param {Array} coordinates Coordinates.\n * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n */\nSimpleGeometry.prototype.setCoordinates = function(coordinates, opt_layout) {};\n\n\n/**\n * @param {module:ol/geom/GeometryLayout|undefined} layout Layout.\n * @param {Array} coordinates Coordinates.\n * @param {number} nesting Nesting.\n * @protected\n */\nSimpleGeometry.prototype.setLayout = function(layout, coordinates, nesting) {\n  /** @type {number} */\n  let stride;\n  if (layout) {\n    stride = getStrideForLayout(layout);\n  } else {\n    for (let i = 0; i < nesting; ++i) {\n      if (coordinates.length === 0) {\n        this.layout = GeometryLayout.XY;\n        this.stride = 2;\n        return;\n      } else {\n        coordinates = /** @type {Array} */ (coordinates[0]);\n      }\n    }\n    stride = coordinates.length;\n    layout = getLayoutForStride(stride);\n  }\n  this.layout = layout;\n  this.stride = stride;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nSimpleGeometry.prototype.applyTransform = function(transformFn) {\n  if (this.flatCoordinates) {\n    transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n    this.changed();\n  }\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nSimpleGeometry.prototype.rotate = function(angle, anchor) {\n  const flatCoordinates = this.getFlatCoordinates();\n  if (flatCoordinates) {\n    const stride = this.getStride();\n    rotate(\n      flatCoordinates, 0, flatCoordinates.length,\n      stride, angle, anchor, flatCoordinates);\n    this.changed();\n  }\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nSimpleGeometry.prototype.scale = function(sx, opt_sy, opt_anchor) {\n  let sy = opt_sy;\n  if (sy === undefined) {\n    sy = sx;\n  }\n  let anchor = opt_anchor;\n  if (!anchor) {\n    anchor = getCenter(this.getExtent());\n  }\n  const flatCoordinates = this.getFlatCoordinates();\n  if (flatCoordinates) {\n    const stride = this.getStride();\n    scale(\n      flatCoordinates, 0, flatCoordinates.length,\n      stride, sx, sy, anchor, flatCoordinates);\n    this.changed();\n  }\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nSimpleGeometry.prototype.translate = function(deltaX, deltaY) {\n  const flatCoordinates = this.getFlatCoordinates();\n  if (flatCoordinates) {\n    const stride = this.getStride();\n    translate(\n      flatCoordinates, 0, flatCoordinates.length, stride,\n      deltaX, deltaY, flatCoordinates);\n    this.changed();\n  }\n};\n\n\n/**\n * @param {module:ol/geom/SimpleGeometry} simpleGeometry Simple geometry.\n * @param {module:ol/transform~Transform} transform Transform.\n * @param {Array.<number>=} opt_dest Destination.\n * @return {Array.<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, opt_dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  } else {\n    const stride = simpleGeometry.getStride();\n    return transform2D(\n      flatCoordinates, 0, flatCoordinates.length, stride,\n      transform, opt_dest);\n  }\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/area\n */\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array.<number>} closestPoint Closest point.\n */\nfunction assignClosest(flatCoordinates, offset1, offset2, stride, x, y, closestPoint) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i], t);\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(\n      flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(flatCoordinates, offset, endss, stride, max) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(\n      flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array.<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array.<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(flatCoordinates, offset, end,\n  stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance,\n  opt_tmpPoint) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x, y, flatCoordinates[offset], flatCoordinates[offset + 1]);\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates, index - stride, index, stride, x, y, tmpPoint);\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index += stride * Math.max(\n        ((Math.sqrt(squaredDistance) -\n            Math.sqrt(minSquaredDistance)) / maxDelta) | 0, 1);\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates, end - stride, offset, stride, x, y, tmpPoint);\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array.<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array.<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(flatCoordinates, offset, ends,\n  stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance,\n  opt_tmpPoint) {\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates, offset, end, stride,\n      maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array.<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array.<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(flatCoordinates, offset,\n  endss, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance,\n  opt_tmpPoint) {\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates, offset, ends, stride,\n      maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<module:ol/coordinate~Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(flatCoordinates, offset, coordinates, stride) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<module:ol/coordinate~Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array.<number>=} opt_ends Ends.\n * @return {Array.<number>} Ends.\n */\nexport function deflateCoordinatesArray(flatCoordinates, offset, coordinatess, stride, opt_ends) {\n  const ends = opt_ends ? opt_ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates, offset, coordinatess[j], stride);\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<Array.<module:ol/coordinate~Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array.<Array.<number>>=} opt_endss Endss.\n * @return {Array.<Array.<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(flatCoordinates, offset, coordinatesss, stride, opt_endss) {\n  const endss = opt_endss ? opt_endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates, offset, coordinatesss[j], stride, endss[i]);\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array.<module:ol/coordinate~Coordinate>=} opt_coordinates Coordinates.\n * @return {Array.<module:ol/coordinate~Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(flatCoordinates, offset, end, stride, opt_coordinates) {\n  const coordinates = opt_coordinates !== undefined ? opt_coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array.<Array.<module:ol/coordinate~Coordinate>>=} opt_coordinatess Coordinatess.\n * @return {Array.<Array.<module:ol/coordinate~Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(flatCoordinates, offset, ends, stride, opt_coordinatess) {\n  const coordinatess = opt_coordinatess !== undefined ? opt_coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates, offset, end, stride, coordinatess[i]);\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array.<Array.<Array.<module:ol/coordinate~Coordinate>>>=} opt_coordinatesss\n *     Coordinatesss.\n * @return {Array.<Array.<Array.<module:ol/coordinate~Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(flatCoordinates, offset, endss, stride, opt_coordinatesss) {\n  const coordinatesss = opt_coordinatesss !== undefined ? opt_coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] = inflateCoordinatesArray(\n      flatCoordinates, offset, ends, stride, coordinatesss[i]);\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredSegmentDistance, squaredDistance} from '../../math.js';\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array.<number>=} opt_simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @return {Array.<number>} Simplified line string.\n */\nexport function simplifyLineString(flatCoordinates, offset, end,\n  stride, squaredTolerance, highQuality, opt_simplifiedFlatCoordinates) {\n  const simplifiedFlatCoordinates = opt_simplifiedFlatCoordinates !== undefined ?\n    opt_simplifiedFlatCoordinates : [];\n  if (!highQuality) {\n    end = radialDistance(flatCoordinates, offset, end,\n      stride, squaredTolerance,\n      simplifiedFlatCoordinates, 0);\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates, offset, end, stride, squaredTolerance,\n    simplifiedFlatCoordinates, 0);\n  return simplifiedFlatCoordinates;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array.<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(flatCoordinates, offset, end,\n  stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array.<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array.<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(\n        x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array.<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array.<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(flatCoordinates, offset,\n  ends, stride, squaredTolerance, simplifiedFlatCoordinates,\n  simplifiedOffset, simplifiedEnds) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates, offset, end, stride, squaredTolerance,\n      simplifiedFlatCoordinates, simplifiedOffset);\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array.<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array.<Array.<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates, offset, endss, stride, squaredTolerance,\n  simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates, offset, ends, stride, squaredTolerance,\n      simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array.<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(flatCoordinates, offset, end,\n  stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array.<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(flatCoordinates, offset, end, stride,\n  tolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if ((dx1 * dy2 == dy1 * dx2) &&\n        ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n        ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array.<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array.<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates, offset, ends, stride,\n  tolerance,\n  simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates, offset, end, stride,\n      tolerance,\n      simplifiedFlatCoordinates, simplifiedOffset);\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array.<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array.<Array.<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates, offset, endss, stride,\n  tolerance,\n  simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates, offset, ends, stride,\n      tolerance,\n      simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/LinearRing\n */\nimport {inherits} from '../index.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport {linearRing as linearRingArea} from '../geom/flat/area.js';\nimport {assignClosestPoint, maxSquaredDelta} from '../geom/flat/closest.js';\nimport {deflateCoordinates} from '../geom/flat/deflate.js';\nimport {inflateCoordinates} from '../geom/flat/inflate.js';\nimport {douglasPeucker} from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @constructor\n * @extends {module:ol/geom/SimpleGeometry}\n * @param {Array.<module:ol/coordinate~Coordinate>} coordinates Coordinates.\n * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst LinearRing = function(coordinates, opt_layout) {\n\n  SimpleGeometry.call(this);\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\ninherits(LinearRing, SimpleGeometry);\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!module:ol/geom/LinearRing} Clone.\n * @override\n * @api\n */\nLinearRing.prototype.clone = function() {\n  const linearRing = new LinearRing(null);\n  linearRing.setFlatCoordinates(this.layout, this.flatCoordinates.slice());\n  return linearRing;\n};\n\n\n/**\n * @inheritDoc\n */\nLinearRing.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(maxSquaredDelta(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return assignClosestPoint(\n    this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n    this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * Return the area of the linear ring on projected plane.\n * @return {number} Area (on projected plane).\n * @api\n */\nLinearRing.prototype.getArea = function() {\n  return linearRingArea(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n};\n\n\n/**\n * Return the coordinates of the linear ring.\n * @return {Array.<module:ol/coordinate~Coordinate>} Coordinates.\n * @override\n * @api\n */\nLinearRing.prototype.getCoordinates = function() {\n  return inflateCoordinates(\n    this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n};\n\n\n/**\n * @inheritDoc\n */\nLinearRing.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  const simplifiedFlatCoordinates = [];\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n    squaredTolerance, simplifiedFlatCoordinates, 0);\n  const simplifiedLinearRing = new LinearRing(null);\n  simplifiedLinearRing.setFlatCoordinates(\n    GeometryLayout.XY, simplifiedFlatCoordinates);\n  return simplifiedLinearRing;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nLinearRing.prototype.getType = function() {\n  return GeometryType.LINEAR_RING;\n};\n\n\n/**\n * @inheritDoc\n */\nLinearRing.prototype.intersectsExtent = function(extent) {};\n\n\n/**\n * Set the coordinates of the linear ring.\n * @param {Array.<module:ol/coordinate~Coordinate>} coordinates Coordinates.\n * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nLinearRing.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null);\n  } else {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  }\n};\n\n\n/**\n * @param {module:ol/geom/GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n */\nLinearRing.prototype.setFlatCoordinates = function(layout, flatCoordinates) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.changed();\n};\nexport default LinearRing;\n","/**\n * @module ol/geom/Point\n */\nimport {inherits} from '../index.js';\nimport {createOrUpdateFromCoordinate, containsXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport {deflateCoordinate} from '../geom/flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @constructor\n * @extends {module:ol/geom/SimpleGeometry}\n * @param {module:ol/coordinate~Coordinate} coordinates Coordinates.\n * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst Point = function(coordinates, opt_layout) {\n  SimpleGeometry.call(this);\n  this.setCoordinates(coordinates, opt_layout);\n};\n\ninherits(Point, SimpleGeometry);\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!module:ol/geom/Point} Clone.\n * @override\n * @api\n */\nPoint.prototype.clone = function() {\n  const point = new Point(null);\n  point.setFlatCoordinates(this.layout, this.flatCoordinates.slice());\n  return point;\n};\n\n\n/**\n * @inheritDoc\n */\nPoint.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  const flatCoordinates = this.flatCoordinates;\n  const squaredDistance = squaredDx(x, y, flatCoordinates[0], flatCoordinates[1]);\n  if (squaredDistance < minSquaredDistance) {\n    const stride = this.stride;\n    for (let i = 0; i < stride; ++i) {\n      closestPoint[i] = flatCoordinates[i];\n    }\n    closestPoint.length = stride;\n    return squaredDistance;\n  } else {\n    return minSquaredDistance;\n  }\n};\n\n\n/**\n * Return the coordinate of the point.\n * @return {module:ol/coordinate~Coordinate} Coordinates.\n * @override\n * @api\n */\nPoint.prototype.getCoordinates = function() {\n  return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n};\n\n\n/**\n * @inheritDoc\n */\nPoint.prototype.computeExtent = function(extent) {\n  return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nPoint.prototype.getType = function() {\n  return GeometryType.POINT;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nPoint.prototype.intersectsExtent = function(extent) {\n  return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nPoint.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null);\n  } else {\n    this.setLayout(opt_layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  }\n};\n\n\n/**\n * @param {module:ol/geom/GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n */\nPoint.prototype.setFlatCoordinates = function(layout, flatCoordinates) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.changed();\n};\nexport default Point;\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(flatCoordinates, offset, end, stride, extent) {\n  const outside = forEachCorner(extent,\n    /**\n     * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function(coordinate) {\n      return !linearRingContainsXY(flatCoordinates, offset, end, stride, coordinate[0], coordinate[1]);\n    });\n  return !outside;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(flatCoordinates, offset, end, stride, x, y) {\n  // http://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && ((x2 - x1) * (y - y1)) - ((x - x1) * (y2 - y1)) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && ((x2 - x1) * (y - y1)) - ((x - x1) * (y2 - y1)) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(flatCoordinates, offset, endss, stride, x, y) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {linearRingsContainsXY} from '../flat/contains.js';\n\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array.<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array.<number>=} opt_dest Destination.\n * @return {Array.<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(flatCoordinates, offset,\n  ends, stride, flatCenters, flatCentersOffset, opt_dest) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array.<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = (y - y1) / (y2 - y1) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(numberSafeCompareFunction);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (opt_dest) {\n    opt_dest.push(pointX, y, maxSegmentLength);\n    return opt_dest;\n  } else {\n    return [pointX, y, maxSegmentLength];\n  }\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array.<number>} flatCenters Flat centers.\n * @return {Array.<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(flatCoordinates, offset, endss, stride, flatCenters) {\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(flatCoordinates,\n      offset, ends, stride, flatCenters, 2 * i, interiorPoints);\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(this: S, module:ol/coordinate~Coordinate, module:ol/coordinate~Coordinate): T} callback Function\n *     called for each segment.\n * @param {S=} opt_this The object to be used as the value of 'this'\n *     within callback.\n * @return {T|boolean} Value.\n * @template T,S\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback, opt_this) {\n  const point1 = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n  const point2 = [];\n  let ret;\n  for (; (offset + stride) < end; offset += stride) {\n    point2[0] = flatCoordinates[offset + stride];\n    point2[1] = flatCoordinates[offset + stride + 1];\n    ret = callback.call(opt_this, point1, point2);\n    if (ret) {\n      return ret;\n    }\n    point1[0] = point2[0];\n    point1[1] = point2[1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {containsExtent, createEmpty, extendFlatCoordinates, intersects, intersectsSegment} from '../../extent.js';\nimport {linearRingContainsXY, linearRingContainsExtent} from '../flat/contains.js';\nimport {forEach as forEachSegment} from '../flat/segments.js';\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(flatCoordinates, offset, end, stride, extent) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(), flatCoordinates, offset, end, stride);\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] &&\n      coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] &&\n      coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(flatCoordinates, offset, end, stride,\n    /**\n     * @param {module:ol/coordinate~Coordinate} point1 Start point.\n     * @param {module:ol/coordinate~Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function(point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    });\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(flatCoordinates, offset, ends, stride, extent) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (intersectsLineString(\n      flatCoordinates, offset, ends[i], stride, extent)) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(flatCoordinates, offset, end, stride, extent) {\n  if (intersectsLineString(\n    flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[1])) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[3])) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[1])) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[3])) {\n    return true;\n  }\n  return false;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent) {\n  if (!intersectsLinearRing(\n    flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (linearRingContainsExtent(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(flatCoordinates, offset, endss, stride, extent) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (intersectsLinearRingArray(\n      flatCoordinates, offset, ends, stride, extent)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from '../flat/reverse.js';\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // http://tinyurl.com/clockwise-method\n  // https://github.com/OSGeo/gdal/blob/trunk/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge > 0;\n}\n\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingIsOriented(flatCoordinates, offset, ends, stride, opt_right) {\n  const right = opt_right !== undefined ? opt_right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates, offset, end, stride);\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(flatCoordinates, offset, endss, stride, opt_right) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    if (!linearRingIsOriented(\n      flatCoordinates, offset, endss[i], stride, opt_right)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(flatCoordinates, offset, ends, stride, opt_right) {\n  const right = opt_right !== undefined ? opt_right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates, offset, end, stride);\n    const reverse = i === 0 ?\n      (right && isClockwise) || (!right && !isClockwise) :\n      (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(flatCoordinates, offset, endss, stride, opt_right) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates, offset, endss[i], stride, opt_right);\n  }\n  return offset;\n}\n","/**\n * @module ol/geom/Polygon\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, getCenter} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LinearRing from '../geom/LinearRing.js';\nimport Point from '../geom/Point.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport {offset as sphereOffset} from '../sphere.js';\nimport {linearRings as linearRingsArea} from '../geom/flat/area.js';\nimport {assignClosestArrayPoint, arrayMaxSquaredDelta} from '../geom/flat/closest.js';\nimport {linearRingsContainsXY} from '../geom/flat/contains.js';\nimport {deflateCoordinatesArray} from '../geom/flat/deflate.js';\nimport {inflateCoordinatesArray} from '../geom/flat/inflate.js';\nimport {getInteriorPointOfArray} from '../geom/flat/interiorpoint.js';\nimport {intersectsLinearRingArray} from '../geom/flat/intersectsextent.js';\nimport {linearRingIsOriented, orientLinearRings} from '../geom/flat/orient.js';\nimport {quantizeArray} from '../geom/flat/simplify.js';\nimport {modulo} from '../math.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @constructor\n * @extends {module:ol/geom/SimpleGeometry}\n * @param {Array.<Array.<module:ol/coordinate~Coordinate>>} coordinates Array of linear\n *     rings that define the polygon. The first linear ring of the array\n *     defines the outer-boundary or surface of the polygon. Each subsequent\n *     linear ring defines a hole in the surface of the polygon. A linear ring\n *     is an array of vertices' coordinates where the first coordinate and the\n *     last are equivalent.\n * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst Polygon = function(coordinates, opt_layout) {\n\n  SimpleGeometry.call(this);\n\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n  this.ends_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.flatInteriorPointRevision_ = -1;\n\n  /**\n   * @private\n   * @type {module:ol/coordinate~Coordinate}\n   */\n  this.flatInteriorPoint_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.orientedRevision_ = -1;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.orientedFlatCoordinates_ = null;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\ninherits(Polygon, SimpleGeometry);\n\n\n/**\n * Append the passed linear ring to this polygon.\n * @param {module:ol/geom/LinearRing} linearRing Linear ring.\n * @api\n */\nPolygon.prototype.appendLinearRing = function(linearRing) {\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n  } else {\n    extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n  }\n  this.ends_.push(this.flatCoordinates.length);\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!module:ol/geom/Polygon} Clone.\n * @override\n * @api\n */\nPolygon.prototype.clone = function() {\n  const polygon = new Polygon(null);\n  polygon.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(), this.ends_.slice());\n  return polygon;\n};\n\n\n/**\n * @inheritDoc\n */\nPolygon.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(\n      this.flatCoordinates, 0, this.ends_, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return assignClosestArrayPoint(\n    this.flatCoordinates, 0, this.ends_, this.stride,\n    this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * @inheritDoc\n */\nPolygon.prototype.containsXY = function(x, y) {\n  return linearRingsContainsXY(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, x, y);\n};\n\n\n/**\n * Return the area of the polygon on projected plane.\n * @return {number} Area (on projected plane).\n * @api\n */\nPolygon.prototype.getArea = function() {\n  return linearRingsArea(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride);\n};\n\n\n/**\n * Get the coordinate array for this geometry.  This array has the structure\n * of a GeoJSON coordinate array for polygons.\n *\n * @param {boolean=} opt_right Orient coordinates according to the right-hand\n *     rule (counter-clockwise for exterior and clockwise for interior rings).\n *     If `false`, coordinates will be oriented according to the left-hand rule\n *     (clockwise for exterior and counter-clockwise for interior rings).\n *     By default, coordinate orientation will depend on how the geometry was\n *     constructed.\n * @return {Array.<Array.<module:ol/coordinate~Coordinate>>} Coordinates.\n * @override\n * @api\n */\nPolygon.prototype.getCoordinates = function(opt_right) {\n  let flatCoordinates;\n  if (opt_right !== undefined) {\n    flatCoordinates = this.getOrientedFlatCoordinates().slice();\n    orientLinearRings(\n      flatCoordinates, 0, this.ends_, this.stride, opt_right);\n  } else {\n    flatCoordinates = this.flatCoordinates;\n  }\n\n  return inflateCoordinatesArray(\n    flatCoordinates, 0, this.ends_, this.stride);\n};\n\n\n/**\n * @return {Array.<number>} Ends.\n */\nPolygon.prototype.getEnds = function() {\n  return this.ends_;\n};\n\n\n/**\n * @return {Array.<number>} Interior point.\n */\nPolygon.prototype.getFlatInteriorPoint = function() {\n  if (this.flatInteriorPointRevision_ != this.getRevision()) {\n    const flatCenter = getCenter(this.getExtent());\n    this.flatInteriorPoint_ = getInteriorPointOfArray(\n      this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride,\n      flatCenter, 0);\n    this.flatInteriorPointRevision_ = this.getRevision();\n  }\n  return this.flatInteriorPoint_;\n};\n\n\n/**\n * Return an interior point of the polygon.\n * @return {module:ol/geom/Point} Interior point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n * @api\n */\nPolygon.prototype.getInteriorPoint = function() {\n  return new Point(this.getFlatInteriorPoint(), GeometryLayout.XYM);\n};\n\n\n/**\n * Return the number of rings of the polygon,  this includes the exterior\n * ring and any interior rings.\n *\n * @return {number} Number of rings.\n * @api\n */\nPolygon.prototype.getLinearRingCount = function() {\n  return this.ends_.length;\n};\n\n\n/**\n * Return the Nth linear ring of the polygon geometry. Return `null` if the\n * given index is out of range.\n * The exterior linear ring is available at index `0` and the interior rings\n * at index `1` and beyond.\n *\n * @param {number} index Index.\n * @return {module:ol/geom/LinearRing} Linear ring.\n * @api\n */\nPolygon.prototype.getLinearRing = function(index) {\n  if (index < 0 || this.ends_.length <= index) {\n    return null;\n  }\n  const linearRing = new LinearRing(null);\n  linearRing.setFlatCoordinates(this.layout, this.flatCoordinates.slice(\n    index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]));\n  return linearRing;\n};\n\n\n/**\n * Return the linear rings of the polygon.\n * @return {Array.<module:ol/geom/LinearRing>} Linear rings.\n * @api\n */\nPolygon.prototype.getLinearRings = function() {\n  const layout = this.layout;\n  const flatCoordinates = this.flatCoordinates;\n  const ends = this.ends_;\n  const linearRings = [];\n  let offset = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const linearRing = new LinearRing(null);\n    linearRing.setFlatCoordinates(layout, flatCoordinates.slice(offset, end));\n    linearRings.push(linearRing);\n    offset = end;\n  }\n  return linearRings;\n};\n\n\n/**\n * @return {Array.<number>} Oriented flat coordinates.\n */\nPolygon.prototype.getOrientedFlatCoordinates = function() {\n  if (this.orientedRevision_ != this.getRevision()) {\n    const flatCoordinates = this.flatCoordinates;\n    if (linearRingIsOriented(\n      flatCoordinates, 0, this.ends_, this.stride)) {\n      this.orientedFlatCoordinates_ = flatCoordinates;\n    } else {\n      this.orientedFlatCoordinates_ = flatCoordinates.slice();\n      this.orientedFlatCoordinates_.length =\n          orientLinearRings(\n            this.orientedFlatCoordinates_, 0, this.ends_, this.stride);\n    }\n    this.orientedRevision_ = this.getRevision();\n  }\n  return this.orientedFlatCoordinates_;\n};\n\n\n/**\n * @inheritDoc\n */\nPolygon.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  const simplifiedFlatCoordinates = [];\n  const simplifiedEnds = [];\n  simplifiedFlatCoordinates.length = quantizeArray(\n    this.flatCoordinates, 0, this.ends_, this.stride,\n    Math.sqrt(squaredTolerance),\n    simplifiedFlatCoordinates, 0, simplifiedEnds);\n  const simplifiedPolygon = new Polygon(null);\n  simplifiedPolygon.setFlatCoordinates(\n    GeometryLayout.XY, simplifiedFlatCoordinates, simplifiedEnds);\n  return simplifiedPolygon;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nPolygon.prototype.getType = function() {\n  return GeometryType.POLYGON;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nPolygon.prototype.intersectsExtent = function(extent) {\n  return intersectsLinearRingArray(\n    this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, extent);\n};\n\n\n/**\n * Set the coordinates of the polygon.\n * @param {Array.<Array.<module:ol/coordinate~Coordinate>>} coordinates Coordinates.\n * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nPolygon.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null, this.ends_);\n  } else {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n};\n\n\n/**\n * @param {module:ol/geom/GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<number>} ends Ends.\n */\nPolygon.prototype.setFlatCoordinates = function(layout, flatCoordinates, ends) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.ends_ = ends;\n  this.changed();\n};\n\nexport default Polygon;\n\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {module:ol/coordinate~Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices.\n * @param {number=} opt_n Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number=} opt_sphereRadius Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {module:ol/geom/Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, opt_n, opt_sphereRadius) {\n  const n = opt_n ? opt_n : 32;\n  /** @type {Array.<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(flatCoordinates, sphereOffset(center, radius, 2 * Math.PI * i / n, opt_sphereRadius));\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  const polygon = new Polygon(null);\n  polygon.setFlatCoordinates(GeometryLayout.XY, flatCoordinates, [flatCoordinates.length]);\n  return polygon;\n}\n\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {module:ol/extent~Extent} extent The extent.\n * @return {module:ol/geom/Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates =\n      [minX, minY, minX, maxY, maxX, maxY, maxX, minY, minX, minY];\n  const polygon = new Polygon(null);\n  polygon.setFlatCoordinates(\n    GeometryLayout.XY, flatCoordinates, [flatCoordinates.length]);\n  return polygon;\n}\n\n\n/**\n * Create a regular polygon from a circle.\n * @param {module:ol/geom/Circle} circle Circle geometry.\n * @param {number=} opt_sides Number of sides of the polygon. Default is 32.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     radians. Default is 0.\n * @return {module:ol/geom/Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, opt_sides, opt_angle) {\n  const sides = opt_sides ? opt_sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const polygon = new Polygon(null, layout);\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i++) {\n    flatCoordinates[i] = 0;\n  }\n  const ends = [flatCoordinates.length];\n  polygon.setFlatCoordinates(layout, flatCoordinates, ends);\n  makeRegular(polygon, circle.getCenter(), circle.getRadius(), opt_angle);\n  return polygon;\n}\n\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {module:ol/geom/Polygon} polygon Polygon geometry.\n * @param {module:ol/coordinate~Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     radians. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, opt_angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const layout = polygon.getLayout();\n  const stride = polygon.getStride();\n  const ends = polygon.getEnds();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = opt_angle ? opt_angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI / sides);\n    flatCoordinates[offset] = center[0] + (radius * Math.cos(angle));\n    flatCoordinates[offset + 1] = center[1] + (radius * Math.sin(angle));\n  }\n  polygon.setFlatCoordinates(layout, flatCoordinates, ends);\n}\n","/**\n * @module ol/View\n */\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {inherits, getUid} from './index.js';\nimport {UNDEFINED} from './functions.js';\nimport {createExtent, none as centerNone} from './centerconstraint.js';\nimport BaseObject from './Object.js';\nimport {createSnapToResolutions, createSnapToPower} from './resolutionconstraint.js';\nimport {createSnapToZero, createSnapToN, none as rotationNone, disable} from './rotationconstraint.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {linearFindNearest} from './array.js';\nimport {assert} from './asserts.js';\nimport {add as addCoordinate, rotate as rotateCoordinate, equals as coordinatesEqual} from './coordinate.js';\nimport {inAndOut} from './easing.js';\nimport {getForViewAndSize, getCenter, getHeight, getWidth, isEmpty} from './extent.js';\nimport GeometryType from './geom/GeometryType.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\nimport SimpleGeometry from './geom/SimpleGeometry.js';\nimport {clamp, modulo} from './math.js';\nimport {assign} from './obj.js';\nimport {createProjection, METERS_PER_UNIT} from './proj.js';\nimport Units from './proj/Units.js';\n\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {module:ol/coordinate~Coordinate} [sourceCenter]\n * @property {module:ol/coordinate~Coordinate} [targetCenter]\n * @property {number} [sourceResolution]\n * @property {number} [targetResolution]\n * @property {number} [sourceRotation]\n * @property {number} [sourceRotation]\n * @property {module:ol/coordinate~Coordinate} [anchor]\n * @property {number} start\n * @property {number} duration\n * @property {boolean} complete\n * @property {function(number):number} easing\n * @property {function(boolean)} callback\n */\n\n\n/**\n * @typedef {Object} Constraints\n * @property {module:ol/centerconstraint~Type} center\n * @property {module:ol/resolutionconstraint~Type} resolution\n * @property {module:ol/rotationconstraint~Type} rotation\n */\n\n\n/**\n * @typedef {Object} FitOptions\n * @property {module:ol/size~Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array.<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [constrainResolution=true] Constrain the resolution.\n * @property {boolean} [nearest=false] If `constrainResolution` is `true`, get\n * the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean)} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n\n/**\n * @typedef {Object} ViewOptions\n * @property {module:ol/coordinate~Coordinate} [center] The initial center for\n * the view. The coordinate system for the center is specified with the\n * `projection` option. Layer sources will not be fetched if this is not set,\n * but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {module:ol/extent~Extent} [extent] The extent that constrains the\n * center, in other words, center cannot be set outside this extent.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {module:ol/proj~ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array.<number>} [resolutions] Resolutions to determine the\n * resolution constraint. If set the `maxResolution`, `minResolution`,\n * `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view. The initial\n * resolution is determined using the {@link #constrainResolution} method.\n * @property {number} [zoomFactor=2] The zoom factor used to determine the\n * resolution constraint.\n */\n\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {module:ol/coordinate~Coordinate|undefined} center The center of the view at the end of\n * the animation.\n * @property {number|undefined} zoom The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number|undefined} resolution The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number|undefined} rotation The rotation of the view at the end of\n * the animation.\n * @property {module:ol/coordinate~Coordinate|undefined} anchor Optional anchor to remained fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n\n/**\n * @typedef {Object} State\n * @property {module:ol/coordinate~Coordinate} center\n * @property {module:ol/proj/Projection} projection\n * @property {number} resolution\n * @property {number} rotation\n * @property {number} zoom\n */\n\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * ### The view states\n *\n * An View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * An View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Spherical Mercator (EPSG:3857).\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view. Any value can be passed to the setters. And the value\n * that is passed to a setter will effectively be the value set in the view,\n * and returned by the corresponding getter.\n *\n * But a View object also has a *resolution constraint*, a\n * *rotation constraint* and a *center constraint*.\n *\n * As said above, no constraints are applied when the setters are used to set\n * new states for the view. Applying constraints is done explicitly through\n * the use of the `constrain*` functions (`constrainResolution` and\n * `constrainRotation` and `constrainCenter`).\n *\n * The main users of the constraints are the interactions and the\n * controls. For example, double-clicking on the map changes the view to\n * the \"next\" resolution. And releasing the fingers after pinch-zooming\n * snaps to the closest resolution (with an animation).\n *\n * The *resolution constraint* snaps to specific resolutions. It is\n * determined by the following options: `resolutions`, `maxResolution`,\n * `maxZoom`, and `zoomFactor`. If `resolutions` is set, the other three\n * options are ignored. See documentation for each option for more\n * information.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default the rotation value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the center is not constrained at all.\n *\n * @constructor\n * @extends {module:ol/Object}\n * @param {module:ol/View~ViewOptions=} opt_options View options.\n * @api\n */\nconst View = function(opt_options) {\n  BaseObject.call(this);\n\n  const options = assign({}, opt_options);\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.hints_ = [0, 0];\n\n  /**\n   * @private\n   * @type {Array.<Array.<module:ol/View~Animation>>}\n   */\n  this.animations_ = [];\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.updateAnimationKey_;\n\n  this.updateAnimations_ = this.updateAnimations_.bind(this);\n\n  /**\n   * @private\n   * @const\n   * @type {module:ol/proj/Projection}\n   */\n  this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n  this.applyOptions_(options);\n};\n\ninherits(View, BaseObject);\n\n\n/**\n * Set up the view with the given options.\n * @param {module:ol/View~ViewOptions} options View options.\n */\nView.prototype.applyOptions_ = function(options) {\n\n  /**\n   * @type {Object.<string, *>}\n   */\n  const properties = {};\n  properties[ViewProperty.CENTER] = options.center !== undefined ?\n    options.center : null;\n\n  const resolutionConstraintInfo = createResolutionConstraint(options);\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n  /**\n   * @private\n   * @type {Array.<number>|undefined}\n   */\n  this.resolutions_ = options.resolutions;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n  const centerConstraint = createCenterConstraint(options);\n  const resolutionConstraint = resolutionConstraintInfo.constraint;\n  const rotationConstraint = createRotationConstraint(options);\n\n  /**\n   * @private\n   * @type {module:ol/View~Constraints}\n   */\n  this.constraints_ = {\n    center: centerConstraint,\n    resolution: resolutionConstraint,\n    rotation: rotationConstraint\n  };\n\n  if (options.resolution !== undefined) {\n    properties[ViewProperty.RESOLUTION] = options.resolution;\n  } else if (options.zoom !== undefined) {\n    properties[ViewProperty.RESOLUTION] = this.constrainResolution(\n      this.maxResolution_, options.zoom - this.minZoom_);\n\n    if (this.resolutions_) { // in case map zoom is out of min/max zoom range\n      properties[ViewProperty.RESOLUTION] = clamp(\n        Number(this.getResolution() || properties[ViewProperty.RESOLUTION]),\n        this.minResolution_, this.maxResolution_);\n    }\n  }\n  properties[ViewProperty.ROTATION] = options.rotation !== undefined ? options.rotation : 0;\n  this.setProperties(properties);\n\n  /**\n   * @private\n   * @type {module:ol/View~ViewOptions}\n   */\n  this.options_ = options;\n\n};\n\n/**\n * Get an updated version of the view options used to construct the view.  The\n * current resolution (or zoom), center, and rotation are applied to any stored\n * options.  The provided options can be used to apply new min/max zoom or\n * resolution limits.\n * @param {module:ol/View~ViewOptions} newOptions New options to be applied.\n * @return {module:ol/View~ViewOptions} New options updated with the current view state.\n */\nView.prototype.getUpdatedOptions_ = function(newOptions) {\n  const options = assign({}, this.options_);\n\n  // preserve resolution (or zoom)\n  if (options.resolution !== undefined) {\n    options.resolution = this.getResolution();\n  } else {\n    options.zoom = this.getZoom();\n  }\n\n  // preserve center\n  options.center = this.getCenter();\n\n  // preserve rotation\n  options.rotation = this.getRotation();\n\n  return assign({}, options, newOptions);\n};\n\n\n/**\n * Animate the view.  The view's center, zoom (or resolution), and rotation\n * can be animated for smooth transitions between view states.  For example,\n * to animate the view to a new zoom level:\n *\n *     view.animate({zoom: view.getZoom() + 1});\n *\n * By default, the animation lasts one second and uses in-and-out easing.  You\n * can customize this behavior by including `duration` (in milliseconds) and\n * `easing` options (see {@link module:ol/easing}).\n *\n * To chain together multiple animations, call the method with multiple\n * animation objects.  For example, to first zoom and then pan:\n *\n *     view.animate({zoom: 10}, {center: [0, 0]});\n *\n * If you provide a function as the last argument to the animate method, it\n * will get called at the end of an animation series.  The callback will be\n * called with `true` if the animation series completed on its own or `false`\n * if it was cancelled.\n *\n * Animations are cancelled by user interactions (e.g. dragging the map) or by\n * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n * (or another method that calls one of these).\n *\n * @param {...(module:ol/View~AnimationOptions|function(boolean))} var_args Animation\n *     options.  Multiple animations can be run in series by passing multiple\n *     options objects.  To run multiple animations in parallel, call the method\n *     multiple times.  An optional callback can be provided as a final\n *     argument.  The callback will be called with a boolean indicating whether\n *     the animation completed without being cancelled.\n * @api\n */\nView.prototype.animate = function(var_args) {\n  let animationCount = arguments.length;\n  let callback;\n  if (animationCount > 1 && typeof arguments[animationCount - 1] === 'function') {\n    callback = arguments[animationCount - 1];\n    --animationCount;\n  }\n  if (!this.isDef()) {\n    // if view properties are not yet set, shortcut to the final state\n    const state = arguments[animationCount - 1];\n    if (state.center) {\n      this.setCenter(state.center);\n    }\n    if (state.zoom !== undefined) {\n      this.setZoom(state.zoom);\n    }\n    if (state.rotation !== undefined) {\n      this.setRotation(state.rotation);\n    }\n    if (callback) {\n      setTimeout(function() {\n        callback(true);\n      }, 0);\n    }\n    return;\n  }\n  let start = Date.now();\n  let center = this.getCenter().slice();\n  let resolution = this.getResolution();\n  let rotation = this.getRotation();\n  const series = [];\n  for (let i = 0; i < animationCount; ++i) {\n    const options = /** @type {module:ol/View~AnimationOptions} */ (arguments[i]);\n\n    const animation = /** @type {module:ol/View~Animation} */ ({\n      start: start,\n      complete: false,\n      anchor: options.anchor,\n      duration: options.duration !== undefined ? options.duration : 1000,\n      easing: options.easing || inAndOut\n    });\n\n    if (options.center) {\n      animation.sourceCenter = center;\n      animation.targetCenter = options.center;\n      center = animation.targetCenter;\n    }\n\n    if (options.zoom !== undefined) {\n      animation.sourceResolution = resolution;\n      animation.targetResolution = this.constrainResolution(\n        this.maxResolution_, options.zoom - this.minZoom_, 0);\n      resolution = animation.targetResolution;\n    } else if (options.resolution) {\n      animation.sourceResolution = resolution;\n      animation.targetResolution = options.resolution;\n      resolution = animation.targetResolution;\n    }\n\n    if (options.rotation !== undefined) {\n      animation.sourceRotation = rotation;\n      const delta = modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n      animation.targetRotation = rotation + delta;\n      rotation = animation.targetRotation;\n    }\n\n    animation.callback = callback;\n\n    // check if animation is a no-op\n    if (isNoopAnimation(animation)) {\n      animation.complete = true;\n      // we still push it onto the series for callback handling\n    } else {\n      start += animation.duration;\n    }\n    series.push(animation);\n  }\n  this.animations_.push(series);\n  this.setHint(ViewHint.ANIMATING, 1);\n  this.updateAnimations_();\n};\n\n\n/**\n * Determine if the view is being animated.\n * @return {boolean} The view is being animated.\n * @api\n */\nView.prototype.getAnimating = function() {\n  return this.hints_[ViewHint.ANIMATING] > 0;\n};\n\n\n/**\n * Determine if the user is interacting with the view, such as panning or zooming.\n * @return {boolean} The view is being interacted with.\n * @api\n */\nView.prototype.getInteracting = function() {\n  return this.hints_[ViewHint.INTERACTING] > 0;\n};\n\n\n/**\n * Cancel any ongoing animations.\n * @api\n */\nView.prototype.cancelAnimations = function() {\n  this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n  for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n    const series = this.animations_[i];\n    if (series[0].callback) {\n      series[0].callback(false);\n    }\n  }\n  this.animations_.length = 0;\n};\n\n/**\n * Update all animations.\n */\nView.prototype.updateAnimations_ = function() {\n  if (this.updateAnimationKey_ !== undefined) {\n    cancelAnimationFrame(this.updateAnimationKey_);\n    this.updateAnimationKey_ = undefined;\n  }\n  if (!this.getAnimating()) {\n    return;\n  }\n  const now = Date.now();\n  let more = false;\n  for (let i = this.animations_.length - 1; i >= 0; --i) {\n    const series = this.animations_[i];\n    let seriesComplete = true;\n    for (let j = 0, jj = series.length; j < jj; ++j) {\n      const animation = series[j];\n      if (animation.complete) {\n        continue;\n      }\n      const elapsed = now - animation.start;\n      let fraction = animation.duration > 0 ? elapsed / animation.duration : 1;\n      if (fraction >= 1) {\n        animation.complete = true;\n        fraction = 1;\n      } else {\n        seriesComplete = false;\n      }\n      const progress = animation.easing(fraction);\n      if (animation.sourceCenter) {\n        const x0 = animation.sourceCenter[0];\n        const y0 = animation.sourceCenter[1];\n        const x1 = animation.targetCenter[0];\n        const y1 = animation.targetCenter[1];\n        const x = x0 + progress * (x1 - x0);\n        const y = y0 + progress * (y1 - y0);\n        this.set(ViewProperty.CENTER, [x, y]);\n      }\n      if (animation.sourceResolution && animation.targetResolution) {\n        const resolution = progress === 1 ?\n          animation.targetResolution :\n          animation.sourceResolution + progress * (animation.targetResolution - animation.sourceResolution);\n        if (animation.anchor) {\n          this.set(ViewProperty.CENTER,\n            this.calculateCenterZoom(resolution, animation.anchor));\n        }\n        this.set(ViewProperty.RESOLUTION, resolution);\n      }\n      if (animation.sourceRotation !== undefined && animation.targetRotation !== undefined) {\n        const rotation = progress === 1 ?\n          modulo(animation.targetRotation + Math.PI, 2 * Math.PI) - Math.PI :\n          animation.sourceRotation + progress * (animation.targetRotation - animation.sourceRotation);\n        if (animation.anchor) {\n          this.set(ViewProperty.CENTER,\n            this.calculateCenterRotate(rotation, animation.anchor));\n        }\n        this.set(ViewProperty.ROTATION, rotation);\n      }\n      more = true;\n      if (!animation.complete) {\n        break;\n      }\n    }\n    if (seriesComplete) {\n      this.animations_[i] = null;\n      this.setHint(ViewHint.ANIMATING, -1);\n      const callback = series[0].callback;\n      if (callback) {\n        setTimeout(function() {\n          callback(true);\n        }, 0);\n      }\n    }\n  }\n  // prune completed series\n  this.animations_ = this.animations_.filter(Boolean);\n  if (more && this.updateAnimationKey_ === undefined) {\n    this.updateAnimationKey_ = requestAnimationFrame(this.updateAnimations_);\n  }\n};\n\n/**\n * @param {number} rotation Target rotation.\n * @param {module:ol/coordinate~Coordinate} anchor Rotation anchor.\n * @return {module:ol/coordinate~Coordinate|undefined} Center for rotation and anchor.\n */\nView.prototype.calculateCenterRotate = function(rotation, anchor) {\n  let center;\n  const currentCenter = this.getCenter();\n  if (currentCenter !== undefined) {\n    center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n    rotateCoordinate(center, rotation - this.getRotation());\n    addCoordinate(center, anchor);\n  }\n  return center;\n};\n\n\n/**\n * @param {number} resolution Target resolution.\n * @param {module:ol/coordinate~Coordinate} anchor Zoom anchor.\n * @return {module:ol/coordinate~Coordinate|undefined} Center for resolution and anchor.\n */\nView.prototype.calculateCenterZoom = function(resolution, anchor) {\n  let center;\n  const currentCenter = this.getCenter();\n  const currentResolution = this.getResolution();\n  if (currentCenter !== undefined && currentResolution !== undefined) {\n    const x = anchor[0] - resolution * (anchor[0] - currentCenter[0]) / currentResolution;\n    const y = anchor[1] - resolution * (anchor[1] - currentCenter[1]) / currentResolution;\n    center = [x, y];\n  }\n  return center;\n};\n\n\n/**\n * @private\n * @return {module:ol/size~Size} Viewport size or `[100, 100]` when no viewport is found.\n */\nView.prototype.getSizeFromViewport_ = function() {\n  const size = [100, 100];\n  const selector = '.ol-viewport[data-view=\"' + getUid(this) + '\"]';\n  const element = document.querySelector(selector);\n  if (element) {\n    const metrics = getComputedStyle(element);\n    size[0] = parseInt(metrics.width, 10);\n    size[1] = parseInt(metrics.height, 10);\n  }\n  return size;\n};\n\n\n/**\n * Get the constrained center of this view.\n * @param {module:ol/coordinate~Coordinate|undefined} center Center.\n * @return {module:ol/coordinate~Coordinate|undefined} Constrained center.\n * @api\n */\nView.prototype.constrainCenter = function(center) {\n  return this.constraints_.center(center);\n};\n\n\n/**\n * Get the constrained resolution of this view.\n * @param {number|undefined} resolution Resolution.\n * @param {number=} opt_delta Delta. Default is `0`.\n * @param {number=} opt_direction Direction. Default is `0`.\n * @return {number|undefined} Constrained resolution.\n * @api\n */\nView.prototype.constrainResolution = function(resolution, opt_delta, opt_direction) {\n  const delta = opt_delta || 0;\n  const direction = opt_direction || 0;\n  return this.constraints_.resolution(resolution, delta, direction);\n};\n\n\n/**\n * Get the constrained rotation of this view.\n * @param {number|undefined} rotation Rotation.\n * @param {number=} opt_delta Delta. Default is `0`.\n * @return {number|undefined} Constrained rotation.\n * @api\n */\nView.prototype.constrainRotation = function(rotation, opt_delta) {\n  const delta = opt_delta || 0;\n  return this.constraints_.rotation(rotation, delta);\n};\n\n\n/**\n * Get the view center.\n * @return {module:ol/coordinate~Coordinate|undefined} The center of the view.\n * @observable\n * @api\n */\nView.prototype.getCenter = function() {\n  return (\n    /** @type {module:ol/coordinate~Coordinate|undefined} */ (this.get(ViewProperty.CENTER))\n  );\n};\n\n\n/**\n * @return {module:ol/View~Constraints} Constraints.\n */\nView.prototype.getConstraints = function() {\n  return this.constraints_;\n};\n\n\n/**\n * @param {Array.<number>=} opt_hints Destination array.\n * @return {Array.<number>} Hint.\n */\nView.prototype.getHints = function(opt_hints) {\n  if (opt_hints !== undefined) {\n    opt_hints[0] = this.hints_[0];\n    opt_hints[1] = this.hints_[1];\n    return opt_hints;\n  } else {\n    return this.hints_.slice();\n  }\n};\n\n\n/**\n * Calculate the extent for the current view state and the passed size.\n * The size is the pixel dimensions of the box into which the calculated extent\n * should fit. In most cases you want to get the extent of the entire map,\n * that is `map.getSize()`.\n * @param {module:ol/size~Size=} opt_size Box pixel size. If not provided, the size of the\n * first map that uses this view will be used.\n * @return {module:ol/extent~Extent} Extent.\n * @api\n */\nView.prototype.calculateExtent = function(opt_size) {\n  const size = opt_size || this.getSizeFromViewport_();\n  const center = /** @type {!module:ol/coordinate~Coordinate} */ (this.getCenter());\n  assert(center, 1); // The view center is not defined\n  const resolution = /** @type {!number} */ (this.getResolution());\n  assert(resolution !== undefined, 2); // The view resolution is not defined\n  const rotation = /** @type {!number} */ (this.getRotation());\n  assert(rotation !== undefined, 3); // The view rotation is not defined\n\n  return getForViewAndSize(center, resolution, rotation, size);\n};\n\n\n/**\n * Get the maximum resolution of the view.\n * @return {number} The maximum resolution of the view.\n * @api\n */\nView.prototype.getMaxResolution = function() {\n  return this.maxResolution_;\n};\n\n\n/**\n * Get the minimum resolution of the view.\n * @return {number} The minimum resolution of the view.\n * @api\n */\nView.prototype.getMinResolution = function() {\n  return this.minResolution_;\n};\n\n\n/**\n * Get the maximum zoom level for the view.\n * @return {number} The maximum zoom level.\n * @api\n */\nView.prototype.getMaxZoom = function() {\n  return /** @type {number} */ (this.getZoomForResolution(this.minResolution_));\n};\n\n\n/**\n * Set a new maximum zoom level for the view.\n * @param {number} zoom The maximum zoom level.\n * @api\n */\nView.prototype.setMaxZoom = function(zoom) {\n  this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n};\n\n\n/**\n * Get the minimum zoom level for the view.\n * @return {number} The minimum zoom level.\n * @api\n */\nView.prototype.getMinZoom = function() {\n  return /** @type {number} */ (this.getZoomForResolution(this.maxResolution_));\n};\n\n\n/**\n * Set a new minimum zoom level for the view.\n * @param {number} zoom The minimum zoom level.\n * @api\n */\nView.prototype.setMinZoom = function(zoom) {\n  this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n};\n\n\n/**\n * Get the view projection.\n * @return {module:ol/proj/Projection} The projection of the view.\n * @api\n */\nView.prototype.getProjection = function() {\n  return this.projection_;\n};\n\n\n/**\n * Get the view resolution.\n * @return {number|undefined} The resolution of the view.\n * @observable\n * @api\n */\nView.prototype.getResolution = function() {\n  return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n};\n\n\n/**\n * Get the resolutions for the view. This returns the array of resolutions\n * passed to the constructor of the View, or undefined if none were given.\n * @return {Array.<number>|undefined} The resolutions of the view.\n * @api\n */\nView.prototype.getResolutions = function() {\n  return this.resolutions_;\n};\n\n\n/**\n * Get the resolution for a provided extent (in map units) and size (in pixels).\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {module:ol/size~Size=} opt_size Box pixel size.\n * @return {number} The resolution at which the provided extent will render at\n *     the given size.\n * @api\n */\nView.prototype.getResolutionForExtent = function(extent, opt_size) {\n  const size = opt_size || this.getSizeFromViewport_();\n  const xResolution = getWidth(extent) / size[0];\n  const yResolution = getHeight(extent) / size[1];\n  return Math.max(xResolution, yResolution);\n};\n\n\n/**\n * Return a function that returns a value between 0 and 1 for a\n * resolution. Exponential scaling is assumed.\n * @param {number=} opt_power Power.\n * @return {function(number): number} Resolution for value function.\n */\nView.prototype.getResolutionForValueFunction = function(opt_power) {\n  const power = opt_power || 2;\n  const maxResolution = this.maxResolution_;\n  const minResolution = this.minResolution_;\n  const max = Math.log(maxResolution / minResolution) / Math.log(power);\n  return (\n    /**\n     * @param {number} value Value.\n     * @return {number} Resolution.\n     */\n    function(value) {\n      const resolution = maxResolution / Math.pow(power, value * max);\n      return resolution;\n    });\n};\n\n\n/**\n * Get the view rotation.\n * @return {number} The rotation of the view in radians.\n * @observable\n * @api\n */\nView.prototype.getRotation = function() {\n  return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n};\n\n\n/**\n * Return a function that returns a resolution for a value between\n * 0 and 1. Exponential scaling is assumed.\n * @param {number=} opt_power Power.\n * @return {function(number): number} Value for resolution function.\n */\nView.prototype.getValueForResolutionFunction = function(opt_power) {\n  const power = opt_power || 2;\n  const maxResolution = this.maxResolution_;\n  const minResolution = this.minResolution_;\n  const max = Math.log(maxResolution / minResolution) / Math.log(power);\n  return (\n    /**\n     * @param {number} resolution Resolution.\n     * @return {number} Value.\n     */\n    function(resolution) {\n      const value = (Math.log(maxResolution / resolution) / Math.log(power)) / max;\n      return value;\n    });\n};\n\n\n/**\n * @return {module:ol/View~State} View state.\n */\nView.prototype.getState = function() {\n  const center = /** @type {module:ol/coordinate~Coordinate} */ (this.getCenter());\n  const projection = this.getProjection();\n  const resolution = /** @type {number} */ (this.getResolution());\n  const rotation = this.getRotation();\n  return (\n    /** @type {module:ol/View~State} */ ({\n      center: center.slice(),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      rotation: rotation,\n      zoom: this.getZoom()\n    })\n  );\n};\n\n\n/**\n * Get the current zoom level.  If you configured your view with a resolutions\n * array (this is rare), this method may return non-integer zoom levels (so\n * the zoom level is not safe to use as an index into a resolutions array).\n * @return {number|undefined} Zoom.\n * @api\n */\nView.prototype.getZoom = function() {\n  let zoom;\n  const resolution = this.getResolution();\n  if (resolution !== undefined) {\n    zoom = this.getZoomForResolution(resolution);\n  }\n  return zoom;\n};\n\n\n/**\n * Get the zoom level for a resolution.\n * @param {number} resolution The resolution.\n * @return {number|undefined} The zoom level for the provided resolution.\n * @api\n */\nView.prototype.getZoomForResolution = function(resolution) {\n  let offset = this.minZoom_ || 0;\n  let max, zoomFactor;\n  if (this.resolutions_) {\n    const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n    offset = nearest;\n    max = this.resolutions_[nearest];\n    if (nearest == this.resolutions_.length - 1) {\n      zoomFactor = 2;\n    } else {\n      zoomFactor = max / this.resolutions_[nearest + 1];\n    }\n  } else {\n    max = this.maxResolution_;\n    zoomFactor = this.zoomFactor_;\n  }\n  return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n};\n\n\n/**\n * Get the resolution for a zoom level.\n * @param {number} zoom Zoom level.\n * @return {number} The view resolution for the provided zoom level.\n * @api\n */\nView.prototype.getResolutionForZoom = function(zoom) {\n  return /** @type {number} */ (this.constrainResolution(\n    this.maxResolution_, zoom - this.minZoom_, 0));\n};\n\n\n/**\n * Fit the given geometry or extent based on the given map size and border.\n * The size is pixel dimensions of the box to fit the extent into.\n * In most cases you will want to use the map size, that is `map.getSize()`.\n * Takes care of the map angle.\n * @param {module:ol/geom/SimpleGeometry|module:ol/extent~Extent} geometryOrExtent The geometry or\n *     extent to fit the view to.\n * @param {module:ol/View~FitOptions=} opt_options Options.\n * @api\n */\nView.prototype.fit = function(geometryOrExtent, opt_options) {\n  const options = opt_options || {};\n  let size = options.size;\n  if (!size) {\n    size = this.getSizeFromViewport_();\n  }\n  /** @type {module:ol/geom/SimpleGeometry} */\n  let geometry;\n  if (!(geometryOrExtent instanceof SimpleGeometry)) {\n    assert(Array.isArray(geometryOrExtent),\n      24); // Invalid extent or geometry provided as `geometry`\n    assert(!isEmpty(geometryOrExtent),\n      25); // Cannot fit empty extent provided as `geometry`\n    geometry = polygonFromExtent(geometryOrExtent);\n  } else if (geometryOrExtent.getType() === GeometryType.CIRCLE) {\n    geometryOrExtent = geometryOrExtent.getExtent();\n    geometry = polygonFromExtent(geometryOrExtent);\n    geometry.rotate(this.getRotation(), getCenter(geometryOrExtent));\n  } else {\n    geometry = geometryOrExtent;\n  }\n\n  const padding = options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n  const constrainResolution = options.constrainResolution !== undefined ?\n    options.constrainResolution : true;\n  const nearest = options.nearest !== undefined ? options.nearest : false;\n  let minResolution;\n  if (options.minResolution !== undefined) {\n    minResolution = options.minResolution;\n  } else if (options.maxZoom !== undefined) {\n    minResolution = this.constrainResolution(\n      this.maxResolution_, options.maxZoom - this.minZoom_, 0);\n  } else {\n    minResolution = 0;\n  }\n  const coords = geometry.getFlatCoordinates();\n\n  // calculate rotated extent\n  const rotation = this.getRotation();\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let minRotX = +Infinity;\n  let minRotY = +Infinity;\n  let maxRotX = -Infinity;\n  let maxRotY = -Infinity;\n  const stride = geometry.getStride();\n  for (let i = 0, ii = coords.length; i < ii; i += stride) {\n    const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n    const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n    minRotX = Math.min(minRotX, rotX);\n    minRotY = Math.min(minRotY, rotY);\n    maxRotX = Math.max(maxRotX, rotX);\n    maxRotY = Math.max(maxRotY, rotY);\n  }\n\n  // calculate resolution\n  let resolution = this.getResolutionForExtent(\n    [minRotX, minRotY, maxRotX, maxRotY],\n    [size[0] - padding[1] - padding[3], size[1] - padding[0] - padding[2]]);\n  resolution = isNaN(resolution) ? minResolution :\n    Math.max(resolution, minResolution);\n  if (constrainResolution) {\n    let constrainedResolution = this.constrainResolution(resolution, 0, 0);\n    if (!nearest && constrainedResolution < resolution) {\n      constrainedResolution = this.constrainResolution(\n        constrainedResolution, -1, 0);\n    }\n    resolution = constrainedResolution;\n  }\n\n  // calculate center\n  sinAngle = -sinAngle; // go back to original rotation\n  let centerRotX = (minRotX + maxRotX) / 2;\n  let centerRotY = (minRotY + maxRotY) / 2;\n  centerRotX += (padding[1] - padding[3]) / 2 * resolution;\n  centerRotY += (padding[0] - padding[2]) / 2 * resolution;\n  const centerX = centerRotX * cosAngle - centerRotY * sinAngle;\n  const centerY = centerRotY * cosAngle + centerRotX * sinAngle;\n  const center = [centerX, centerY];\n  const callback = options.callback ? options.callback : UNDEFINED;\n\n  if (options.duration !== undefined) {\n    this.animate({\n      resolution: resolution,\n      center: center,\n      duration: options.duration,\n      easing: options.easing\n    }, callback);\n  } else {\n    this.setResolution(resolution);\n    this.setCenter(center);\n    setTimeout(callback.bind(undefined, true), 0);\n  }\n};\n\n\n/**\n * Center on coordinate and view position.\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {module:ol/size~Size} size Box pixel size.\n * @param {module:ol~Pixel} position Position on the view to center on.\n * @api\n */\nView.prototype.centerOn = function(coordinate, size, position) {\n  // calculate rotated position\n  const rotation = this.getRotation();\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  const resolution = this.getResolution();\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  this.setCenter([centerX, centerY]);\n};\n\n\n/**\n * @return {boolean} Is defined.\n */\nView.prototype.isDef = function() {\n  return !!this.getCenter() && this.getResolution() !== undefined;\n};\n\n\n/**\n * Rotate the view around a given coordinate.\n * @param {number} rotation New rotation value for the view.\n * @param {module:ol/coordinate~Coordinate=} opt_anchor The rotation center.\n * @api\n */\nView.prototype.rotate = function(rotation, opt_anchor) {\n  if (opt_anchor !== undefined) {\n    const center = this.calculateCenterRotate(rotation, opt_anchor);\n    this.setCenter(center);\n  }\n  this.setRotation(rotation);\n};\n\n\n/**\n * Set the center of the current view.\n * @param {module:ol/coordinate~Coordinate|undefined} center The center of the view.\n * @observable\n * @api\n */\nView.prototype.setCenter = function(center) {\n  this.set(ViewProperty.CENTER, center);\n  if (this.getAnimating()) {\n    this.cancelAnimations();\n  }\n};\n\n\n/**\n * @param {module:ol/ViewHint} hint Hint.\n * @param {number} delta Delta.\n * @return {number} New value.\n */\nView.prototype.setHint = function(hint, delta) {\n  this.hints_[hint] += delta;\n  this.changed();\n  return this.hints_[hint];\n};\n\n\n/**\n * Set the resolution for this view.\n * @param {number|undefined} resolution The resolution of the view.\n * @observable\n * @api\n */\nView.prototype.setResolution = function(resolution) {\n  this.set(ViewProperty.RESOLUTION, resolution);\n  if (this.getAnimating()) {\n    this.cancelAnimations();\n  }\n};\n\n\n/**\n * Set the rotation for this view.\n * @param {number} rotation The rotation of the view in radians.\n * @observable\n * @api\n */\nView.prototype.setRotation = function(rotation) {\n  this.set(ViewProperty.ROTATION, rotation);\n  if (this.getAnimating()) {\n    this.cancelAnimations();\n  }\n};\n\n\n/**\n * Zoom to a specific zoom level.\n * @param {number} zoom Zoom level.\n * @api\n */\nView.prototype.setZoom = function(zoom) {\n  this.setResolution(this.getResolutionForZoom(zoom));\n};\n\n\n/**\n * @param {module:ol/View~ViewOptions} options View options.\n * @return {module:ol/centerconstraint~Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    return createExtent(options.extent);\n  } else {\n    return centerNone;\n  }\n}\n\n\n/**\n * @param {module:ol/View~ViewOptions} options View options.\n * @return {{constraint: module:ol/resolutionconstraint~Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom = options.minZoom !== undefined ?\n    options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom = options.maxZoom !== undefined ?\n    options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor = options.zoomFactor !== undefined ?\n    options.zoomFactor : defaultZoomFactor;\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution = resolutions[maxZoom] !== undefined ?\n      resolutions[maxZoom] : resolutions[resolutions.length - 1];\n    resolutionConstraint = createSnapToResolutions(\n      resolutions);\n  } else {\n    // calculate the default min and max resolution\n    const projection = createProjection(options.projection, 'EPSG:3857');\n    const extent = projection.getExtent();\n    const size = !extent ?\n      // use an extent that can fit the whole world if need be\n      360 * METERS_PER_UNIT[Units.DEGREES] /\n            projection.getMetersPerUnit() :\n      Math.max(getWidth(extent), getHeight(extent));\n\n    const defaultMaxResolution = size / DEFAULT_TILE_SIZE / Math.pow(\n      defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution = defaultMaxResolution / Math.pow(\n      defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom = minZoom + Math.floor(\n      Math.log(maxResolution / minResolution) / Math.log(zoomFactor));\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    resolutionConstraint = createSnapToPower(\n      zoomFactor, maxResolution, maxZoom - minZoom);\n  }\n  return {constraint: resolutionConstraint, maxResolution: maxResolution,\n    minResolution: minResolution, minZoom: minZoom, zoomFactor: zoomFactor};\n}\n\n\n/**\n * @param {module:ol/View~ViewOptions} options View options.\n * @return {module:ol/rotationconstraint~Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation = options.enableRotation !== undefined ?\n    options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    } else if (constrainRotation === false) {\n      return rotationNone;\n    } else if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    } else {\n      return rotationNone;\n    }\n  } else {\n    return disable;\n  }\n}\n\n\n/**\n * Determine if an animation involves no view change.\n * @param {module:ol/View~Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\nexport default View;\n","/**\n * @module ol/resolutionconstraint\n */\nimport {linearFindNearest} from './array.js';\nimport {clamp} from './math.js';\n\n\n/**\n * @typedef {function((number|undefined), number, number): (number|undefined)} Type\n */\n\n\n/**\n * @param {Array.<number>} resolutions Resolutions.\n * @return {module:ol/resolutionconstraint~Type} Zoom function.\n */\nexport function createSnapToResolutions(resolutions) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} delta Delta.\n     * @param {number} direction Direction.\n     * @return {number|undefined} Resolution.\n     */\n    function(resolution, delta, direction) {\n      if (resolution !== undefined) {\n        let z = linearFindNearest(resolutions, resolution, direction);\n        z = clamp(z + delta, 0, resolutions.length - 1);\n        const index = Math.floor(z);\n        if (z != index && index < resolutions.length - 1) {\n          const power = resolutions[index] / resolutions[index + 1];\n          return resolutions[index] / Math.pow(power, z - index);\n        } else {\n          return resolutions[index];\n        }\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number=} opt_maxLevel Maximum level.\n * @return {module:ol/resolutionconstraint~Type} Zoom function.\n */\nexport function createSnapToPower(power, maxResolution, opt_maxLevel) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} delta Delta.\n     * @param {number} direction Direction.\n     * @return {number|undefined} Resolution.\n     */\n    function(resolution, delta, direction) {\n      if (resolution !== undefined) {\n        const offset = -direction / 2 + 0.5;\n        const oldLevel = Math.floor(\n          Math.log(maxResolution / resolution) / Math.log(power) + offset);\n        let newLevel = Math.max(oldLevel + delta, 0);\n        if (opt_maxLevel !== undefined) {\n          newLevel = Math.min(newLevel, opt_maxLevel);\n        }\n        return maxResolution / Math.pow(power, newLevel);\n      } else {\n        return undefined;\n      }\n    });\n}\n","/**\n * @module ol/dom\n */\n\n\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number=} opt_width Canvas width.\n * @param {number=} opt_height Canvas height.\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(opt_width, opt_height) {\n  const canvas = /** @type {HTMLCanvasElement} */ (document.createElement('CANVAS'));\n  if (opt_width) {\n    canvas.width = opt_width;\n  }\n  if (opt_height) {\n    canvas.height = opt_height;\n  }\n  return /** @type {CanvasRenderingContext2D} */ (canvas.getContext('2d'));\n}\n\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!Element} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!Element} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @returns {Node} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  SOURCE: 'source'\n};\n","/**\n * @module ol/layer/Base\n */\nimport {inherits} from '../index.js';\nimport BaseObject from '../Object.js';\nimport LayerProperty from '../layer/Property.js';\nimport {clamp} from '../math.js';\nimport {assign} from '../obj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {module:ol/extent~Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex=0] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @constructor\n * @abstract\n * @extends {module:ol/Object}\n * @param {module:ol/layer/Base~Options} options Layer options.\n * @api\n */\nconst BaseLayer = function(options) {\n\n  BaseObject.call(this);\n\n  /**\n   * @type {Object.<string, *>}\n   */\n  const properties = assign({}, options);\n  properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n  properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n  properties[LayerProperty.Z_INDEX] =\n      options.zIndex !== undefined ? options.zIndex : 0;\n  properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n  properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n\n  this.setProperties(properties);\n\n  /**\n   * @type {module:ol/layer/Layer~State}\n   * @private\n   */\n  this.state_ = /** @type {module:ol/layer/Layer~State} */ ({\n    layer: /** @type {module:ol/layer/Layer} */ (this),\n    managed: true\n  });\n\n  /**\n   * The layer type.\n   * @type {module:ol/LayerType}\n   * @protected;\n   */\n  this.type;\n\n};\n\ninherits(BaseLayer, BaseObject);\n\n\n/**\n * Get the layer type (used when creating a layer renderer).\n * @return {module:ol/LayerType} The layer type.\n */\nBaseLayer.prototype.getType = function() {\n  return this.type;\n};\n\n\n/**\n * @return {module:ol/layer/Layer~State} Layer state.\n */\nBaseLayer.prototype.getLayerState = function() {\n  this.state_.opacity = clamp(this.getOpacity(), 0, 1);\n  this.state_.sourceState = this.getSourceState();\n  this.state_.visible = this.getVisible();\n  this.state_.extent = this.getExtent();\n  this.state_.zIndex = this.getZIndex();\n  this.state_.maxResolution = this.getMaxResolution();\n  this.state_.minResolution = Math.max(this.getMinResolution(), 0);\n\n  return this.state_;\n};\n\n\n/**\n * @abstract\n * @param {Array.<module:ol/layer/Layer>=} opt_array Array of layers (to be\n *     modified in place).\n * @return {Array.<module:ol/layer/Layer>} Array of layers.\n */\nBaseLayer.prototype.getLayersArray = function(opt_array) {};\n\n\n/**\n * @abstract\n * @param {Array.<module:ol/layer/Layer~State>=} opt_states Optional list of layer\n *     states (to be modified in place).\n * @return {Array.<module:ol/layer/Layer~State>} List of layer states.\n */\nBaseLayer.prototype.getLayerStatesArray = function(opt_states) {};\n\n\n/**\n * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n * will be visible regardless of extent.\n * @return {module:ol/extent~Extent|undefined} The layer extent.\n * @observable\n * @api\n */\nBaseLayer.prototype.getExtent = function() {\n  return (\n    /** @type {module:ol/extent~Extent|undefined} */ (this.get(LayerProperty.EXTENT))\n  );\n};\n\n\n/**\n * Return the maximum resolution of the layer.\n * @return {number} The maximum resolution of the layer.\n * @observable\n * @api\n */\nBaseLayer.prototype.getMaxResolution = function() {\n  return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n};\n\n\n/**\n * Return the minimum resolution of the layer.\n * @return {number} The minimum resolution of the layer.\n * @observable\n * @api\n */\nBaseLayer.prototype.getMinResolution = function() {\n  return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n};\n\n\n/**\n * Return the opacity of the layer (between 0 and 1).\n * @return {number} The opacity of the layer.\n * @observable\n * @api\n */\nBaseLayer.prototype.getOpacity = function() {\n  return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n};\n\n\n/**\n * @abstract\n * @return {module:ol/source/State} Source state.\n */\nBaseLayer.prototype.getSourceState = function() {};\n\n\n/**\n * Return the visibility of the layer (`true` or `false`).\n * @return {boolean} The visibility of the layer.\n * @observable\n * @api\n */\nBaseLayer.prototype.getVisible = function() {\n  return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n};\n\n\n/**\n * Return the Z-index of the layer, which is used to order layers before\n * rendering. The default Z-index is 0.\n * @return {number} The Z-index of the layer.\n * @observable\n * @api\n */\nBaseLayer.prototype.getZIndex = function() {\n  return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n};\n\n\n/**\n * Set the extent at which the layer is visible.  If `undefined`, the layer\n * will be visible at all extents.\n * @param {module:ol/extent~Extent|undefined} extent The extent of the layer.\n * @observable\n * @api\n */\nBaseLayer.prototype.setExtent = function(extent) {\n  this.set(LayerProperty.EXTENT, extent);\n};\n\n\n/**\n * Set the maximum resolution at which the layer is visible.\n * @param {number} maxResolution The maximum resolution of the layer.\n * @observable\n * @api\n */\nBaseLayer.prototype.setMaxResolution = function(maxResolution) {\n  this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n};\n\n\n/**\n * Set the minimum resolution at which the layer is visible.\n * @param {number} minResolution The minimum resolution of the layer.\n * @observable\n * @api\n */\nBaseLayer.prototype.setMinResolution = function(minResolution) {\n  this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n};\n\n\n/**\n * Set the opacity of the layer, allowed values range from 0 to 1.\n * @param {number} opacity The opacity of the layer.\n * @observable\n * @api\n */\nBaseLayer.prototype.setOpacity = function(opacity) {\n  this.set(LayerProperty.OPACITY, opacity);\n};\n\n\n/**\n * Set the visibility of the layer (`true` or `false`).\n * @param {boolean} visible The visibility of the layer.\n * @observable\n * @api\n */\nBaseLayer.prototype.setVisible = function(visible) {\n  this.set(LayerProperty.VISIBLE, visible);\n};\n\n\n/**\n * Set Z-index of the layer, which is used to order layers before rendering.\n * The default Z-index is 0.\n * @param {number} zindex The z-index of the layer.\n * @observable\n * @api\n */\nBaseLayer.prototype.setZIndex = function(zindex) {\n  this.set(LayerProperty.Z_INDEX, zindex);\n};\nexport default BaseLayer;\n","/**\n * @module ol/source/State\n */\n\n/**\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n * @enum {string}\n */\nexport default {\n  UNDEFINED: 'undefined',\n  LOADING: 'loading',\n  READY: 'ready',\n  ERROR: 'error'\n};\n","/**\n * @module ol/layer/Group\n */\nimport {getUid, inherits} from '../index.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport {getChangeEventType} from '../Object.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {assert} from '../asserts.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getIntersection} from '../extent.js';\nimport BaseLayer from '../layer/Base.js';\nimport {assign, clear} from '../obj.js';\nimport SourceState from '../source/State.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {module:ol/extent~Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex=0] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {(Array.<module:ol/layer/Base>|module:ol/Collection.<module:ol/layer/Base>)} [layers] Child layers.\n */\n\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers'\n};\n\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @constructor\n * @extends {module:ol/layer/Base}\n * @param {module:ol/layer/Group~Options=} opt_options Layer options.\n * @api\n */\nconst LayerGroup = function(opt_options) {\n\n  const options = opt_options || {};\n  const baseOptions = /** @type {module:ol/layer/Group~Options} */ (assign({}, options));\n  delete baseOptions.layers;\n\n  let layers = options.layers;\n\n  BaseLayer.call(this, baseOptions);\n\n  /**\n   * @private\n   * @type {Array.<module:ol/events~EventsKey>}\n   */\n  this.layersListenerKeys_ = [];\n\n  /**\n   * @private\n   * @type {Object.<string, Array.<module:ol/events~EventsKey>>}\n   */\n  this.listenerKeys_ = {};\n\n  listen(this,\n    getChangeEventType(Property.LAYERS),\n    this.handleLayersChanged_, this);\n\n  if (layers) {\n    if (Array.isArray(layers)) {\n      layers = new Collection(layers.slice(), {unique: true});\n    } else {\n      assert(layers instanceof Collection,\n        43); // Expected `layers` to be an array or a `Collection`\n      layers = layers;\n    }\n  } else {\n    layers = new Collection(undefined, {unique: true});\n  }\n\n  this.setLayers(layers);\n\n};\n\ninherits(LayerGroup, BaseLayer);\n\n\n/**\n * @private\n */\nLayerGroup.prototype.handleLayerChange_ = function() {\n  this.changed();\n};\n\n\n/**\n * @param {module:ol/events/Event} event Event.\n * @private\n */\nLayerGroup.prototype.handleLayersChanged_ = function(event) {\n  this.layersListenerKeys_.forEach(unlistenByKey);\n  this.layersListenerKeys_.length = 0;\n\n  const layers = this.getLayers();\n  this.layersListenerKeys_.push(\n    listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n    listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n  );\n\n  for (const id in this.listenerKeys_) {\n    this.listenerKeys_[id].forEach(unlistenByKey);\n  }\n  clear(this.listenerKeys_);\n\n  const layersArray = layers.getArray();\n  for (let i = 0, ii = layersArray.length; i < ii; i++) {\n    const layer = layersArray[i];\n    this.listenerKeys_[getUid(layer).toString()] = [\n      listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this)\n    ];\n  }\n\n  this.changed();\n};\n\n\n/**\n * @param {module:ol/Collection~CollectionEvent} collectionEvent CollectionEvent.\n * @private\n */\nLayerGroup.prototype.handleLayersAdd_ = function(collectionEvent) {\n  const layer = /** @type {module:ol/layer/Base} */ (collectionEvent.element);\n  const key = getUid(layer).toString();\n  this.listenerKeys_[key] = [\n    listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\n    listen(layer, EventType.CHANGE, this.handleLayerChange_, this)\n  ];\n  this.changed();\n};\n\n\n/**\n * @param {module:ol/Collection~CollectionEvent} collectionEvent CollectionEvent.\n * @private\n */\nLayerGroup.prototype.handleLayersRemove_ = function(collectionEvent) {\n  const layer = /** @type {module:ol/layer/Base} */ (collectionEvent.element);\n  const key = getUid(layer).toString();\n  this.listenerKeys_[key].forEach(unlistenByKey);\n  delete this.listenerKeys_[key];\n  this.changed();\n};\n\n\n/**\n * Returns the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n * in this group.\n * @return {!module:ol/Collection.<module:ol/layer/Base>} Collection of\n *   {@link module:ol/layer/Base layers} that are part of this group.\n * @observable\n * @api\n */\nLayerGroup.prototype.getLayers = function() {\n  return (\n    /** @type {!module:ol/Collection.<module:ol/layer/Base>} */ (this.get(Property.LAYERS))\n  );\n};\n\n\n/**\n * Set the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n * in this group.\n * @param {!module:ol/Collection.<module:ol/layer/Base>} layers Collection of\n *   {@link module:ol/layer/Base layers} that are part of this group.\n * @observable\n * @api\n */\nLayerGroup.prototype.setLayers = function(layers) {\n  this.set(Property.LAYERS, layers);\n};\n\n\n/**\n * @inheritDoc\n */\nLayerGroup.prototype.getLayersArray = function(opt_array) {\n  const array = opt_array !== undefined ? opt_array : [];\n  this.getLayers().forEach(function(layer) {\n    layer.getLayersArray(array);\n  });\n  return array;\n};\n\n\n/**\n * @inheritDoc\n */\nLayerGroup.prototype.getLayerStatesArray = function(opt_states) {\n  const states = opt_states !== undefined ? opt_states : [];\n\n  const pos = states.length;\n\n  this.getLayers().forEach(function(layer) {\n    layer.getLayerStatesArray(states);\n  });\n\n  const ownLayerState = this.getLayerState();\n  for (let i = pos, ii = states.length; i < ii; i++) {\n    const layerState = states[i];\n    layerState.opacity *= ownLayerState.opacity;\n    layerState.visible = layerState.visible && ownLayerState.visible;\n    layerState.maxResolution = Math.min(\n      layerState.maxResolution, ownLayerState.maxResolution);\n    layerState.minResolution = Math.max(\n      layerState.minResolution, ownLayerState.minResolution);\n    if (ownLayerState.extent !== undefined) {\n      if (layerState.extent !== undefined) {\n        layerState.extent = getIntersection(layerState.extent, ownLayerState.extent);\n      } else {\n        layerState.extent = ownLayerState.extent;\n      }\n    }\n  }\n\n  return states;\n};\n\n\n/**\n * @inheritDoc\n */\nLayerGroup.prototype.getSourceState = function() {\n  return SourceState.READY;\n};\n\nexport default LayerGroup;\n","/**\n * @module ol/size\n */\n\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array.<number>} Size\n * @api\n */\n\n\n/**\n * Returns a buffered size.\n * @param {module:ol/size~Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {module:ol/size~Size=} opt_size Optional reusable size array.\n * @return {module:ol/size~Size} The buffered size.\n */\nexport function buffer(size, num, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = size[0] + 2 * num;\n  opt_size[1] = size[1] + 2 * num;\n  return opt_size;\n}\n\n\n/**\n * Determines if a size has a positive area.\n * @param {module:ol/size~Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {module:ol/size~Size} size Size.\n * @param {number} ratio Ratio.\n * @param {module:ol/size~Size=} opt_size Optional reusable size array.\n * @return {module:ol/size~Size} The scaled size.\n */\nexport function scale(size, ratio, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = (size[0] * ratio + 0.5) | 0;\n  opt_size[1] = (size[1] * ratio + 0.5) | 0;\n  return opt_size;\n}\n\n\n/**\n * Returns an `module:ol/size~Size` array for the passed in number (meaning: square) or\n * `module:ol/size~Size` array.\n * (meaning: non-square),\n * @param {number|module:ol/size~Size} size Width and height.\n * @param {module:ol/size~Size=} opt_size Optional reusable size array.\n * @return {module:ol/size~Size} Size.\n * @api\n */\nexport function toSize(size, opt_size) {\n  if (Array.isArray(size)) {\n    return size;\n  } else {\n    if (opt_size === undefined) {\n      opt_size = [size, size];\n    } else {\n      opt_size[0] = opt_size[1] = /** @type {number} */ (size);\n    }\n    return opt_size;\n  }\n}\n","/**\n * @module ol/PluggableMap\n */\nimport {getUid, inherits} from './index.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport BaseObject, {getChangeEventType} from './Object.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport TileQueue from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {assert} from './asserts.js';\nimport {removeNode} from './dom.js';\nimport {listen, unlistenByKey, unlisten} from './events.js';\nimport {stopPropagation} from './events/Event.js';\nimport EventType from './events/EventType.js';\nimport {createEmpty, clone, createOrUpdateEmpty, equals, getForViewAndSize, isEmpty} from './extent.js';\nimport {TRUE} from './functions.js';\nimport {DEVICE_PIXEL_RATIO, TOUCH} from './has.js';\nimport LayerGroup from './layer/Group.js';\nimport {hasArea} from './size.js';\nimport {DROP} from './structs/PriorityQueue.js';\nimport {create as createTransform, apply as applyTransform} from './transform.js';\n\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {module:ol/View~State} viewState The state of the current view.\n * @property {boolean} animate\n * @property {module:ol/transform~Transform} coordinateToPixelTransform\n * @property {null|module:ol/extent~Extent} extent\n * @property {module:ol/coordinate~Coordinate} focus\n * @property {number} index\n * @property {Object.<number, module:ol/layer/Layer~State>} layerStates\n * @property {Array.<module:ol/layer/Layer~State>} layerStatesArray\n * @property {module:ol/transform~Transform} pixelToCoordinateTransform\n * @property {Array.<module:ol/PluggableMap~PostRenderFunction>} postRenderFunctions\n * @property {module:ol/size~Size} size\n * @property {!Object.<string, boolean>} skippedFeatureUids\n * @property {module:ol/TileQueue} tileQueue\n * @property {Object.<string, Object.<string, module:ol/TileRange>>} usedTiles\n * @property {Array.<number>} viewHints\n * @property {!Object.<string, Object.<string, boolean>>} wantedTiles\n */\n\n\n/**\n * @typedef {function(module:ol/PluggableMap, ?module:ol/PluggableMap~FrameState): boolean} PostRenderFunction\n */\n\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {((function(module:ol/layer/Layer): boolean)|undefined)} layerFilter Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in pixels. Pixels\n * inside the radius around the given position will be checked for features. This only\n * works for the canvas renderer and not for WebGL.\n */\n\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {module:ol/Collection.<module:ol/control/Control>} [controls]\n * @property {module:ol/Collection.<module:ol/interaction/Interaction>} [interactions]\n * @property {Element|Document} keyboardEventTarget\n * @property {module:ol/Collection.<module:ol/Overlay>} overlays\n * @property {Object.<string, *>} values\n */\n\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {module:ol/Collection.<module:ol/control/Control>|Array.<module:ol/control/Control>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control/util~defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {module:ol/Collection.<module:ol/interaction/Interaction>|Array.<module:ol/interaction/Interaction>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction~defaults} is used.\n * @property {Element|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array.<module:ol/layer/Base>|module:ol/Collection.<module:ol/layer/Base>} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {boolean} [loadTilesWhileAnimating=false] When set to `true`, tiles\n * will be loaded during animations. This may improve the user experience, but\n * can also make animations stutter on devices with slow memory.\n * @property {boolean} [loadTilesWhileInteracting=false] When set to `true`,\n * tiles will be loaded while interacting with the map. This may improve the\n * user experience, but can also make map panning and zooming choppy on devices\n * with slow memory.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {module:ol/Collection.<module:ol/Overlay>|Array.<module:ol/Overlay>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {Element|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered.\n * @property {module:ol/View} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n\n/**\n * @constructor\n * @extends {module:ol/Object}\n * @param {module:ol/PluggableMap~MapOptions} options Map options.\n * @fires module:ol/MapBrowserEvent~MapBrowserEvent\n * @fires module:ol/MapEvent~MapEvent\n * @fires module:ol/render/Event~RenderEvent#postcompose\n * @fires module:ol/render/Event~RenderEvent#precompose\n * @api\n */\nconst PluggableMap = function(options) {\n\n  BaseObject.call(this);\n\n  const optionsInternal = createOptionsInternal(options);\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.maxTilesLoading_ = options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.loadTilesWhileAnimating_ =\n      options.loadTilesWhileAnimating !== undefined ?\n        options.loadTilesWhileAnimating : false;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.loadTilesWhileInteracting_ =\n      options.loadTilesWhileInteracting !== undefined ?\n        options.loadTilesWhileInteracting : false;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.pixelRatio_ = options.pixelRatio !== undefined ?\n    options.pixelRatio : DEVICE_PIXEL_RATIO;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.animationDelayKey_;\n\n  /**\n   * @private\n   */\n  this.animationDelay_ = function() {\n    this.animationDelayKey_ = undefined;\n    this.renderFrame_.call(this, Date.now());\n  }.bind(this);\n\n  /**\n   * @private\n   * @type {module:ol/transform~Transform}\n   */\n  this.coordinateToPixelTransform_ = createTransform();\n\n  /**\n   * @private\n   * @type {module:ol/transform~Transform}\n   */\n  this.pixelToCoordinateTransform_ = createTransform();\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.frameIndex_ = 0;\n\n  /**\n   * @private\n   * @type {?module:ol/PluggableMap~FrameState}\n   */\n  this.frameState_ = null;\n\n  /**\n   * The extent at the previous 'moveend' event.\n   * @private\n   * @type {module:ol/extent~Extent}\n   */\n  this.previousExtent_ = null;\n\n  /**\n   * @private\n   * @type {?module:ol/events~EventsKey}\n   */\n  this.viewPropertyListenerKey_ = null;\n\n  /**\n   * @private\n   * @type {?module:ol/events~EventsKey}\n   */\n  this.viewChangeListenerKey_ = null;\n\n  /**\n   * @private\n   * @type {Array.<module:ol/events~EventsKey>}\n   */\n  this.layerGroupPropertyListenerKeys_ = null;\n\n  /**\n   * @private\n   * @type {Element}\n   */\n  this.viewport_ = document.createElement('DIV');\n  this.viewport_.className = 'ol-viewport' + (TOUCH ? ' ol-touch' : '');\n  this.viewport_.style.position = 'relative';\n  this.viewport_.style.overflow = 'hidden';\n  this.viewport_.style.width = '100%';\n  this.viewport_.style.height = '100%';\n  // prevent page zoom on IE >= 10 browsers\n  this.viewport_.style.msTouchAction = 'none';\n  this.viewport_.style.touchAction = 'none';\n\n  /**\n   * @private\n   * @type {!Element}\n   */\n  this.overlayContainer_ = document.createElement('DIV');\n  this.overlayContainer_.className = 'ol-overlaycontainer';\n  this.viewport_.appendChild(this.overlayContainer_);\n\n  /**\n   * @private\n   * @type {!Element}\n   */\n  this.overlayContainerStopEvent_ = document.createElement('DIV');\n  this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n  const overlayEvents = [\n    EventType.CLICK,\n    EventType.DBLCLICK,\n    EventType.MOUSEDOWN,\n    EventType.TOUCHSTART,\n    EventType.MSPOINTERDOWN,\n    MapBrowserEventType.POINTERDOWN,\n    EventType.MOUSEWHEEL,\n    EventType.WHEEL\n  ];\n  for (let i = 0, ii = overlayEvents.length; i < ii; ++i) {\n    listen(this.overlayContainerStopEvent_, overlayEvents[i], stopPropagation);\n  }\n  this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n  /**\n   * @private\n   * @type {module:ol/MapBrowserEventHandler}\n   */\n  this.mapBrowserEventHandler_ = new MapBrowserEventHandler(this, options.moveTolerance);\n  for (const key in MapBrowserEventType) {\n    listen(this.mapBrowserEventHandler_, MapBrowserEventType[key],\n      this.handleMapBrowserEvent, this);\n  }\n\n  /**\n   * @private\n   * @type {Element|Document}\n   */\n  this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n  /**\n   * @private\n   * @type {Array.<module:ol/events~EventsKey>}\n   */\n  this.keyHandlerKeys_ = null;\n\n  listen(this.viewport_, EventType.CONTEXTMENU, this.handleBrowserEvent, this);\n  listen(this.viewport_, EventType.WHEEL, this.handleBrowserEvent, this);\n  listen(this.viewport_, EventType.MOUSEWHEEL, this.handleBrowserEvent, this);\n\n  /**\n   * @type {module:ol/Collection.<module:ol/control/Control>}\n   * @protected\n   */\n  this.controls = optionsInternal.controls || new Collection();\n\n  /**\n   * @type {module:ol/Collection.<module:ol/interaction/Interaction>}\n   * @protected\n   */\n  this.interactions = optionsInternal.interactions || new Collection();\n\n  /**\n   * @type {module:ol/Collection.<module:ol/Overlay>}\n   * @private\n   */\n  this.overlays_ = optionsInternal.overlays;\n\n  /**\n   * A lookup of overlays by id.\n   * @private\n   * @type {Object.<string, module:ol/Overlay>}\n   */\n  this.overlayIdIndex_ = {};\n\n  /**\n   * @type {module:ol/renderer/Map}\n   * @private\n   */\n  this.renderer_ = this.createRenderer(this.viewport_, this);\n\n  /**\n   * @type {function(Event)|undefined}\n   * @private\n   */\n  this.handleResize_;\n\n  /**\n   * @private\n   * @type {module:ol/coordinate~Coordinate}\n   */\n  this.focus_ = null;\n\n  /**\n   * @private\n   * @type {!Array.<module:ol/PluggableMap~PostRenderFunction>}\n   */\n  this.postRenderFunctions_ = [];\n\n  /**\n   * @private\n   * @type {module:ol/TileQueue}\n   */\n  this.tileQueue_ = new TileQueue(\n    this.getTilePriority.bind(this),\n    this.handleTileChange_.bind(this));\n\n  /**\n   * Uids of features to skip at rendering time.\n   * @type {Object.<string, boolean>}\n   * @private\n   */\n  this.skippedFeatureUids_ = {};\n\n  listen(\n    this, getChangeEventType(MapProperty.LAYERGROUP),\n    this.handleLayerGroupChanged_, this);\n  listen(this, getChangeEventType(MapProperty.VIEW),\n    this.handleViewChanged_, this);\n  listen(this, getChangeEventType(MapProperty.SIZE),\n    this.handleSizeChanged_, this);\n  listen(this, getChangeEventType(MapProperty.TARGET),\n    this.handleTargetChanged_, this);\n\n  // setProperties will trigger the rendering of the map if the map\n  // is \"defined\" already.\n  this.setProperties(optionsInternal.values);\n\n  this.controls.forEach(\n    /**\n     * @param {module:ol/control/Control} control Control.\n     * @this {module:ol/PluggableMap}\n     */\n    (function(control) {\n      control.setMap(this);\n    }).bind(this));\n\n  listen(this.controls, CollectionEventType.ADD,\n    /**\n     * @param {module:ol/Collection~CollectionEvent} event CollectionEvent.\n     */\n    function(event) {\n      event.element.setMap(this);\n    }, this);\n\n  listen(this.controls, CollectionEventType.REMOVE,\n    /**\n     * @param {module:ol/Collection~CollectionEvent} event CollectionEvent.\n     */\n    function(event) {\n      event.element.setMap(null);\n    }, this);\n\n  this.interactions.forEach(\n    /**\n     * @param {module:ol/interaction/Interaction} interaction Interaction.\n     * @this {module:ol/PluggableMap}\n     */\n    (function(interaction) {\n      interaction.setMap(this);\n    }).bind(this));\n\n  listen(this.interactions, CollectionEventType.ADD,\n    /**\n     * @param {module:ol/Collection~CollectionEvent} event CollectionEvent.\n     */\n    function(event) {\n      event.element.setMap(this);\n    }, this);\n\n  listen(this.interactions, CollectionEventType.REMOVE,\n    /**\n     * @param {module:ol/Collection~CollectionEvent} event CollectionEvent.\n     */\n    function(event) {\n      event.element.setMap(null);\n    }, this);\n\n  this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n\n  listen(this.overlays_, CollectionEventType.ADD,\n    /**\n     * @param {module:ol/Collection~CollectionEvent} event CollectionEvent.\n     */\n    function(event) {\n      this.addOverlayInternal_(/** @type {module:ol/Overlay} */ (event.element));\n    }, this);\n\n  listen(this.overlays_, CollectionEventType.REMOVE,\n    /**\n     * @param {module:ol/Collection~CollectionEvent} event CollectionEvent.\n     */\n    function(event) {\n      const overlay = /** @type {module:ol/Overlay} */ (event.element);\n      const id = overlay.getId();\n      if (id !== undefined) {\n        delete this.overlayIdIndex_[id.toString()];\n      }\n      event.element.setMap(null);\n    }, this);\n\n};\n\ninherits(PluggableMap, BaseObject);\n\n\nPluggableMap.prototype.createRenderer = function() {\n  throw new Error('Use a map type that has a createRenderer method');\n};\n\n\n/**\n * Add the given control to the map.\n * @param {module:ol/control/Control} control Control.\n * @api\n */\nPluggableMap.prototype.addControl = function(control) {\n  this.getControls().push(control);\n};\n\n\n/**\n * Add the given interaction to the map.\n * @param {module:ol/interaction/Interaction} interaction Interaction to add.\n * @api\n */\nPluggableMap.prototype.addInteraction = function(interaction) {\n  this.getInteractions().push(interaction);\n};\n\n\n/**\n * Adds the given layer to the top of this map. If you want to add a layer\n * elsewhere in the stack, use `getLayers()` and the methods available on\n * {@link module:ol/Collection~Collection}.\n * @param {module:ol/layer/Base} layer Layer.\n * @api\n */\nPluggableMap.prototype.addLayer = function(layer) {\n  const layers = this.getLayerGroup().getLayers();\n  layers.push(layer);\n};\n\n\n/**\n * Add the given overlay to the map.\n * @param {module:ol/Overlay} overlay Overlay.\n * @api\n */\nPluggableMap.prototype.addOverlay = function(overlay) {\n  this.getOverlays().push(overlay);\n};\n\n\n/**\n * This deals with map's overlay collection changes.\n * @param {module:ol/Overlay} overlay Overlay.\n * @private\n */\nPluggableMap.prototype.addOverlayInternal_ = function(overlay) {\n  const id = overlay.getId();\n  if (id !== undefined) {\n    this.overlayIdIndex_[id.toString()] = overlay;\n  }\n  overlay.setMap(this);\n};\n\n\n/**\n *\n * @inheritDoc\n */\nPluggableMap.prototype.disposeInternal = function() {\n  this.mapBrowserEventHandler_.dispose();\n  unlisten(this.viewport_, EventType.CONTEXTMENU, this.handleBrowserEvent, this);\n  unlisten(this.viewport_, EventType.WHEEL, this.handleBrowserEvent, this);\n  unlisten(this.viewport_, EventType.MOUSEWHEEL, this.handleBrowserEvent, this);\n  if (this.handleResize_ !== undefined) {\n    removeEventListener(EventType.RESIZE, this.handleResize_, false);\n    this.handleResize_ = undefined;\n  }\n  if (this.animationDelayKey_) {\n    cancelAnimationFrame(this.animationDelayKey_);\n    this.animationDelayKey_ = undefined;\n  }\n  this.setTarget(null);\n  BaseObject.prototype.disposeInternal.call(this);\n};\n\n\n/**\n * Detect features that intersect a pixel on the viewport, and execute a\n * callback with each intersecting feature. Layers included in the detection can\n * be configured through the `layerFilter` option in `opt_options`.\n * @param {module:ol~Pixel} pixel Pixel.\n * @param {function(this: S, (module:ol/Feature|module:ol/render/Feature),\n *     module:ol/layer/Layer): T} callback Feature callback. The callback will be\n *     called with two arguments. The first argument is one\n *     {@link module:ol/Feature feature} or\n *     {@link module:ol/render/Feature render feature} at the pixel, the second is\n *     the {@link module:ol/layer/Layer layer} of the feature and will be null for\n *     unmanaged layers. To stop detection, callback functions can return a\n *     truthy value.\n * @param {module:ol/PluggableMap~AtPixelOptions=} opt_options Optional options.\n * @return {T|undefined} Callback result, i.e. the return value of last\n * callback execution, or the first truthy callback return value.\n * @template S,T\n * @api\n */\nPluggableMap.prototype.forEachFeatureAtPixel = function(pixel, callback, opt_options) {\n  if (!this.frameState_) {\n    return;\n  }\n  const coordinate = this.getCoordinateFromPixel(pixel);\n  opt_options = opt_options !== undefined ? opt_options : {};\n  const hitTolerance = opt_options.hitTolerance !== undefined ?\n    opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n  const layerFilter = opt_options.layerFilter !== undefined ?\n    opt_options.layerFilter : TRUE;\n  return this.renderer_.forEachFeatureAtCoordinate(\n    coordinate, this.frameState_, hitTolerance, callback, null,\n    layerFilter, null);\n};\n\n\n/**\n * Get all features that intersect a pixel on the viewport.\n * @param {module:ol~Pixel} pixel Pixel.\n * @param {module:ol/PluggableMap~AtPixelOptions=} opt_options Optional options.\n * @return {Array.<module:ol/Feature|module:ol/render/Feature>} The detected features or\n * `null` if none were found.\n * @api\n */\nPluggableMap.prototype.getFeaturesAtPixel = function(pixel, opt_options) {\n  let features = null;\n  this.forEachFeatureAtPixel(pixel, function(feature) {\n    if (!features) {\n      features = [];\n    }\n    features.push(feature);\n  }, opt_options);\n  return features;\n};\n\n/**\n * Detect layers that have a color value at a pixel on the viewport, and\n * execute a callback with each matching layer. Layers included in the\n * detection can be configured through `opt_layerFilter`.\n * @param {module:ol~Pixel} pixel Pixel.\n * @param {function(this: S, module:ol/layer/Layer, (Uint8ClampedArray|Uint8Array)): T} callback\n *     Layer callback. This callback will receive two arguments: first is the\n *     {@link module:ol/layer/Layer layer}, second argument is an array representing\n *     [R, G, B, A] pixel values (0 - 255) and will be `null` for layer types\n *     that do not currently support this argument. To stop detection, callback\n *     functions can return a truthy value.\n * @param {S=} opt_this Value to use as `this` when executing `callback`.\n * @param {(function(this: U, module:ol/layer/Layer): boolean)=} opt_layerFilter Layer\n *     filter function. The filter function will receive one argument, the\n *     {@link module:ol/layer/Layer layer-candidate} and it should return a boolean\n *     value. Only layers which are visible and for which this function returns\n *     `true` will be tested for features. By default, all visible layers will\n *     be tested.\n * @param {U=} opt_this2 Value to use as `this` when executing `layerFilter`.\n * @return {T|undefined} Callback result, i.e. the return value of last\n * callback execution, or the first truthy callback return value.\n * @template S,T,U\n * @api\n */\nPluggableMap.prototype.forEachLayerAtPixel = function(pixel, callback, opt_this, opt_layerFilter, opt_this2) {\n  if (!this.frameState_) {\n    return;\n  }\n  const thisArg = opt_this !== undefined ? opt_this : null;\n  const layerFilter = opt_layerFilter !== undefined ? opt_layerFilter : TRUE;\n  const thisArg2 = opt_this2 !== undefined ? opt_this2 : null;\n  return this.renderer_.forEachLayerAtPixel(\n    pixel, this.frameState_, callback, thisArg,\n    layerFilter, thisArg2);\n};\n\n\n/**\n * Detect if features intersect a pixel on the viewport. Layers included in the\n * detection can be configured through `opt_layerFilter`.\n * @param {module:ol~Pixel} pixel Pixel.\n * @param {module:ol/PluggableMap~AtPixelOptions=} opt_options Optional options.\n * @return {boolean} Is there a feature at the given pixel?\n * @template U\n * @api\n */\nPluggableMap.prototype.hasFeatureAtPixel = function(pixel, opt_options) {\n  if (!this.frameState_) {\n    return false;\n  }\n  const coordinate = this.getCoordinateFromPixel(pixel);\n  opt_options = opt_options !== undefined ? opt_options : {};\n  const layerFilter = opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n  const hitTolerance = opt_options.hitTolerance !== undefined ?\n    opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n  return this.renderer_.hasFeatureAtCoordinate(\n    coordinate, this.frameState_, hitTolerance, layerFilter, null);\n};\n\n\n/**\n * Returns the coordinate in view projection for a browser event.\n * @param {Event} event Event.\n * @return {module:ol/coordinate~Coordinate} Coordinate.\n * @api\n */\nPluggableMap.prototype.getEventCoordinate = function(event) {\n  return this.getCoordinateFromPixel(this.getEventPixel(event));\n};\n\n\n/**\n * Returns the map pixel position for a browser event relative to the viewport.\n * @param {Event} event Event.\n * @return {module:ol~Pixel} Pixel.\n * @api\n */\nPluggableMap.prototype.getEventPixel = function(event) {\n  const viewportPosition = this.viewport_.getBoundingClientRect();\n  const eventPosition = event.changedTouches ? event.changedTouches[0] : event;\n  return [\n    eventPosition.clientX - viewportPosition.left,\n    eventPosition.clientY - viewportPosition.top\n  ];\n};\n\n\n/**\n * Get the target in which this map is rendered.\n * Note that this returns what is entered as an option or in setTarget:\n * if that was an element, it returns an element; if a string, it returns that.\n * @return {Element|string|undefined} The Element or id of the Element that the\n *     map is rendered in.\n * @observable\n * @api\n */\nPluggableMap.prototype.getTarget = function() {\n  return /** @type {Element|string|undefined} */ (this.get(MapProperty.TARGET));\n};\n\n\n/**\n * Get the DOM element into which this map is rendered. In contrast to\n * `getTarget` this method always return an `Element`, or `null` if the\n * map has no target.\n * @return {Element} The element that the map is rendered in.\n * @api\n */\nPluggableMap.prototype.getTargetElement = function() {\n  const target = this.getTarget();\n  if (target !== undefined) {\n    return typeof target === 'string' ? document.getElementById(target) : target;\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * Get the coordinate for a given pixel.  This returns a coordinate in the\n * map view projection.\n * @param {module:ol~Pixel} pixel Pixel position in the map viewport.\n * @return {module:ol/coordinate~Coordinate} The coordinate for the pixel position.\n * @api\n */\nPluggableMap.prototype.getCoordinateFromPixel = function(pixel) {\n  const frameState = this.frameState_;\n  if (!frameState) {\n    return null;\n  } else {\n    return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n  }\n};\n\n\n/**\n * Get the map controls. Modifying this collection changes the controls\n * associated with the map.\n * @return {module:ol/Collection.<module:ol/control/Control>} Controls.\n * @api\n */\nPluggableMap.prototype.getControls = function() {\n  return this.controls;\n};\n\n\n/**\n * Get the map overlays. Modifying this collection changes the overlays\n * associated with the map.\n * @return {module:ol/Collection.<module:ol/Overlay>} Overlays.\n * @api\n */\nPluggableMap.prototype.getOverlays = function() {\n  return this.overlays_;\n};\n\n\n/**\n * Get an overlay by its identifier (the value returned by overlay.getId()).\n * Note that the index treats string and numeric identifiers as the same. So\n * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n * @param {string|number} id Overlay identifier.\n * @return {module:ol/Overlay} Overlay.\n * @api\n */\nPluggableMap.prototype.getOverlayById = function(id) {\n  const overlay = this.overlayIdIndex_[id.toString()];\n  return overlay !== undefined ? overlay : null;\n};\n\n\n/**\n * Get the map interactions. Modifying this collection changes the interactions\n * associated with the map.\n *\n * Interactions are used for e.g. pan, zoom and rotate.\n * @return {module:ol/Collection.<module:ol/interaction/Interaction>} Interactions.\n * @api\n */\nPluggableMap.prototype.getInteractions = function() {\n  return this.interactions;\n};\n\n\n/**\n * Get the layergroup associated with this map.\n * @return {module:ol/layer/Group} A layer group containing the layers in this map.\n * @observable\n * @api\n */\nPluggableMap.prototype.getLayerGroup = function() {\n  return (\n    /** @type {module:ol/layer/Group} */ (this.get(MapProperty.LAYERGROUP))\n  );\n};\n\n\n/**\n * Get the collection of layers associated with this map.\n * @return {!module:ol/Collection.<module:ol/layer/Base>} Layers.\n * @api\n */\nPluggableMap.prototype.getLayers = function() {\n  const layers = this.getLayerGroup().getLayers();\n  return layers;\n};\n\n\n/**\n * Get the pixel for a coordinate.  This takes a coordinate in the map view\n * projection and returns the corresponding pixel.\n * @param {module:ol/coordinate~Coordinate} coordinate A map coordinate.\n * @return {module:ol~Pixel} A pixel position in the map viewport.\n * @api\n */\nPluggableMap.prototype.getPixelFromCoordinate = function(coordinate) {\n  const frameState = this.frameState_;\n  if (!frameState) {\n    return null;\n  } else {\n    return applyTransform(frameState.coordinateToPixelTransform, coordinate.slice(0, 2));\n  }\n};\n\n\n/**\n * Get the map renderer.\n * @return {module:ol/renderer/Map} Renderer\n */\nPluggableMap.prototype.getRenderer = function() {\n  return this.renderer_;\n};\n\n\n/**\n * Get the size of this map.\n * @return {module:ol/size~Size|undefined} The size in pixels of the map in the DOM.\n * @observable\n * @api\n */\nPluggableMap.prototype.getSize = function() {\n  return (\n    /** @type {module:ol/size~Size|undefined} */ (this.get(MapProperty.SIZE))\n  );\n};\n\n\n/**\n * Get the view associated with this map. A view manages properties such as\n * center and resolution.\n * @return {module:ol/View} The view that controls this map.\n * @observable\n * @api\n */\nPluggableMap.prototype.getView = function() {\n  return (\n    /** @type {module:ol/View} */ (this.get(MapProperty.VIEW))\n  );\n};\n\n\n/**\n * Get the element that serves as the map viewport.\n * @return {Element} Viewport.\n * @api\n */\nPluggableMap.prototype.getViewport = function() {\n  return this.viewport_;\n};\n\n\n/**\n * Get the element that serves as the container for overlays.  Elements added to\n * this container will let mousedown and touchstart events through to the map,\n * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n * events.\n * @return {!Element} The map's overlay container.\n */\nPluggableMap.prototype.getOverlayContainer = function() {\n  return this.overlayContainer_;\n};\n\n\n/**\n * Get the element that serves as a container for overlays that don't allow\n * event propagation. Elements added to this container won't let mousedown and\n * touchstart events through to the map, so clicks and gestures on an overlay\n * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n * @return {!Element} The map's overlay container that stops events.\n */\nPluggableMap.prototype.getOverlayContainerStopEvent = function() {\n  return this.overlayContainerStopEvent_;\n};\n\n\n/**\n * @param {module:ol/Tile} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {module:ol/coordinate~Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nPluggableMap.prototype.getTilePriority = function(tile, tileSourceKey, tileCenter, tileResolution) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  const frameState = this.frameState_;\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels\n  // between the center of the tile and the focus.  The factor of 65536 means\n  // that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const deltaX = tileCenter[0] - frameState.focus[0];\n  const deltaY = tileCenter[1] - frameState.focus[1];\n  return 65536 * Math.log(tileResolution) +\n      Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution;\n};\n\n\n/**\n * @param {Event} browserEvent Browser event.\n * @param {string=} opt_type Type.\n */\nPluggableMap.prototype.handleBrowserEvent = function(browserEvent, opt_type) {\n  const type = opt_type || browserEvent.type;\n  const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n  this.handleMapBrowserEvent(mapBrowserEvent);\n};\n\n\n/**\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent The event to handle.\n */\nPluggableMap.prototype.handleMapBrowserEvent = function(mapBrowserEvent) {\n  if (!this.frameState_) {\n    // With no view defined, we cannot translate pixels into geographical\n    // coordinates so interactions cannot be used.\n    return;\n  }\n  this.focus_ = mapBrowserEvent.coordinate;\n  mapBrowserEvent.frameState = this.frameState_;\n  const interactionsArray = this.getInteractions().getArray();\n  if (this.dispatchEvent(mapBrowserEvent) !== false) {\n    for (let i = interactionsArray.length - 1; i >= 0; i--) {\n      const interaction = interactionsArray[i];\n      if (!interaction.getActive()) {\n        continue;\n      }\n      const cont = interaction.handleEvent(mapBrowserEvent);\n      if (!cont) {\n        break;\n      }\n    }\n  }\n};\n\n\n/**\n * @protected\n */\nPluggableMap.prototype.handlePostRender = function() {\n\n  const frameState = this.frameState_;\n\n  // Manage the tile queue\n  // Image loads are expensive and a limited resource, so try to use them\n  // efficiently:\n  // * When the view is static we allow a large number of parallel tile loads\n  //   to complete the frame as quickly as possible.\n  // * When animating or interacting, image loads can cause janks, so we reduce\n  //   the maximum number of loads per frame and limit the number of parallel\n  //   tile loads to remain reactive to view changes and to reduce the chance of\n  //   loading tiles that will quickly disappear from view.\n  const tileQueue = this.tileQueue_;\n  if (!tileQueue.isEmpty()) {\n    let maxTotalLoading = this.maxTilesLoading_;\n    let maxNewLoads = maxTotalLoading;\n    if (frameState) {\n      const hints = frameState.viewHints;\n      if (hints[ViewHint.ANIMATING]) {\n        maxTotalLoading = this.loadTilesWhileAnimating_ ? 8 : 0;\n        maxNewLoads = 2;\n      }\n      if (hints[ViewHint.INTERACTING]) {\n        maxTotalLoading = this.loadTilesWhileInteracting_ ? 8 : 0;\n        maxNewLoads = 2;\n      }\n    }\n    if (tileQueue.getTilesLoading() < maxTotalLoading) {\n      tileQueue.reprioritize(); // FIXME only call if view has changed\n      tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n    }\n  }\n\n  const postRenderFunctions = this.postRenderFunctions_;\n  for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n    postRenderFunctions[i](this, frameState);\n  }\n  postRenderFunctions.length = 0;\n};\n\n\n/**\n * @private\n */\nPluggableMap.prototype.handleSizeChanged_ = function() {\n  this.render();\n};\n\n\n/**\n * @private\n */\nPluggableMap.prototype.handleTargetChanged_ = function() {\n  // target may be undefined, null, a string or an Element.\n  // If it's a string we convert it to an Element before proceeding.\n  // If it's not now an Element we remove the viewport from the DOM.\n  // If it's an Element we append the viewport element to it.\n\n  let targetElement;\n  if (this.getTarget()) {\n    targetElement = this.getTargetElement();\n  }\n\n  if (this.keyHandlerKeys_) {\n    for (let i = 0, ii = this.keyHandlerKeys_.length; i < ii; ++i) {\n      unlistenByKey(this.keyHandlerKeys_[i]);\n    }\n    this.keyHandlerKeys_ = null;\n  }\n\n  if (!targetElement) {\n    this.renderer_.removeLayerRenderers();\n    removeNode(this.viewport_);\n    if (this.handleResize_ !== undefined) {\n      removeEventListener(EventType.RESIZE, this.handleResize_, false);\n      this.handleResize_ = undefined;\n    }\n  } else {\n    targetElement.appendChild(this.viewport_);\n\n    const keyboardEventTarget = !this.keyboardEventTarget_ ?\n      targetElement : this.keyboardEventTarget_;\n    this.keyHandlerKeys_ = [\n      listen(keyboardEventTarget, EventType.KEYDOWN, this.handleBrowserEvent, this),\n      listen(keyboardEventTarget, EventType.KEYPRESS, this.handleBrowserEvent, this)\n    ];\n\n    if (!this.handleResize_) {\n      this.handleResize_ = this.updateSize.bind(this);\n      addEventListener(EventType.RESIZE, this.handleResize_, false);\n    }\n  }\n\n  this.updateSize();\n  // updateSize calls setSize, so no need to call this.render\n  // ourselves here.\n};\n\n\n/**\n * @private\n */\nPluggableMap.prototype.handleTileChange_ = function() {\n  this.render();\n};\n\n\n/**\n * @private\n */\nPluggableMap.prototype.handleViewPropertyChanged_ = function() {\n  this.render();\n};\n\n\n/**\n * @private\n */\nPluggableMap.prototype.handleViewChanged_ = function() {\n  if (this.viewPropertyListenerKey_) {\n    unlistenByKey(this.viewPropertyListenerKey_);\n    this.viewPropertyListenerKey_ = null;\n  }\n  if (this.viewChangeListenerKey_) {\n    unlistenByKey(this.viewChangeListenerKey_);\n    this.viewChangeListenerKey_ = null;\n  }\n  const view = this.getView();\n  if (view) {\n    this.viewport_.setAttribute('data-view', getUid(view));\n    this.viewPropertyListenerKey_ = listen(\n      view, ObjectEventType.PROPERTYCHANGE,\n      this.handleViewPropertyChanged_, this);\n    this.viewChangeListenerKey_ = listen(\n      view, EventType.CHANGE,\n      this.handleViewPropertyChanged_, this);\n  }\n  this.render();\n};\n\n\n/**\n * @private\n */\nPluggableMap.prototype.handleLayerGroupChanged_ = function() {\n  if (this.layerGroupPropertyListenerKeys_) {\n    this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n    this.layerGroupPropertyListenerKeys_ = null;\n  }\n  const layerGroup = this.getLayerGroup();\n  if (layerGroup) {\n    this.layerGroupPropertyListenerKeys_ = [\n      listen(\n        layerGroup, ObjectEventType.PROPERTYCHANGE,\n        this.render, this),\n      listen(\n        layerGroup, EventType.CHANGE,\n        this.render, this)\n    ];\n  }\n  this.render();\n};\n\n\n/**\n * @return {boolean} Is rendered.\n */\nPluggableMap.prototype.isRendered = function() {\n  return !!this.frameState_;\n};\n\n\n/**\n * Requests an immediate render in a synchronous manner.\n * @api\n */\nPluggableMap.prototype.renderSync = function() {\n  if (this.animationDelayKey_) {\n    cancelAnimationFrame(this.animationDelayKey_);\n  }\n  this.animationDelay_();\n};\n\n\n/**\n * Request a map rendering (at the next animation frame).\n * @api\n */\nPluggableMap.prototype.render = function() {\n  if (this.animationDelayKey_ === undefined) {\n    this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n  }\n};\n\n\n/**\n * Remove the given control from the map.\n * @param {module:ol/control/Control} control Control.\n * @return {module:ol/control/Control|undefined} The removed control (or undefined\n *     if the control was not found).\n * @api\n */\nPluggableMap.prototype.removeControl = function(control) {\n  return this.getControls().remove(control);\n};\n\n\n/**\n * Remove the given interaction from the map.\n * @param {module:ol/interaction/Interaction} interaction Interaction to remove.\n * @return {module:ol/interaction/Interaction|undefined} The removed interaction (or\n *     undefined if the interaction was not found).\n * @api\n */\nPluggableMap.prototype.removeInteraction = function(interaction) {\n  return this.getInteractions().remove(interaction);\n};\n\n\n/**\n * Removes the given layer from the map.\n * @param {module:ol/layer/Base} layer Layer.\n * @return {module:ol/layer/Base|undefined} The removed layer (or undefined if the\n *     layer was not found).\n * @api\n */\nPluggableMap.prototype.removeLayer = function(layer) {\n  const layers = this.getLayerGroup().getLayers();\n  return layers.remove(layer);\n};\n\n\n/**\n * Remove the given overlay from the map.\n * @param {module:ol/Overlay} overlay Overlay.\n * @return {module:ol/Overlay|undefined} The removed overlay (or undefined\n *     if the overlay was not found).\n * @api\n */\nPluggableMap.prototype.removeOverlay = function(overlay) {\n  return this.getOverlays().remove(overlay);\n};\n\n\n/**\n * @param {number} time Time.\n * @private\n */\nPluggableMap.prototype.renderFrame_ = function(time) {\n  let viewState;\n\n  const size = this.getSize();\n  const view = this.getView();\n  const extent = createEmpty();\n  const previousFrameState = this.frameState_;\n  /** @type {?module:ol/PluggableMap~FrameState} */\n  let frameState = null;\n  if (size !== undefined && hasArea(size) && view && view.isDef()) {\n    const viewHints = view.getHints(this.frameState_ ? this.frameState_.viewHints : undefined);\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    const layerStates = {};\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      layerStates[getUid(layerStatesArray[i].layer)] = layerStatesArray[i];\n    }\n    viewState = view.getState();\n    let focus = this.focus_;\n    if (!focus) {\n      focus = viewState.center;\n      const pixelResolution = viewState.resolution / this.pixelRatio_;\n      focus[0] = Math.round(focus[0] / pixelResolution) * pixelResolution;\n      focus[1] = Math.round(focus[1] / pixelResolution) * pixelResolution;\n    }\n    frameState = /** @type {module:ol/PluggableMap~FrameState} */ ({\n      animate: false,\n      coordinateToPixelTransform: this.coordinateToPixelTransform_,\n      extent: extent,\n      focus: focus,\n      index: this.frameIndex_++,\n      layerStates: layerStates,\n      layerStatesArray: layerStatesArray,\n      pixelRatio: this.pixelRatio_,\n      pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n      postRenderFunctions: [],\n      size: size,\n      skippedFeatureUids: this.skippedFeatureUids_,\n      tileQueue: this.tileQueue_,\n      time: time,\n      usedTiles: {},\n      viewState: viewState,\n      viewHints: viewHints,\n      wantedTiles: {}\n    });\n  }\n\n  if (frameState) {\n    frameState.extent = getForViewAndSize(viewState.center,\n      viewState.resolution, viewState.rotation, frameState.size, extent);\n  }\n\n  this.frameState_ = frameState;\n  this.renderer_.renderFrame(frameState);\n\n  if (frameState) {\n    if (frameState.animate) {\n      this.render();\n    }\n    Array.prototype.push.apply(this.postRenderFunctions_, frameState.postRenderFunctions);\n\n    if (previousFrameState) {\n      const moveStart = !this.previousExtent_ ||\n                  (!isEmpty(this.previousExtent_) &&\n                  !equals(frameState.extent, this.previousExtent_));\n      if (moveStart) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVESTART, this, previousFrameState));\n        this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n      }\n    }\n\n    const idle = this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equals(frameState.extent, this.previousExtent_);\n\n    if (idle) {\n      this.dispatchEvent(new MapEvent(MapEventType.MOVEEND, this, frameState));\n      clone(frameState.extent, this.previousExtent_);\n    }\n  }\n\n  this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n  setTimeout(this.handlePostRender.bind(this), 0);\n\n};\n\n\n/**\n * Sets the layergroup of this map.\n * @param {module:ol/layer/Group} layerGroup A layer group containing the layers in this map.\n * @observable\n * @api\n */\nPluggableMap.prototype.setLayerGroup = function(layerGroup) {\n  this.set(MapProperty.LAYERGROUP, layerGroup);\n};\n\n\n/**\n * Set the size of this map.\n * @param {module:ol/size~Size|undefined} size The size in pixels of the map in the DOM.\n * @observable\n * @api\n */\nPluggableMap.prototype.setSize = function(size) {\n  this.set(MapProperty.SIZE, size);\n};\n\n\n/**\n * Set the target element to render this map into.\n * @param {Element|string|undefined} target The Element or id of the Element\n *     that the map is rendered in.\n * @observable\n * @api\n */\nPluggableMap.prototype.setTarget = function(target) {\n  this.set(MapProperty.TARGET, target);\n};\n\n\n/**\n * Set the view for this map.\n * @param {module:ol/View} view The view that controls this map.\n * @observable\n * @api\n */\nPluggableMap.prototype.setView = function(view) {\n  this.set(MapProperty.VIEW, view);\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature.\n */\nPluggableMap.prototype.skipFeature = function(feature) {\n  const featureUid = getUid(feature).toString();\n  this.skippedFeatureUids_[featureUid] = true;\n  this.render();\n};\n\n\n/**\n * Force a recalculation of the map viewport size.  This should be called when\n * third-party code changes the size of the map viewport.\n * @api\n */\nPluggableMap.prototype.updateSize = function() {\n  const targetElement = this.getTargetElement();\n\n  if (!targetElement) {\n    this.setSize(undefined);\n  } else {\n    const computedStyle = getComputedStyle(targetElement);\n    this.setSize([\n      targetElement.offsetWidth -\n          parseFloat(computedStyle['borderLeftWidth']) -\n          parseFloat(computedStyle['paddingLeft']) -\n          parseFloat(computedStyle['paddingRight']) -\n          parseFloat(computedStyle['borderRightWidth']),\n      targetElement.offsetHeight -\n          parseFloat(computedStyle['borderTopWidth']) -\n          parseFloat(computedStyle['paddingTop']) -\n          parseFloat(computedStyle['paddingBottom']) -\n          parseFloat(computedStyle['borderBottomWidth'])\n    ]);\n  }\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature.\n */\nPluggableMap.prototype.unskipFeature = function(feature) {\n  const featureUid = getUid(feature).toString();\n  delete this.skippedFeatureUids_[featureUid];\n  this.render();\n};\n\n\n/**\n * @param {MapOptions} options Map options.\n * @return {module:ol/PluggableMap~MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n\n  /**\n   * @type {Element|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget = typeof options.keyboardEventTarget === 'string' ?\n      document.getElementById(options.keyboardEventTarget) :\n      options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object.<string, *>}\n   */\n  const values = {};\n\n  const layerGroup = (options.layers instanceof LayerGroup) ?\n    options.layers : new LayerGroup({layers: options.layers});\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] = options.view !== undefined ?\n    options.view : new View();\n\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(options.controls instanceof Collection,\n        47); // Expected `controls` to be an array or an `module:ol/Collection~Collection`\n      controls = options.controls;\n    }\n  }\n\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(options.interactions instanceof Collection,\n        48); // Expected `interactions` to be an array or an `module:ol/Collection~Collection`\n      interactions = options.interactions;\n    }\n  }\n\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(options.overlays instanceof Collection,\n        49); // Expected `overlays` to be an array or an `module:ol/Collection~Collection`\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values\n  };\n\n}\nexport default PluggableMap;\n","/**\n * @module ol/control/Control\n */\nimport {inherits} from '../index.js';\nimport {UNDEFINED} from '../functions.js';\nimport MapEventType from '../MapEventType.js';\nimport BaseObject from '../Object.js';\nimport {removeNode} from '../dom.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {Element} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(module:ol/MapEvent)} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {Element|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * var myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @constructor\n * @extends {module:ol/Object}\n * @param {module:ol/control/Control~Options} options Control options.\n * @api\n */\nconst Control = function(options) {\n\n  BaseObject.call(this);\n\n  /**\n   * @protected\n   * @type {Element}\n   */\n  this.element = options.element ? options.element : null;\n\n  /**\n   * @private\n   * @type {Element}\n   */\n  this.target_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/PluggableMap}\n   */\n  this.map_ = null;\n\n  /**\n   * @protected\n   * @type {!Array.<module:ol/events~EventsKey>}\n   */\n  this.listenerKeys = [];\n\n  /**\n   * @type {function(module:ol/MapEvent)}\n   */\n  this.render = options.render ? options.render : UNDEFINED;\n\n  if (options.target) {\n    this.setTarget(options.target);\n  }\n\n};\n\ninherits(Control, BaseObject);\n\n\n/**\n * @inheritDoc\n */\nControl.prototype.disposeInternal = function() {\n  removeNode(this.element);\n  BaseObject.prototype.disposeInternal.call(this);\n};\n\n\n/**\n * Get the map associated with this control.\n * @return {module:ol/PluggableMap} Map.\n * @api\n */\nControl.prototype.getMap = function() {\n  return this.map_;\n};\n\n\n/**\n * Remove the control from its current map and attach it to the new map.\n * Subclasses may set up event handlers to get notified about changes to\n * the map here.\n * @param {module:ol/PluggableMap} map Map.\n * @api\n */\nControl.prototype.setMap = function(map) {\n  if (this.map_) {\n    removeNode(this.element);\n  }\n  for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n    unlistenByKey(this.listenerKeys[i]);\n  }\n  this.listenerKeys.length = 0;\n  this.map_ = map;\n  if (this.map_) {\n    const target = this.target_ ?\n      this.target_ : map.getOverlayContainerStopEvent();\n    target.appendChild(this.element);\n    if (this.render !== UNDEFINED) {\n      this.listenerKeys.push(listen(map,\n        MapEventType.POSTRENDER, this.render, this));\n    }\n    map.render();\n  }\n};\n\n\n/**\n * This function is used to set a target element for the control. It has no\n * effect if it is called after the control has been added to the map (i.e.\n * after `setMap` is called on the control). If no `target` is set in the\n * options passed to the control constructor and if `setTarget` is not called\n * then the control is added to the map's overlay container.\n * @param {Element|string} target Target.\n * @api\n */\nControl.prototype.setTarget = function(target) {\n  this.target_ = typeof target === 'string' ?\n    document.getElementById(target) :\n    target;\n};\nexport default Control;\n","/**\n * @module ol/css\n */\n\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} The CSS font property.\n * @return {Object.<string>} The font families (or null if the input spec is invalid).\n */\nexport const getFontFamilies = (function() {\n  let style;\n  const cache = {};\n  return function(font) {\n    if (!style) {\n      style = document.createElement('div').style;\n    }\n    if (!(font in cache)) {\n      style.font = font;\n      const family = style.fontFamily;\n      style.font = '';\n      if (!family) {\n        return null;\n      }\n      cache[font] = family.split(/,\\s?/);\n    }\n    return cache[font];\n  };\n})();\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n  /**\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n  /**\n   * @event module:ol/render/Event~RenderEvent#render\n   * @api\n   */\n  RENDER: 'render'\n};\n","/**\n * @module ol/layer/Layer\n */\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getUid, inherits} from '../index.js';\nimport {getChangeEventType} from '../Object.js';\nimport BaseLayer from '../layer/Base.js';\nimport LayerProperty from '../layer/Property.js';\nimport {assign} from '../obj.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {module:ol/extent~Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex=0] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {module:ol/source/Source} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer#setSource layer.setSource(source)} after\n * construction.\n */\n\n\n/**\n * @typedef {Object} State\n * @property {module:ol/layer/Layer} layer\n * @property {number} opacity\n * @property {module:ol/source/Source~State} sourceState\n * @property {boolean} visible\n * @property {boolean} managed\n * @property {module:ol/extent~Extent} [extent]\n * @property {number} zIndex\n * @property {number} maxResolution\n * @property {number} minResolution\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with {@link module:ol/Map#addLayer}. Components\n * like {@link module:ol/interaction/Select~Select} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * {@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n *\n * @constructor\n * @abstract\n * @extends {module:ol/layer/Base}\n * @fires module:ol/render/Event~RenderEvent\n * @param {module:ol/layer/Layer~Options} options Layer options.\n * @api\n */\nconst Layer = function(options) {\n\n  const baseOptions = assign({}, options);\n  delete baseOptions.source;\n\n  BaseLayer.call(this, /** @type {module:ol/layer/Base~Options} */ (baseOptions));\n\n  /**\n   * @private\n   * @type {?module:ol/events~EventsKey}\n   */\n  this.mapPrecomposeKey_ = null;\n\n  /**\n   * @private\n   * @type {?module:ol/events~EventsKey}\n   */\n  this.mapRenderKey_ = null;\n\n  /**\n   * @private\n   * @type {?module:ol/events~EventsKey}\n   */\n  this.sourceChangeKey_ = null;\n\n  if (options.map) {\n    this.setMap(options.map);\n  }\n\n  listen(this,\n    getChangeEventType(LayerProperty.SOURCE),\n    this.handleSourcePropertyChange_, this);\n\n  const source = options.source ? options.source : null;\n  this.setSource(source);\n};\n\ninherits(Layer, BaseLayer);\n\n\n/**\n * Return `true` if the layer is visible, and if the passed resolution is\n * between the layer's minResolution and maxResolution. The comparison is\n * inclusive for `minResolution` and exclusive for `maxResolution`.\n * @param {module:ol/layer/Layer~State} layerState Layer state.\n * @param {number} resolution Resolution.\n * @return {boolean} The layer is visible at the given resolution.\n */\nexport function visibleAtResolution(layerState, resolution) {\n  return layerState.visible && resolution >= layerState.minResolution &&\n      resolution < layerState.maxResolution;\n}\n\n\n/**\n * @inheritDoc\n */\nLayer.prototype.getLayersArray = function(opt_array) {\n  const array = opt_array ? opt_array : [];\n  array.push(this);\n  return array;\n};\n\n\n/**\n * @inheritDoc\n */\nLayer.prototype.getLayerStatesArray = function(opt_states) {\n  const states = opt_states ? opt_states : [];\n  states.push(this.getLayerState());\n  return states;\n};\n\n\n/**\n * Get the layer source.\n * @return {module:ol/source/Source} The layer source (or `null` if not yet set).\n * @observable\n * @api\n */\nLayer.prototype.getSource = function() {\n  const source = this.get(LayerProperty.SOURCE);\n  return (\n    /** @type {module:ol/source/Source} */ (source) || null\n  );\n};\n\n\n/**\n  * @inheritDoc\n  */\nLayer.prototype.getSourceState = function() {\n  const source = this.getSource();\n  return !source ? SourceState.UNDEFINED : source.getState();\n};\n\n\n/**\n * @private\n */\nLayer.prototype.handleSourceChange_ = function() {\n  this.changed();\n};\n\n\n/**\n * @private\n */\nLayer.prototype.handleSourcePropertyChange_ = function() {\n  if (this.sourceChangeKey_) {\n    unlistenByKey(this.sourceChangeKey_);\n    this.sourceChangeKey_ = null;\n  }\n  const source = this.getSource();\n  if (source) {\n    this.sourceChangeKey_ = listen(source,\n      EventType.CHANGE, this.handleSourceChange_, this);\n  }\n  this.changed();\n};\n\n\n/**\n * Sets the layer to be rendered on top of other layers on a map. The map will\n * not manage this layer in its layers collection, and the callback in\n * {@link module:ol/Map#forEachLayerAtPixel} will receive `null` as layer. This\n * is useful for temporary layers. To remove an unmanaged layer from the map,\n * use `#setMap(null)`.\n *\n * To add the layer to a map and have it managed by the map, use\n * {@link module:ol/Map#addLayer} instead.\n * @param {module:ol/PluggableMap} map Map.\n * @api\n */\nLayer.prototype.setMap = function(map) {\n  if (this.mapPrecomposeKey_) {\n    unlistenByKey(this.mapPrecomposeKey_);\n    this.mapPrecomposeKey_ = null;\n  }\n  if (!map) {\n    this.changed();\n  }\n  if (this.mapRenderKey_) {\n    unlistenByKey(this.mapRenderKey_);\n    this.mapRenderKey_ = null;\n  }\n  if (map) {\n    this.mapPrecomposeKey_ = listen(map, RenderEventType.PRECOMPOSE, function(evt) {\n      const layerState = this.getLayerState();\n      layerState.managed = false;\n      layerState.zIndex = Infinity;\n      evt.frameState.layerStatesArray.push(layerState);\n      evt.frameState.layerStates[getUid(this)] = layerState;\n    }, this);\n    this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n    this.changed();\n  }\n};\n\n\n/**\n * Set the layer source.\n * @param {module:ol/source/Source} source The layer source.\n * @observable\n * @api\n */\nLayer.prototype.setSource = function(source) {\n  this.set(LayerProperty.SOURCE, source);\n};\nexport default Layer;\n","/**\n * @module ol/control/Attribution\n */\nimport {inherits} from '../index.js';\nimport {equals} from '../array.js';\nimport Control from '../control/Control.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_COLLAPSED} from '../css.js';\nimport {removeChildren, replaceNode} from '../dom.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {visibleAtResolution} from '../layer/Layer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {Element|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible=true] Specify if attributions can\n * be collapsed. If you use an OSM source, should be set to `false` — see\n * {@link https://www.openstreetmap.org/copyright OSM Copyright} —\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|Element} [collapseLabel='»'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {function(module:ol/MapEvent)} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @constructor\n * @extends {module:ol/control/Control}\n * @param {module:ol/control/Attribution~Options=} opt_options Attribution options.\n * @api\n */\nconst Attribution = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @private\n   * @type {Element}\n   */\n  this.ulElement_ = document.createElement('UL');\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.collapsed_ = options.collapsed !== undefined ? options.collapsed : true;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.collapsible_ = options.collapsible !== undefined ?\n    options.collapsible : true;\n\n  if (!this.collapsible_) {\n    this.collapsed_ = false;\n  }\n\n  const className = options.className !== undefined ? options.className : 'ol-attribution';\n\n  const tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n  const collapseLabel = options.collapseLabel !== undefined ? options.collapseLabel : '\\u00BB';\n\n  if (typeof collapseLabel === 'string') {\n    /**\n     * @private\n     * @type {Element}\n     */\n    this.collapseLabel_ = document.createElement('span');\n    this.collapseLabel_.textContent = collapseLabel;\n  } else {\n    this.collapseLabel_ = collapseLabel;\n  }\n\n  const label = options.label !== undefined ? options.label : 'i';\n\n  if (typeof label === 'string') {\n    /**\n     * @private\n     * @type {Element}\n     */\n    this.label_ = document.createElement('span');\n    this.label_.textContent = label;\n  } else {\n    this.label_ = label;\n  }\n\n\n  const activeLabel = (this.collapsible_ && !this.collapsed_) ?\n    this.collapseLabel_ : this.label_;\n  const button = document.createElement('button');\n  button.setAttribute('type', 'button');\n  button.title = tipLabel;\n  button.appendChild(activeLabel);\n\n  listen(button, EventType.CLICK, this.handleClick_, this);\n\n  const cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n  const element = document.createElement('div');\n  element.className = cssClasses;\n  element.appendChild(this.ulElement_);\n  element.appendChild(button);\n\n  Control.call(this, {\n    element: element,\n    render: options.render || render,\n    target: options.target\n  });\n\n  /**\n   * A list of currently rendered resolutions.\n   * @type {Array.<string>}\n   * @private\n   */\n  this.renderedAttributions_ = [];\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.renderedVisible_ = true;\n\n};\n\ninherits(Attribution, Control);\n\n\n/**\n * Get a list of visible attributions.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @return {Array.<string>} Attributions.\n * @private\n */\nAttribution.prototype.getSourceAttributions_ = function(frameState) {\n  /**\n   * Used to determine if an attribution already exists.\n   * @type {!Object.<string, boolean>}\n   */\n  const lookup = {};\n\n  /**\n   * A list of visible attributions.\n   * @type {Array.<string>}\n   */\n  const visibleAttributions = [];\n\n  const layerStatesArray = frameState.layerStatesArray;\n  const resolution = frameState.viewState.resolution;\n  for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n    const layerState = layerStatesArray[i];\n    if (!visibleAtResolution(layerState, resolution)) {\n      continue;\n    }\n\n    const source = layerState.layer.getSource();\n    if (!source) {\n      continue;\n    }\n\n    const attributionGetter = source.getAttributions();\n    if (!attributionGetter) {\n      continue;\n    }\n\n    const attributions = attributionGetter(frameState);\n    if (!attributions) {\n      continue;\n    }\n\n    if (Array.isArray(attributions)) {\n      for (let j = 0, jj = attributions.length; j < jj; ++j) {\n        if (!(attributions[j] in lookup)) {\n          visibleAttributions.push(attributions[j]);\n          lookup[attributions[j]] = true;\n        }\n      }\n    } else {\n      if (!(attributions in lookup)) {\n        visibleAttributions.push(attributions);\n        lookup[attributions] = true;\n      }\n    }\n  }\n  return visibleAttributions;\n};\n\n\n/**\n * Update the attribution element.\n * @param {module:ol/MapEvent} mapEvent Map event.\n * @this {module:ol/control/Attribution}\n * @api\n */\nexport function render(mapEvent) {\n  this.updateElement_(mapEvent.frameState);\n}\n\n\n/**\n * @private\n * @param {?module:ol/PluggableMap~FrameState} frameState Frame state.\n */\nAttribution.prototype.updateElement_ = function(frameState) {\n  if (!frameState) {\n    if (this.renderedVisible_) {\n      this.element.style.display = 'none';\n      this.renderedVisible_ = false;\n    }\n    return;\n  }\n\n  const attributions = this.getSourceAttributions_(frameState);\n\n  const visible = attributions.length > 0;\n  if (this.renderedVisible_ != visible) {\n    this.element.style.display = visible ? '' : 'none';\n    this.renderedVisible_ = visible;\n  }\n\n  if (equals(attributions, this.renderedAttributions_)) {\n    return;\n  }\n\n  removeChildren(this.ulElement_);\n\n  // append the attributions\n  for (let i = 0, ii = attributions.length; i < ii; ++i) {\n    const element = document.createElement('LI');\n    element.innerHTML = attributions[i];\n    this.ulElement_.appendChild(element);\n  }\n\n  this.renderedAttributions_ = attributions;\n};\n\n\n/**\n * @param {Event} event The event to handle\n * @private\n */\nAttribution.prototype.handleClick_ = function(event) {\n  event.preventDefault();\n  this.handleToggle_();\n};\n\n\n/**\n * @private\n */\nAttribution.prototype.handleToggle_ = function() {\n  this.element.classList.toggle(CLASS_COLLAPSED);\n  if (this.collapsed_) {\n    replaceNode(this.collapseLabel_, this.label_);\n  } else {\n    replaceNode(this.label_, this.collapseLabel_);\n  }\n  this.collapsed_ = !this.collapsed_;\n};\n\n\n/**\n * Return `true` if the attribution is collapsible, `false` otherwise.\n * @return {boolean} True if the widget is collapsible.\n * @api\n */\nAttribution.prototype.getCollapsible = function() {\n  return this.collapsible_;\n};\n\n\n/**\n * Set whether the attribution should be collapsible.\n * @param {boolean} collapsible True if the widget is collapsible.\n * @api\n */\nAttribution.prototype.setCollapsible = function(collapsible) {\n  if (this.collapsible_ === collapsible) {\n    return;\n  }\n  this.collapsible_ = collapsible;\n  this.element.classList.toggle('ol-uncollapsible');\n  if (!collapsible && this.collapsed_) {\n    this.handleToggle_();\n  }\n};\n\n\n/**\n * Collapse or expand the attribution according to the passed parameter. Will\n * not do anything if the attribution isn't collapsible or if the current\n * collapsed state is already the one requested.\n * @param {boolean} collapsed True if the widget is collapsed.\n * @api\n */\nAttribution.prototype.setCollapsed = function(collapsed) {\n  if (!this.collapsible_ || this.collapsed_ === collapsed) {\n    return;\n  }\n  this.handleToggle_();\n};\n\n\n/**\n * Return `true` when the attribution is currently collapsed or `false`\n * otherwise.\n * @return {boolean} True if the widget is collapsed.\n * @api\n */\nAttribution.prototype.getCollapsed = function() {\n  return this.collapsed_;\n};\nexport default Attribution;\n","/**\n * @module ol/control/Rotate\n */\n\nimport Control from '../control/Control.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {inherits} from '../index.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|Element} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(module:ol/MapEvent)} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function()} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {Element|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @constructor\n * @extends {module:ol/control/Control}\n * @param {module:ol/control/Rotate~Options=} opt_options Rotate options.\n * @api\n */\nconst Rotate = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  const className = options.className !== undefined ? options.className : 'ol-rotate';\n\n  const label = options.label !== undefined ? options.label : '\\u21E7';\n\n  /**\n   * @type {Element}\n   * @private\n   */\n  this.label_ = null;\n\n  if (typeof label === 'string') {\n    this.label_ = document.createElement('span');\n    this.label_.className = 'ol-compass';\n    this.label_.textContent = label;\n  } else {\n    this.label_ = label;\n    this.label_.classList.add('ol-compass');\n  }\n\n  const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n  const button = document.createElement('button');\n  button.className = className + '-reset';\n  button.setAttribute('type', 'button');\n  button.title = tipLabel;\n  button.appendChild(this.label_);\n\n  listen(button, EventType.CLICK,\n    Rotate.prototype.handleClick_, this);\n\n  const cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n  const element = document.createElement('div');\n  element.className = cssClasses;\n  element.appendChild(button);\n\n  this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n  Control.call(this, {\n    element: element,\n    render: options.render || render,\n    target: options.target\n  });\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.rotation_ = undefined;\n\n  if (this.autoHide_) {\n    this.element.classList.add(CLASS_HIDDEN);\n  }\n\n};\n\ninherits(Rotate, Control);\n\n\n/**\n * @param {Event} event The event to handle\n * @private\n */\nRotate.prototype.handleClick_ = function(event) {\n  event.preventDefault();\n  if (this.callResetNorth_ !== undefined) {\n    this.callResetNorth_();\n  } else {\n    this.resetNorth_();\n  }\n};\n\n\n/**\n * @private\n */\nRotate.prototype.resetNorth_ = function() {\n  const map = this.getMap();\n  const view = map.getView();\n  if (!view) {\n    // the map does not have a view, so we can't act\n    // upon it\n    return;\n  }\n  if (view.getRotation() !== undefined) {\n    if (this.duration_ > 0) {\n      view.animate({\n        rotation: 0,\n        duration: this.duration_,\n        easing: easeOut\n      });\n    } else {\n      view.setRotation(0);\n    }\n  }\n};\n\n\n/**\n * Update the rotate control element.\n * @param {module:ol/MapEvent} mapEvent Map event.\n * @this {module:ol/control/Rotate}\n * @api\n */\nexport function render(mapEvent) {\n  const frameState = mapEvent.frameState;\n  if (!frameState) {\n    return;\n  }\n  const rotation = frameState.viewState.rotation;\n  if (rotation != this.rotation_) {\n    const transform = 'rotate(' + rotation + 'rad)';\n    if (this.autoHide_) {\n      const contains = this.element.classList.contains(CLASS_HIDDEN);\n      if (!contains && rotation === 0) {\n        this.element.classList.add(CLASS_HIDDEN);\n      } else if (contains && rotation !== 0) {\n        this.element.classList.remove(CLASS_HIDDEN);\n      }\n    }\n    this.label_.style.msTransform = transform;\n    this.label_.style.webkitTransform = transform;\n    this.label_.style.transform = transform;\n  }\n  this.rotation_ = rotation;\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/Zoom\n */\nimport {inherits} from '../index.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport Control from '../control/Control.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string|Element} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|Element} [zoomOutLabel='-'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {Element|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @constructor\n * @extends {module:ol/control/Control}\n * @param {module:ol/control/Zoom~Options=} opt_options Zoom options.\n * @api\n */\nconst Zoom = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  const className = options.className !== undefined ? options.className : 'ol-zoom';\n\n  const delta = options.delta !== undefined ? options.delta : 1;\n\n  const zoomInLabel = options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n  const zoomOutLabel = options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2212';\n\n  const zoomInTipLabel = options.zoomInTipLabel !== undefined ?\n    options.zoomInTipLabel : 'Zoom in';\n  const zoomOutTipLabel = options.zoomOutTipLabel !== undefined ?\n    options.zoomOutTipLabel : 'Zoom out';\n\n  const inElement = document.createElement('button');\n  inElement.className = className + '-in';\n  inElement.setAttribute('type', 'button');\n  inElement.title = zoomInTipLabel;\n  inElement.appendChild(\n    typeof zoomInLabel === 'string' ? document.createTextNode(zoomInLabel) : zoomInLabel\n  );\n\n  listen(inElement, EventType.CLICK,\n    Zoom.prototype.handleClick_.bind(this, delta));\n\n  const outElement = document.createElement('button');\n  outElement.className = className + '-out';\n  outElement.setAttribute('type', 'button');\n  outElement.title = zoomOutTipLabel;\n  outElement.appendChild(\n    typeof zoomOutLabel === 'string' ? document.createTextNode(zoomOutLabel) : zoomOutLabel\n  );\n\n  listen(outElement, EventType.CLICK,\n    Zoom.prototype.handleClick_.bind(this, -delta));\n\n  const cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n  const element = document.createElement('div');\n  element.className = cssClasses;\n  element.appendChild(inElement);\n  element.appendChild(outElement);\n\n  Control.call(this, {\n    element: element,\n    target: options.target\n  });\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n};\n\ninherits(Zoom, Control);\n\n\n/**\n * @param {number} delta Zoom delta.\n * @param {Event} event The event to handle\n * @private\n */\nZoom.prototype.handleClick_ = function(delta, event) {\n  event.preventDefault();\n  this.zoomByDelta_(delta);\n};\n\n\n/**\n * @param {number} delta Zoom delta.\n * @private\n */\nZoom.prototype.zoomByDelta_ = function(delta) {\n  const map = this.getMap();\n  const view = map.getView();\n  if (!view) {\n    // the map does not have a view, so we can't act\n    // upon it\n    return;\n  }\n  const currentResolution = view.getResolution();\n  if (currentResolution) {\n    const newResolution = view.constrainResolution(currentResolution, delta);\n    if (this.duration_ > 0) {\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      view.animate({\n        resolution: newResolution,\n        duration: this.duration_,\n        easing: easeOut\n      });\n    } else {\n      view.setResolution(newResolution);\n    }\n  }\n};\nexport default Zoom;\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @constructor\n * @param {number} decay Rate of decay (must be negative).\n * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n * @param {number} delay Delay to consider to calculate the kinetic\n *     initial values (milliseconds).\n * @struct\n * @api\n */\nconst Kinetic = function(decay, minVelocity, delay) {\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.decay_ = decay;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.minVelocity_ = minVelocity;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.delay_ = delay;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.points_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.angle_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.initialVelocity_ = 0;\n};\n\n\n/**\n * FIXME empty description for jsdoc\n */\nKinetic.prototype.begin = function() {\n  this.points_.length = 0;\n  this.angle_ = 0;\n  this.initialVelocity_ = 0;\n};\n\n\n/**\n * @param {number} x X.\n * @param {number} y Y.\n */\nKinetic.prototype.update = function(x, y) {\n  this.points_.push(x, y, Date.now());\n};\n\n\n/**\n * @return {boolean} Whether we should do kinetic animation.\n */\nKinetic.prototype.end = function() {\n  if (this.points_.length < 6) {\n    // at least 2 points are required (i.e. there must be at least 6 elements\n    // in the array)\n    return false;\n  }\n  const delay = Date.now() - this.delay_;\n  const lastIndex = this.points_.length - 3;\n  if (this.points_[lastIndex + 2] < delay) {\n    // the last tracked point is too old, which means that the user stopped\n    // panning before releasing the map\n    return false;\n  }\n\n  // get the first point which still falls into the delay time\n  let firstIndex = lastIndex - 3;\n  while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n    firstIndex -= 3;\n  }\n\n  const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n  // we don't want a duration of 0 (divide by zero)\n  // we also make sure the user panned for a duration of at least one frame\n  // (1/60s) to compute sane displacement values\n  if (duration < 1000 / 60) {\n    return false;\n  }\n\n  const dx = this.points_[lastIndex] - this.points_[firstIndex];\n  const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n  this.angle_ = Math.atan2(dy, dx);\n  this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n  return this.initialVelocity_ > this.minVelocity_;\n};\n\n\n/**\n * @return {number} Total distance travelled (pixels).\n */\nKinetic.prototype.getDistance = function() {\n  return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n};\n\n\n/**\n * @return {number} Angle of the kinetic panning animation (radians).\n */\nKinetic.prototype.getAngle = function() {\n  return this.angle_;\n};\nexport default Kinetic;\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active'\n};\n","/**\n * @module ol/interaction/Interaction\n */\nimport {inherits} from '../index.js';\nimport BaseObject from '../Object.js';\nimport {easeOut, linear} from '../easing.js';\nimport InteractionProperty from '../interaction/Property.js';\nimport {clamp} from '../math.js';\n\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(module:ol/MapBrowserEvent):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return).\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n *\n * @constructor\n * @param {module:ol/interaction/Interaction~InteractionOptions} options Options.\n * @extends {module:ol/Object}\n * @api\n */\nconst Interaction = function(options) {\n\n  BaseObject.call(this);\n\n  /**\n   * @private\n   * @type {module:ol/PluggableMap}\n   */\n  this.map_ = null;\n\n  this.setActive(true);\n\n  /**\n   * @type {function(module:ol/MapBrowserEvent):boolean}\n   */\n  this.handleEvent = options.handleEvent;\n\n};\n\ninherits(Interaction, BaseObject);\n\n\n/**\n * Return whether the interaction is currently active.\n * @return {boolean} `true` if the interaction is active, `false` otherwise.\n * @observable\n * @api\n */\nInteraction.prototype.getActive = function() {\n  return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n};\n\n\n/**\n * Get the map associated with this interaction.\n * @return {module:ol/PluggableMap} Map.\n * @api\n */\nInteraction.prototype.getMap = function() {\n  return this.map_;\n};\n\n\n/**\n * Activate or deactivate the interaction.\n * @param {boolean} active Active.\n * @observable\n * @api\n */\nInteraction.prototype.setActive = function(active) {\n  this.set(InteractionProperty.ACTIVE, active);\n};\n\n\n/**\n * Remove the interaction from its current map and attach it to the new map.\n * Subclasses may set up event handlers to get notified about changes to\n * the map here.\n * @param {module:ol/PluggableMap} map Map.\n */\nInteraction.prototype.setMap = function(map) {\n  this.map_ = map;\n};\n\n\n/**\n * @param {module:ol/View} view View.\n * @param {module:ol/coordinate~Coordinate} delta Delta.\n * @param {number=} opt_duration Duration.\n */\nexport function pan(view, delta, opt_duration) {\n  const currentCenter = view.getCenter();\n  if (currentCenter) {\n    const center = view.constrainCenter(\n      [currentCenter[0] + delta[0], currentCenter[1] + delta[1]]);\n    if (opt_duration) {\n      view.animate({\n        duration: opt_duration,\n        easing: linear,\n        center: center\n      });\n    } else {\n      view.setCenter(center);\n    }\n  }\n}\n\n\n/**\n * @param {module:ol/View} view View.\n * @param {number|undefined} rotation Rotation.\n * @param {module:ol/coordinate~Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function rotate(view, rotation, opt_anchor, opt_duration) {\n  rotation = view.constrainRotation(rotation, 0);\n  rotateWithoutConstraints(view, rotation, opt_anchor, opt_duration);\n}\n\n\n/**\n * @param {module:ol/View} view View.\n * @param {number|undefined} rotation Rotation.\n * @param {module:ol/coordinate~Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function rotateWithoutConstraints(view, rotation, opt_anchor, opt_duration) {\n  if (rotation !== undefined) {\n    const currentRotation = view.getRotation();\n    const currentCenter = view.getCenter();\n    if (currentRotation !== undefined && currentCenter && opt_duration > 0) {\n      view.animate({\n        rotation: rotation,\n        anchor: opt_anchor,\n        duration: opt_duration,\n        easing: easeOut\n      });\n    } else {\n      view.rotate(rotation, opt_anchor);\n    }\n  }\n}\n\n\n/**\n * @param {module:ol/View} view View.\n * @param {number|undefined} resolution Resolution to go to.\n * @param {module:ol/coordinate~Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n * @param {number=} opt_direction Zooming direction; > 0 indicates\n *     zooming out, in which case the constraints system will select\n *     the largest nearest resolution; < 0 indicates zooming in, in\n *     which case the constraints system will select the smallest\n *     nearest resolution; == 0 indicates that the zooming direction\n *     is unknown/not relevant, in which case the constraints system\n *     will select the nearest resolution. If not defined 0 is\n *     assumed.\n */\nexport function zoom(view, resolution, opt_anchor, opt_duration, opt_direction) {\n  resolution = view.constrainResolution(resolution, 0, opt_direction);\n  zoomWithoutConstraints(view, resolution, opt_anchor, opt_duration);\n}\n\n\n/**\n * @param {module:ol/View} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {module:ol/coordinate~Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function zoomByDelta(view, delta, opt_anchor, opt_duration) {\n  const currentResolution = view.getResolution();\n  let resolution = view.constrainResolution(currentResolution, delta, 0);\n\n  if (resolution !== undefined) {\n    const resolutions = view.getResolutions();\n    resolution = clamp(\n      resolution,\n      view.getMinResolution() || resolutions[resolutions.length - 1],\n      view.getMaxResolution() || resolutions[0]);\n  }\n\n  // If we have a constraint on center, we need to change the anchor so that the\n  // new center is within the extent. We first calculate the new center, apply\n  // the constraint to it, and then calculate back the anchor\n  if (opt_anchor && resolution !== undefined && resolution !== currentResolution) {\n    const currentCenter = view.getCenter();\n    let center = view.calculateCenterZoom(resolution, opt_anchor);\n    center = view.constrainCenter(center);\n\n    opt_anchor = [\n      (resolution * currentCenter[0] - currentResolution * center[0]) /\n          (resolution - currentResolution),\n      (resolution * currentCenter[1] - currentResolution * center[1]) /\n          (resolution - currentResolution)\n    ];\n  }\n\n  zoomWithoutConstraints(view, resolution, opt_anchor, opt_duration);\n}\n\n\n/**\n * @param {module:ol/View} view View.\n * @param {number|undefined} resolution Resolution to go to.\n * @param {module:ol/coordinate~Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function zoomWithoutConstraints(view, resolution, opt_anchor, opt_duration) {\n  if (resolution) {\n    const currentResolution = view.getResolution();\n    const currentCenter = view.getCenter();\n    if (currentResolution !== undefined && currentCenter &&\n        resolution !== currentResolution && opt_duration) {\n      view.animate({\n        resolution: resolution,\n        anchor: opt_anchor,\n        duration: opt_duration,\n        easing: easeOut\n      });\n    } else {\n      if (opt_anchor) {\n        const center = view.calculateCenterZoom(resolution, opt_anchor);\n        view.setCenter(center);\n      }\n      view.setResolution(resolution);\n    }\n  }\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport {inherits} from '../index.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Interaction, {zoomByDelta} from '../interaction/Interaction.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n *\n * @constructor\n * @extends {module:ol/interaction/Interaction}\n * @param {module:ol/interaction/DoubleClickZoom~Options=} opt_options Options.\n * @api\n */\nconst DoubleClickZoom = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.delta_ = options.delta ? options.delta : 1;\n\n  Interaction.call(this, {\n    handleEvent: handleEvent\n  });\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n};\n\ninherits(DoubleClickZoom, Interaction);\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a\n * doubleclick) and eventually zooms the map.\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {module:ol/interaction/DoubleClickZoom}\n */\nfunction handleEvent(mapBrowserEvent) {\n  let stopEvent = false;\n  const browserEvent = mapBrowserEvent.originalEvent;\n  if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n    const map = mapBrowserEvent.map;\n    const anchor = mapBrowserEvent.coordinate;\n    const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n    const view = map.getView();\n    zoomByDelta(view, delta, anchor, this.duration_);\n    mapBrowserEvent.preventDefault();\n    stopEvent = true;\n  }\n  return !stopEvent;\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {assert} from '../asserts.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport {WEBKIT, MAC} from '../has.js';\n\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, module:ol/MapBrowserEvent): boolean} Condition\n */\n\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function(mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  return (\n    originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      !originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function(mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  return (\n    originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {module:ol/MapBrowserEvent} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function(event) {\n  return event.target.getTargetElement() === document.activeElement;\n};\n\n\n/**\n * Return always true.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @function\n * @api\n */\nexport const always = TRUE;\n\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function(mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  return originalEvent.button == 0 &&\n      !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n\n/**\n * Return always false.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @function\n * @api\n */\nexport const never = FALSE;\n\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function(mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  return (\n    !originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      !originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function(mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  return !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey;\n};\n\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function(mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  return (\n    !originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if the target element is not editable, i.e. not a `<input>`-,\n * `<select>`- or `<textarea>`-element, `false` otherwise.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function(mapBrowserEvent) {\n  const target = mapBrowserEvent.originalEvent.target;\n  const tagName = target.tagName;\n  return (\n    tagName !== 'INPUT' &&\n      tagName !== 'SELECT' &&\n      tagName !== 'TEXTAREA');\n};\n\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function(mapBrowserEvent) {\n  assert(mapBrowserEvent.pointerEvent, 56); // mapBrowserEvent must originate from a pointer event\n  // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return (\n    /** @type {module:ol/MapBrowserEvent} */ (mapBrowserEvent).pointerEvent.pointerType == 'mouse'\n  );\n};\n\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * @see http://www.w3.org/TR/pointerevents/#button-states\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function(mapBrowserEvent) {\n  const pointerEvent = mapBrowserEvent.pointerEvent;\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n","/**\n * @module ol/interaction/Pointer\n */\nimport {inherits} from '../index.js';\nimport {FALSE, UNDEFINED} from '../functions.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MapBrowserPointerEvent from '../MapBrowserPointerEvent.js';\nimport Interaction from '../interaction/Interaction.js';\nimport {getValues} from '../obj.js';\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @this {module:ol/interaction/Pointer}\n */\nconst handleDragEvent = UNDEFINED;\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Capture dragging.\n * @this {module:ol/interaction/Pointer}\n */\nconst handleUpEvent = FALSE;\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Capture dragging.\n * @this {module:ol/interaction/Pointer}\n */\nconst handleDownEvent = FALSE;\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @this {module:ol/interaction/Pointer}\n */\nconst handleMoveEvent = UNDEFINED;\n\n\n/**\n * @typedef {Object} Options\n * @property {(function(module:ol/MapBrowserPointerEvent):boolean)} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {(function(module:ol/MapBrowserPointerEvent))} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {(function(module:ol/MapBrowserEvent):boolean)} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {(function(module:ol/MapBrowserPointerEvent))} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events,\n * also during a drag sequence (so during a drag sequence both the\n * `handleDragEvent` function and this function are called).\n * @property {(function(module:ol/MapBrowserPointerEvent):boolean)} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n */\n\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n *\n * @constructor\n * @param {module:ol/interaction/Pointer~Options=} opt_options Options.\n * @extends {module:ol/interaction/Interaction}\n * @api\n */\nconst PointerInteraction = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  Interaction.call(this, {\n    handleEvent: options.handleEvent || handleEvent\n  });\n\n  /**\n   * @type {function(module:ol/MapBrowserPointerEvent):boolean}\n   * @private\n   */\n  this.handleDownEvent_ = options.handleDownEvent ?\n    options.handleDownEvent : handleDownEvent;\n\n  /**\n   * @type {function(module:ol/MapBrowserPointerEvent)}\n   * @private\n   */\n  this.handleDragEvent_ = options.handleDragEvent ?\n    options.handleDragEvent : handleDragEvent;\n\n  /**\n   * @type {function(module:ol/MapBrowserPointerEvent)}\n   * @private\n   */\n  this.handleMoveEvent_ = options.handleMoveEvent ?\n    options.handleMoveEvent : handleMoveEvent;\n\n  /**\n   * @type {function(module:ol/MapBrowserPointerEvent):boolean}\n   * @private\n   */\n  this.handleUpEvent_ = options.handleUpEvent ?\n    options.handleUpEvent : handleUpEvent;\n\n  /**\n   * @type {boolean}\n   * @protected\n   */\n  this.handlingDownUpSequence = false;\n\n  /**\n   * @type {!Object.<string, module:ol/pointer/PointerEvent>}\n   * @private\n   */\n  this.trackedPointers_ = {};\n\n  /**\n   * @type {Array.<module:ol/pointer/PointerEvent>}\n   * @protected\n   */\n  this.targetPointers = [];\n\n};\n\ninherits(PointerInteraction, Interaction);\n\n\n/**\n * @param {Array.<module:ol/pointer/PointerEvent>} pointerEvents List of events.\n * @return {module:ol~Pixel} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return [clientX / length, clientY / length];\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Whether the event is a pointerdown, pointerdrag\n *     or pointerup event.\n */\nfunction isPointerDraggingEvent(mapBrowserEvent) {\n  const type = mapBrowserEvent.type;\n  return type === MapBrowserEventType.POINTERDOWN ||\n    type === MapBrowserEventType.POINTERDRAG ||\n    type === MapBrowserEventType.POINTERUP;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @private\n */\nPointerInteraction.prototype.updateTrackedPointers_ = function(mapBrowserEvent) {\n  if (isPointerDraggingEvent(mapBrowserEvent)) {\n    const event = mapBrowserEvent.pointerEvent;\n\n    const id = event.pointerId.toString();\n    if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n      delete this.trackedPointers_[id];\n    } else if (mapBrowserEvent.type ==\n        MapBrowserEventType.POINTERDOWN) {\n      this.trackedPointers_[id] = event;\n    } else if (id in this.trackedPointers_) {\n      // update only when there was a pointerdown event for this pointer\n      this.trackedPointers_[id] = event;\n    }\n    this.targetPointers = getValues(this.trackedPointers_);\n  }\n};\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} and may call into\n * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n * detected.\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {module:ol/interaction/Pointer}\n * @api\n */\nexport function handleEvent(mapBrowserEvent) {\n  if (!(mapBrowserEvent instanceof MapBrowserPointerEvent)) {\n    return true;\n  }\n\n  let stopEvent = false;\n  this.updateTrackedPointers_(mapBrowserEvent);\n  if (this.handlingDownUpSequence) {\n    if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n      this.handleDragEvent_(mapBrowserEvent);\n    } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n      const handledUp = this.handleUpEvent_(mapBrowserEvent);\n      this.handlingDownUpSequence = handledUp && this.targetPointers.length > 0;\n    }\n  } else {\n    if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n      const handled = this.handleDownEvent_(mapBrowserEvent);\n      this.handlingDownUpSequence = handled;\n      stopEvent = this.shouldStopEvent(handled);\n    } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n      this.handleMoveEvent_(mapBrowserEvent);\n    }\n  }\n  return !stopEvent;\n}\n\n\n/**\n * This method is used to determine if \"down\" events should be propagated to\n * other interactions or should be stopped.\n *\n * The method receives the return code of the \"handleDownEvent\" function.\n *\n * By default this function is the \"identity\" function. It's overridden in\n * child classes.\n *\n * @param {boolean} handled Was the event handled by the interaction?\n * @return {boolean} Should the event be stopped?\n * @protected\n */\nPointerInteraction.prototype.shouldStopEvent = function(handled) {\n  return handled;\n};\n\nexport default PointerInteraction;\n","/**\n * @module ol/interaction/DragPan\n */\nimport {inherits} from '../index.js';\nimport ViewHint from '../ViewHint.js';\nimport {scale as scaleCoordinate, rotate as rotateCoordinate, add as addCoordinate} from '../coordinate.js';\nimport {easeOut} from '../easing.js';\nimport {noModifierKeys} from '../events/condition.js';\nimport {FALSE} from '../functions.js';\nimport PointerInteraction, {centroid as centroidFromPointers} from '../interaction/Pointer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/events/condition~Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~noModifierKeys}.\n * @property {module:ol/Kinetic} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n *\n * @constructor\n * @extends {module:ol/interaction/Pointer}\n * @param {module:ol/interaction/DragPan~Options=} opt_options Options.\n * @api\n */\nconst DragPan = function(opt_options) {\n\n  PointerInteraction.call(this, {\n    handleDownEvent: handleDownEvent,\n    handleDragEvent: handleDragEvent,\n    handleUpEvent: handleUpEvent\n  });\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @private\n   * @type {module:ol/Kinetic|undefined}\n   */\n  this.kinetic_ = options.kinetic;\n\n  /**\n   * @type {module:ol~Pixel}\n   */\n  this.lastCentroid = null;\n\n  /**\n   * @type {number}\n   */\n  this.lastPointersCount_;\n\n  /**\n   * @private\n   * @type {module:ol/events/condition~Condition}\n   */\n  this.condition_ = options.condition ? options.condition : noModifierKeys;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.noKinetic_ = false;\n\n};\n\ninherits(DragPan, PointerInteraction);\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @this {module:ol/interaction/DragPan}\n */\nfunction handleDragEvent(mapBrowserEvent) {\n  const targetPointers = this.targetPointers;\n  const centroid = centroidFromPointers(targetPointers);\n  if (targetPointers.length == this.lastPointersCount_) {\n    if (this.kinetic_) {\n      this.kinetic_.update(centroid[0], centroid[1]);\n    }\n    if (this.lastCentroid) {\n      const deltaX = this.lastCentroid[0] - centroid[0];\n      const deltaY = centroid[1] - this.lastCentroid[1];\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      let center = [deltaX, deltaY];\n      scaleCoordinate(center, view.getResolution());\n      rotateCoordinate(center, view.getRotation());\n      addCoordinate(center, view.getCenter());\n      center = view.constrainCenter(center);\n      view.setCenter(center);\n    }\n  } else if (this.kinetic_) {\n    // reset so we don't overestimate the kinetic energy after\n    // after one finger down, tiny drag, second finger down\n    this.kinetic_.begin();\n  }\n  this.lastCentroid = centroid;\n  this.lastPointersCount_ = targetPointers.length;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/DragPan}\n */\nfunction handleUpEvent(mapBrowserEvent) {\n  const map = mapBrowserEvent.map;\n  const view = map.getView();\n  if (this.targetPointers.length === 0) {\n    if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n      const distance = this.kinetic_.getDistance();\n      const angle = this.kinetic_.getAngle();\n      const center = /** @type {!module:ol/coordinate~Coordinate} */ (view.getCenter());\n      const centerpx = map.getPixelFromCoordinate(center);\n      const dest = map.getCoordinateFromPixel([\n        centerpx[0] - distance * Math.cos(angle),\n        centerpx[1] - distance * Math.sin(angle)\n      ]);\n      view.animate({\n        center: view.constrainCenter(dest),\n        duration: 500,\n        easing: easeOut\n      });\n    }\n    view.setHint(ViewHint.INTERACTING, -1);\n    return false;\n  } else {\n    if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger up, tiny drag, second finger up\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = null;\n    return true;\n  }\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Start drag sequence?\n * @this {module:ol/interaction/DragPan}\n */\nfunction handleDownEvent(mapBrowserEvent) {\n  if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    this.lastCentroid = null;\n    if (!this.handlingDownUpSequence) {\n      view.setHint(ViewHint.INTERACTING, 1);\n    }\n    // stop any current animation\n    if (view.getAnimating()) {\n      view.setCenter(mapBrowserEvent.frameState.viewState.center);\n    }\n    if (this.kinetic_) {\n      this.kinetic_.begin();\n    }\n    // No kinetic as soon as more than one pointer on the screen is\n    // detected. This is to prevent nasty pans after pinch.\n    this.noKinetic_ = this.targetPointers.length > 1;\n    return true;\n  } else {\n    return false;\n  }\n}\n\n\n/**\n * @inheritDoc\n */\nDragPan.prototype.shouldStopEvent = FALSE;\nexport default DragPan;\n","/**\n * @module ol/interaction/DragRotate\n */\nimport {inherits} from '../index.js';\nimport {disable} from '../rotationconstraint.js';\nimport ViewHint from '../ViewHint.js';\nimport {altShiftKeysOnly, mouseOnly, mouseActionButton} from '../events/condition.js';\nimport {FALSE} from '../functions.js';\nimport {rotate, rotateWithoutConstraints} from '../interaction/Interaction.js';\nimport PointerInteraction from '../interaction/Pointer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/events/condition~Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n *\n * @constructor\n * @extends {module:ol/interaction/Pointer}\n * @param {module:ol/interaction/DragRotate~Options=} opt_options Options.\n * @api\n */\nconst DragRotate = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  PointerInteraction.call(this, {\n    handleDownEvent: handleDownEvent,\n    handleDragEvent: handleDragEvent,\n    handleUpEvent: handleUpEvent\n  });\n\n  /**\n   * @private\n   * @type {module:ol/events/condition~Condition}\n   */\n  this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.lastAngle_ = undefined;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.duration_ = options.duration !== undefined ? options.duration : 250;\n};\n\ninherits(DragRotate, PointerInteraction);\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @this {module:ol/interaction/DragRotate}\n */\nfunction handleDragEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return;\n  }\n\n  const map = mapBrowserEvent.map;\n  const view = map.getView();\n  if (view.getConstraints().rotation === disable) {\n    return;\n  }\n  const size = map.getSize();\n  const offset = mapBrowserEvent.pixel;\n  const theta =\n      Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n  if (this.lastAngle_ !== undefined) {\n    const delta = theta - this.lastAngle_;\n    const rotation = view.getRotation();\n    rotateWithoutConstraints(view, rotation - delta);\n  }\n  this.lastAngle_ = theta;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/DragRotate}\n */\nfunction handleUpEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return true;\n  }\n\n  const map = mapBrowserEvent.map;\n  const view = map.getView();\n  view.setHint(ViewHint.INTERACTING, -1);\n  const rotation = view.getRotation();\n  rotate(view, rotation, undefined, this.duration_);\n  return false;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Start drag sequence?\n * @this {module:ol/interaction/DragRotate}\n */\nfunction handleDownEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return false;\n  }\n\n  if (mouseActionButton(mapBrowserEvent) && this.condition_(mapBrowserEvent)) {\n    const map = mapBrowserEvent.map;\n    map.getView().setHint(ViewHint.INTERACTING, 1);\n    this.lastAngle_ = undefined;\n    return true;\n  } else {\n    return false;\n  }\n}\n\n\n/**\n * @inheritDoc\n */\nDragRotate.prototype.shouldStopEvent = FALSE;\nexport default DragRotate;\n","/**\n * @module ol/render/Box\n */\n// FIXME add rotation\n\nimport {inherits} from '../index.js';\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\n/**\n * @constructor\n * @extends {module:ol/Disposable}\n * @param {string} className CSS class name.\n */\nconst RenderBox = function(className) {\n\n  /**\n   * @type {module:ol/geom/Polygon}\n   * @private\n   */\n  this.geometry_ = null;\n\n  /**\n   * @type {HTMLDivElement}\n   * @private\n   */\n  this.element_ = /** @type {HTMLDivElement} */ (document.createElement('div'));\n  this.element_.style.position = 'absolute';\n  this.element_.className = 'ol-box ' + className;\n\n  /**\n   * @private\n   * @type {module:ol/PluggableMap}\n   */\n  this.map_ = null;\n\n  /**\n   * @private\n   * @type {module:ol~Pixel}\n   */\n  this.startPixel_ = null;\n\n  /**\n   * @private\n   * @type {module:ol~Pixel}\n   */\n  this.endPixel_ = null;\n\n};\n\ninherits(RenderBox, Disposable);\n\n\n/**\n * @inheritDoc\n */\nRenderBox.prototype.disposeInternal = function() {\n  this.setMap(null);\n};\n\n\n/**\n * @private\n */\nRenderBox.prototype.render_ = function() {\n  const startPixel = this.startPixel_;\n  const endPixel = this.endPixel_;\n  const px = 'px';\n  const style = this.element_.style;\n  style.left = Math.min(startPixel[0], endPixel[0]) + px;\n  style.top = Math.min(startPixel[1], endPixel[1]) + px;\n  style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n  style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n};\n\n\n/**\n * @param {module:ol/PluggableMap} map Map.\n */\nRenderBox.prototype.setMap = function(map) {\n  if (this.map_) {\n    this.map_.getOverlayContainer().removeChild(this.element_);\n    const style = this.element_.style;\n    style.left = style.top = style.width = style.height = 'inherit';\n  }\n  this.map_ = map;\n  if (this.map_) {\n    this.map_.getOverlayContainer().appendChild(this.element_);\n  }\n};\n\n\n/**\n * @param {module:ol~Pixel} startPixel Start pixel.\n * @param {module:ol~Pixel} endPixel End pixel.\n */\nRenderBox.prototype.setPixels = function(startPixel, endPixel) {\n  this.startPixel_ = startPixel;\n  this.endPixel_ = endPixel;\n  this.createOrUpdateGeometry();\n  this.render_();\n};\n\n\n/**\n * Creates or updates the cached geometry.\n */\nRenderBox.prototype.createOrUpdateGeometry = function() {\n  const startPixel = this.startPixel_;\n  const endPixel = this.endPixel_;\n  const pixels = [\n    startPixel,\n    [startPixel[0], endPixel[1]],\n    endPixel,\n    [endPixel[0], startPixel[1]]\n  ];\n  const coordinates = pixels.map(this.map_.getCoordinateFromPixel, this.map_);\n  // close the polygon\n  coordinates[4] = coordinates[0].slice();\n  if (!this.geometry_) {\n    this.geometry_ = new Polygon([coordinates]);\n  } else {\n    this.geometry_.setCoordinates([coordinates]);\n  }\n};\n\n\n/**\n * @return {module:ol/geom/Polygon} Geometry.\n */\nRenderBox.prototype.getGeometry = function() {\n  return this.geometry_;\n};\nexport default RenderBox;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport {inherits} from '../index.js';\nimport {always, mouseOnly, mouseActionButton} from '../events/condition.js';\nimport {UNDEFINED} from '../functions.js';\nimport PointerInteraction from '../interaction/Pointer.js';\nimport RenderBox from '../render/Box.js';\n\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent} and two\n * {@link module:ol~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, module:ol/MapBrowserEvent, module:ol~Pixel, module:ol~Pixel):boolean} EndCondition\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {module:ol/events/condition~Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~always}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {module:ol/interaction/DragBox~EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n */\n\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event module:ol/interaction/DragBox~DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event module:ol/interaction/DragBox~DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event module:ol/interaction/DragBox~DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n *\n * @param {string} type The event type.\n * @param {module:ol/coordinate~Coordinate} coordinate The event coordinate.\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Originating event.\n * @extends {module:ol/events/Event}\n * @constructor\n */\nconst DragBoxEvent = function(type, coordinate, mapBrowserEvent) {\n  Event.call(this, type);\n\n  /**\n   * The coordinate of the drag event.\n   * @const\n   * @type {module:ol/coordinate~Coordinate}\n   * @api\n   */\n  this.coordinate = coordinate;\n\n  /**\n   * @const\n   * @type {module:ol/MapBrowserEvent}\n   * @api\n   */\n  this.mapBrowserEvent = mapBrowserEvent;\n\n};\n\ninherits(DragBoxEvent, Event);\n\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom}).\n *\n * This interaction is only supported for mouse devices.\n *\n * @constructor\n * @extends {module:ol/interaction/Pointer}\n * @fires module:ol/interaction/DragBox~DragBoxEvent\n * @param {module:ol/interaction/DragBox~Options=} opt_options Options.\n * @api\n */\nconst DragBox = function(opt_options) {\n\n  PointerInteraction.call(this, {\n    handleDownEvent: handleDownEvent,\n    handleDragEvent: handleDragEvent,\n    handleUpEvent: handleUpEvent\n  });\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @type {module:ol/render/Box}\n   * @private\n   */\n  this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n  /**\n   * @type {module:ol~Pixel}\n   * @private\n   */\n  this.startPixel_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/events/condition~Condition}\n   */\n  this.condition_ = options.condition ? options.condition : always;\n\n  /**\n   * @private\n   * @type {module:ol/interaction/DragBox~EndCondition}\n   */\n  this.boxEndCondition_ = options.boxEndCondition ?\n    options.boxEndCondition : defaultBoxEndCondition;\n};\n\ninherits(DragBox, PointerInteraction);\n\n\n/**\n * The default condition for determining whether the boxend event\n * should fire.\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent The originating MapBrowserEvent\n *     leading to the box end.\n * @param {module:ol~Pixel} startPixel The starting pixel of the box.\n * @param {module:ol~Pixel} endPixel The end pixel of the box.\n * @return {boolean} Whether or not the boxend condition should be fired.\n * @this {module:ol/interaction/DragBox}\n */\nfunction defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n  const width = endPixel[0] - startPixel[0];\n  const height = endPixel[1] - startPixel[1];\n  return width * width + height * height >= this.minArea_;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @this {module:ol/interaction/DragBox}\n */\nfunction handleDragEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return;\n  }\n\n  this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n  this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXDRAG,\n    mapBrowserEvent.coordinate, mapBrowserEvent));\n}\n\n\n/**\n * Returns geometry of last drawn box.\n * @return {module:ol/geom/Polygon} Geometry.\n * @api\n */\nDragBox.prototype.getGeometry = function() {\n  return this.box_.getGeometry();\n};\n\n\n/**\n * To be overridden by child classes.\n * FIXME: use constructor option instead of relying on overriding.\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @protected\n */\nDragBox.prototype.onBoxEnd = UNDEFINED;\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/DragBox}\n */\nfunction handleUpEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return true;\n  }\n\n  this.box_.setMap(null);\n\n  if (this.boxEndCondition_(mapBrowserEvent,\n    this.startPixel_, mapBrowserEvent.pixel)) {\n    this.onBoxEnd(mapBrowserEvent);\n    this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXEND,\n      mapBrowserEvent.coordinate, mapBrowserEvent));\n  }\n  return false;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Start drag sequence?\n * @this {module:ol/interaction/DragBox}\n */\nfunction handleDownEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return false;\n  }\n\n  if (mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)) {\n    this.startPixel_ = mapBrowserEvent.pixel;\n    this.box_.setMap(mapBrowserEvent.map);\n    this.box_.setPixels(this.startPixel_, this.startPixel_);\n    this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXSTART,\n      mapBrowserEvent.coordinate, mapBrowserEvent));\n    return true;\n  } else {\n    return false;\n  }\n}\n\n\nexport default DragBox;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport {inherits} from '../index.js';\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\nimport {createOrUpdateFromCoordinates, getBottomLeft, getCenter, getTopRight, scaleFromCenter} from '../extent.js';\nimport DragBox from '../interaction/DragBox.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {module:ol/events/condition~Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n *\n * @constructor\n * @extends {module:ol/interaction/DragBox}\n * @param {module:ol/interaction/DragZoom~Options=} opt_options Options.\n * @api\n */\nconst DragZoom = function(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  const condition = options.condition ? options.condition : shiftKeyOnly;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.out_ = options.out !== undefined ? options.out : false;\n\n  DragBox.call(this, {\n    condition: condition,\n    className: options.className || 'ol-dragzoom'\n  });\n\n};\n\ninherits(DragZoom, DragBox);\n\n\n/**\n * @inheritDoc\n */\nDragZoom.prototype.onBoxEnd = function() {\n  const map = this.getMap();\n\n  const view = /** @type {!module:ol/View} */ (map.getView());\n\n  const size = /** @type {!module:ol/size~Size} */ (map.getSize());\n\n  let extent = this.getGeometry().getExtent();\n\n  if (this.out_) {\n    const mapExtent = view.calculateExtent(size);\n    const boxPixelExtent = createOrUpdateFromCoordinates([\n      map.getPixelFromCoordinate(getBottomLeft(extent)),\n      map.getPixelFromCoordinate(getTopRight(extent))]);\n    const factor = view.getResolutionForExtent(boxPixelExtent, size);\n\n    scaleFromCenter(mapExtent, 1 / factor);\n    extent = mapExtent;\n  }\n\n  const resolution = view.constrainResolution(\n    view.getResolutionForExtent(extent, size));\n\n  let center = getCenter(extent);\n  center = view.constrainCenter(center);\n\n  view.animate({\n    resolution: resolution,\n    center: center,\n    duration: this.duration_,\n    easing: easeOut\n  });\n\n};\nexport default DragZoom;\n","/**\n * @module ol/events/KeyCode\n */\n\n/**\n * @enum {number}\n * @const\n */\nexport default {\n  LEFT: 37,\n  UP: 38,\n  RIGHT: 39,\n  DOWN: 40\n};\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport {inherits} from '../index.js';\nimport {rotate as rotateCoordinate} from '../coordinate.js';\nimport EventType from '../events/EventType.js';\nimport KeyCode from '../events/KeyCode.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport Interaction, {pan} from '../interaction/Interaction.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/events/condition~Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~noModifierKeys} and\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n *\n * @constructor\n * @extends {module:ol/interaction/Interaction}\n * @param {module:ol/interaction/KeyboardPan~Options=} opt_options Options.\n * @api\n */\nconst KeyboardPan = function(opt_options) {\n\n  Interaction.call(this, {\n    handleEvent: handleEvent\n  });\n\n  const options = opt_options || {};\n\n  /**\n   * @private\n   * @param {module:ol/MapBrowserEvent} mapBrowserEvent Browser event.\n   * @return {boolean} Combined condition result.\n   */\n  this.defaultCondition_ = function(mapBrowserEvent) {\n    return noModifierKeys(mapBrowserEvent) &&\n      targetNotEditable(mapBrowserEvent);\n  };\n\n  /**\n   * @private\n   * @type {module:ol/events/condition~Condition}\n   */\n  this.condition_ = options.condition !== undefined ?\n    options.condition : this.defaultCondition_;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.pixelDelta_ = options.pixelDelta !== undefined ?\n    options.pixelDelta : 128;\n\n};\n\ninherits(KeyboardPan, Interaction);\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n * pressed).\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {module:ol/interaction/KeyboardPan}\n */\nfunction handleEvent(mapBrowserEvent) {\n  let stopEvent = false;\n  if (mapBrowserEvent.type == EventType.KEYDOWN) {\n    const keyEvent = mapBrowserEvent.originalEvent;\n    const keyCode = keyEvent.keyCode;\n    if (this.condition_(mapBrowserEvent) &&\n        (keyCode == KeyCode.DOWN ||\n        keyCode == KeyCode.LEFT ||\n        keyCode == KeyCode.RIGHT ||\n        keyCode == KeyCode.UP)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n      let deltaX = 0, deltaY = 0;\n      if (keyCode == KeyCode.DOWN) {\n        deltaY = -mapUnitsDelta;\n      } else if (keyCode == KeyCode.LEFT) {\n        deltaX = -mapUnitsDelta;\n      } else if (keyCode == KeyCode.RIGHT) {\n        deltaX = mapUnitsDelta;\n      } else {\n        deltaY = mapUnitsDelta;\n      }\n      const delta = [deltaX, deltaY];\n      rotateCoordinate(delta, view.getRotation());\n      pan(view, delta, this.duration_);\n      mapBrowserEvent.preventDefault();\n      stopEvent = true;\n    }\n  }\n  return !stopEvent;\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport {inherits} from '../index.js';\nimport EventType from '../events/EventType.js';\nimport {targetNotEditable} from '../events/condition.js';\nimport Interaction, {zoomByDelta} from '../interaction/Interaction.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {module:ol/events/condition~Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link moudle:ol/interaction/KeyboardPan~KeyboardPan}.\n *\n * @constructor\n * @param {module:ol/interaction/KeyboardZoom~Options=} opt_options Options.\n * @extends {module:ol/interaction/Interaction}\n * @api\n */\nconst KeyboardZoom = function(opt_options) {\n\n  Interaction.call(this, {\n    handleEvent: handleEvent\n  });\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @private\n   * @type {module:ol/events/condition~Condition}\n   */\n  this.condition_ = options.condition ? options.condition : targetNotEditable;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.delta_ = options.delta ? options.delta : 1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n};\n\ninherits(KeyboardZoom, Interaction);\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n * key pressed was '+' or '-').\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {module:ol/interaction/KeyboardZoom}\n */\nfunction handleEvent(mapBrowserEvent) {\n  let stopEvent = false;\n  if (mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS) {\n    const keyEvent = mapBrowserEvent.originalEvent;\n    const charCode = keyEvent.charCode;\n    if (this.condition_(mapBrowserEvent) &&\n        (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))) {\n      const map = mapBrowserEvent.map;\n      const delta = (charCode == '+'.charCodeAt(0)) ? this.delta_ : -this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, undefined, this.duration_);\n      mapBrowserEvent.preventDefault();\n      stopEvent = true;\n    }\n  }\n  return !stopEvent;\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport {inherits} from '../index.js';\nimport ViewHint from '../ViewHint.js';\nimport {always} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport EventType from '../events/EventType.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX, SAFARI} from '../has.js';\nimport Interaction, {zoomByDelta} from '../interaction/Interaction.js';\nimport {clamp} from '../math.js';\n\n\n/**\n * Maximum mouse wheel delta.\n * @type {number}\n */\nconst MAX_DELTA = 1;\n\n\n/**\n * @enum {string}\n */\nexport const Mode = {\n  TRACKPAD: 'trackpad',\n  WHEEL: 'wheel'\n};\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/events/condition~Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~always}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [constrainResolution=false] When using a trackpad or\n * magic mouse, zoom to the closest integer zoom level after the scroll gesture\n * ends.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n *\n * @constructor\n * @extends {module:ol/interaction/Interaction}\n * @param {module:ol/interaction/MouseWheelZoom~Options=} opt_options Options.\n * @api\n */\nconst MouseWheelZoom = function(opt_options) {\n\n  Interaction.call(this, {\n    handleEvent: handleEvent\n  });\n\n  const options = opt_options || {};\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.delta_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.useAnchor_ = options.useAnchor !== undefined ? options.useAnchor : true;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.constrainResolution_ = options.constrainResolution || false;\n\n  /**\n   * @private\n   * @type {module:ol/events/condition~Condition}\n   */\n  this.condition_ = options.condition ? options.condition : always;\n\n  /**\n   * @private\n   * @type {?module:ol/coordinate~Coordinate}\n   */\n  this.lastAnchor_ = null;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.startTime_ = undefined;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.timeoutId_ = undefined;\n\n  /**\n   * @private\n   * @type {module:ol/interaction/MouseWheelZoom~Mode|undefined}\n   */\n  this.mode_ = undefined;\n\n  /**\n   * Trackpad events separated by this delay will be considered separate\n   * interactions.\n   * @type {number}\n   */\n  this.trackpadEventGap_ = 400;\n\n  /**\n   * @type {number|undefined}\n   */\n  this.trackpadTimeoutId_ = undefined;\n\n  /**\n   * The number of delta values per zoom level\n   * @private\n   * @type {number}\n   */\n  this.trackpadDeltaPerZoom_ = 300;\n\n  /**\n   * The zoom factor by which scroll zooming is allowed to exceed the limits.\n   * @private\n   * @type {number}\n   */\n  this.trackpadZoomBuffer_ = 1.5;\n\n};\n\ninherits(MouseWheelZoom, Interaction);\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a\n * mousewheel-event) and eventually zooms the map.\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} Allow event propagation.\n * @this {module:ol/interaction/MouseWheelZoom}\n */\nfunction handleEvent(mapBrowserEvent) {\n  if (!this.condition_(mapBrowserEvent)) {\n    return true;\n  }\n  const type = mapBrowserEvent.type;\n  if (type !== EventType.WHEEL && type !== EventType.MOUSEWHEEL) {\n    return true;\n  }\n\n  mapBrowserEvent.preventDefault();\n\n  const map = mapBrowserEvent.map;\n  const wheelEvent = /** @type {WheelEvent} */ (mapBrowserEvent.originalEvent);\n\n  if (this.useAnchor_) {\n    this.lastAnchor_ = mapBrowserEvent.coordinate;\n  }\n\n  // Delta normalisation inspired by\n  // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n  let delta;\n  if (mapBrowserEvent.type == EventType.WHEEL) {\n    delta = wheelEvent.deltaY;\n    if (FIREFOX &&\n        wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n      delta /= DEVICE_PIXEL_RATIO;\n    }\n    if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n      delta *= 40;\n    }\n  } else if (mapBrowserEvent.type == EventType.MOUSEWHEEL) {\n    delta = -wheelEvent.wheelDeltaY;\n    if (SAFARI) {\n      delta /= 3;\n    }\n  }\n\n  if (delta === 0) {\n    return false;\n  }\n\n  const now = Date.now();\n\n  if (this.startTime_ === undefined) {\n    this.startTime_ = now;\n  }\n\n  if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n    this.mode_ = Math.abs(delta) < 4 ?\n      Mode.TRACKPAD :\n      Mode.WHEEL;\n  }\n\n  if (this.mode_ === Mode.TRACKPAD) {\n    const view = map.getView();\n    if (this.trackpadTimeoutId_) {\n      clearTimeout(this.trackpadTimeoutId_);\n    } else {\n      view.setHint(ViewHint.INTERACTING, 1);\n    }\n    this.trackpadTimeoutId_ = setTimeout(this.decrementInteractingHint_.bind(this), this.trackpadEventGap_);\n    let resolution = view.getResolution() * Math.pow(2, delta / this.trackpadDeltaPerZoom_);\n    const minResolution = view.getMinResolution();\n    const maxResolution = view.getMaxResolution();\n    let rebound = 0;\n    if (resolution < minResolution) {\n      resolution = Math.max(resolution, minResolution / this.trackpadZoomBuffer_);\n      rebound = 1;\n    } else if (resolution > maxResolution) {\n      resolution = Math.min(resolution, maxResolution * this.trackpadZoomBuffer_);\n      rebound = -1;\n    }\n    if (this.lastAnchor_) {\n      const center = view.calculateCenterZoom(resolution, this.lastAnchor_);\n      view.setCenter(view.constrainCenter(center));\n    }\n    view.setResolution(resolution);\n\n    if (rebound === 0 && this.constrainResolution_) {\n      view.animate({\n        resolution: view.constrainResolution(resolution, delta > 0 ? -1 : 1),\n        easing: easeOut,\n        anchor: this.lastAnchor_,\n        duration: this.duration_\n      });\n    }\n\n    if (rebound > 0) {\n      view.animate({\n        resolution: minResolution,\n        easing: easeOut,\n        anchor: this.lastAnchor_,\n        duration: 500\n      });\n    } else if (rebound < 0) {\n      view.animate({\n        resolution: maxResolution,\n        easing: easeOut,\n        anchor: this.lastAnchor_,\n        duration: 500\n      });\n    }\n    this.startTime_ = now;\n    return false;\n  }\n\n  this.delta_ += delta;\n\n  const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n  clearTimeout(this.timeoutId_);\n  this.timeoutId_ = setTimeout(this.handleWheelZoom_.bind(this, map), timeLeft);\n\n  return false;\n}\n\n\n/**\n * @private\n */\nMouseWheelZoom.prototype.decrementInteractingHint_ = function() {\n  this.trackpadTimeoutId_ = undefined;\n  const view = this.getMap().getView();\n  view.setHint(ViewHint.INTERACTING, -1);\n};\n\n\n/**\n * @private\n * @param {module:ol/PluggableMap} map Map.\n */\nMouseWheelZoom.prototype.handleWheelZoom_ = function(map) {\n  const view = map.getView();\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  const maxDelta = MAX_DELTA;\n  const delta = clamp(this.delta_, -maxDelta, maxDelta);\n  zoomByDelta(view, -delta, this.lastAnchor_, this.duration_);\n  this.mode_ = undefined;\n  this.delta_ = 0;\n  this.lastAnchor_ = null;\n  this.startTime_ = undefined;\n  this.timeoutId_ = undefined;\n};\n\n\n/**\n * Enable or disable using the mouse's location as an anchor when zooming\n * @param {boolean} useAnchor true to zoom to the mouse's location, false\n * to zoom to the center of the map\n * @api\n */\nMouseWheelZoom.prototype.setMouseAnchor = function(useAnchor) {\n  this.useAnchor_ = useAnchor;\n  if (!useAnchor) {\n    this.lastAnchor_ = null;\n  }\n};\n\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport {inherits} from '../index.js';\nimport ViewHint from '../ViewHint.js';\nimport {FALSE} from '../functions.js';\nimport {rotate, rotateWithoutConstraints} from '../interaction/Interaction.js';\nimport PointerInteraction, {centroid as centroidFromPointers} from '../interaction/Pointer.js';\nimport {disable} from '../rotationconstraint.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n *\n * @constructor\n * @extends {module:ol/interaction/Pointer}\n * @param {module:ol/interaction/PinchRotate~Options=} opt_options Options.\n * @api\n */\nconst PinchRotate = function(opt_options) {\n\n  PointerInteraction.call(this, {\n    handleDownEvent: handleDownEvent,\n    handleDragEvent: handleDragEvent,\n    handleUpEvent: handleUpEvent\n  });\n\n  const options = opt_options || {};\n\n  /**\n   * @private\n   * @type {module:ol/coordinate~Coordinate}\n   */\n  this.anchor_ = null;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.lastAngle_ = undefined;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.rotating_ = false;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.rotationDelta_ = 0.0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n};\n\ninherits(PinchRotate, PointerInteraction);\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @this {module:ol/interaction/PinchRotate}\n */\nfunction handleDragEvent(mapBrowserEvent) {\n  let rotationDelta = 0.0;\n\n  const touch0 = this.targetPointers[0];\n  const touch1 = this.targetPointers[1];\n\n  // angle between touches\n  const angle = Math.atan2(\n    touch1.clientY - touch0.clientY,\n    touch1.clientX - touch0.clientX);\n\n  if (this.lastAngle_ !== undefined) {\n    const delta = angle - this.lastAngle_;\n    this.rotationDelta_ += delta;\n    if (!this.rotating_ &&\n        Math.abs(this.rotationDelta_) > this.threshold_) {\n      this.rotating_ = true;\n    }\n    rotationDelta = delta;\n  }\n  this.lastAngle_ = angle;\n\n  const map = mapBrowserEvent.map;\n  const view = map.getView();\n  if (view.getConstraints().rotation === disable) {\n    return;\n  }\n\n  // rotate anchor point.\n  // FIXME: should be the intersection point between the lines:\n  //     touch0,touch1 and previousTouch0,previousTouch1\n  const viewportPosition = map.getViewport().getBoundingClientRect();\n  const centroid = centroidFromPointers(this.targetPointers);\n  centroid[0] -= viewportPosition.left;\n  centroid[1] -= viewportPosition.top;\n  this.anchor_ = map.getCoordinateFromPixel(centroid);\n\n  // rotate\n  if (this.rotating_) {\n    const rotation = view.getRotation();\n    map.render();\n    rotateWithoutConstraints(view, rotation + rotationDelta, this.anchor_);\n  }\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/PinchRotate}\n */\nfunction handleUpEvent(mapBrowserEvent) {\n  if (this.targetPointers.length < 2) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.setHint(ViewHint.INTERACTING, -1);\n    if (this.rotating_) {\n      const rotation = view.getRotation();\n      rotate(view, rotation, this.anchor_, this.duration_);\n    }\n    return false;\n  } else {\n    return true;\n  }\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Start drag sequence?\n * @this {module:ol/interaction/PinchRotate}\n */\nfunction handleDownEvent(mapBrowserEvent) {\n  if (this.targetPointers.length >= 2) {\n    const map = mapBrowserEvent.map;\n    this.anchor_ = null;\n    this.lastAngle_ = undefined;\n    this.rotating_ = false;\n    this.rotationDelta_ = 0.0;\n    if (!this.handlingDownUpSequence) {\n      map.getView().setHint(ViewHint.INTERACTING, 1);\n    }\n    return true;\n  } else {\n    return false;\n  }\n}\n\n\n/**\n * @inheritDoc\n */\nPinchRotate.prototype.shouldStopEvent = FALSE;\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport {inherits} from '../index.js';\nimport ViewHint from '../ViewHint.js';\nimport {FALSE} from '../functions.js';\nimport {zoom, zoomWithoutConstraints} from '../interaction/Interaction.js';\nimport PointerInteraction, {centroid as centroidFromPointers} from '../interaction/Pointer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n * @property {boolean} [constrainResolution=false] Zoom to the closest integer\n * zoom level after the pinch gesture ends.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n *\n * @constructor\n * @extends {module:ol/interaction/Pointer}\n * @param {module:ol/interaction/PinchZoom~Options=} opt_options Options.\n * @api\n */\nconst PinchZoom = function(opt_options) {\n\n  PointerInteraction.call(this, {\n    handleDownEvent: handleDownEvent,\n    handleDragEvent: handleDragEvent,\n    handleUpEvent: handleUpEvent\n  });\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.constrainResolution_ = options.constrainResolution || false;\n\n  /**\n   * @private\n   * @type {module:ol/coordinate~Coordinate}\n   */\n  this.anchor_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.lastDistance_ = undefined;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.lastScaleDelta_ = 1;\n\n};\n\ninherits(PinchZoom, PointerInteraction);\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @this {module:ol/interaction/PinchZoom}\n */\nfunction handleDragEvent(mapBrowserEvent) {\n  let scaleDelta = 1.0;\n\n  const touch0 = this.targetPointers[0];\n  const touch1 = this.targetPointers[1];\n  const dx = touch0.clientX - touch1.clientX;\n  const dy = touch0.clientY - touch1.clientY;\n\n  // distance between touches\n  const distance = Math.sqrt(dx * dx + dy * dy);\n\n  if (this.lastDistance_ !== undefined) {\n    scaleDelta = this.lastDistance_ / distance;\n  }\n  this.lastDistance_ = distance;\n\n\n  const map = mapBrowserEvent.map;\n  const view = map.getView();\n  const resolution = view.getResolution();\n  const maxResolution = view.getMaxResolution();\n  const minResolution = view.getMinResolution();\n  let newResolution = resolution * scaleDelta;\n  if (newResolution > maxResolution) {\n    scaleDelta = maxResolution / resolution;\n    newResolution = maxResolution;\n  } else if (newResolution < minResolution) {\n    scaleDelta = minResolution / resolution;\n    newResolution = minResolution;\n  }\n\n  if (scaleDelta != 1.0) {\n    this.lastScaleDelta_ = scaleDelta;\n  }\n\n  // scale anchor point.\n  const viewportPosition = map.getViewport().getBoundingClientRect();\n  const centroid = centroidFromPointers(this.targetPointers);\n  centroid[0] -= viewportPosition.left;\n  centroid[1] -= viewportPosition.top;\n  this.anchor_ = map.getCoordinateFromPixel(centroid);\n\n  // scale, bypass the resolution constraint\n  map.render();\n  zoomWithoutConstraints(view, newResolution, this.anchor_);\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/PinchZoom}\n */\nfunction handleUpEvent(mapBrowserEvent) {\n  if (this.targetPointers.length < 2) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.setHint(ViewHint.INTERACTING, -1);\n    const resolution = view.getResolution();\n    if (this.constrainResolution_ ||\n        resolution < view.getMinResolution() ||\n        resolution > view.getMaxResolution()) {\n      // Zoom to final resolution, with an animation, and provide a\n      // direction not to zoom out/in if user was pinching in/out.\n      // Direction is > 0 if pinching out, and < 0 if pinching in.\n      const direction = this.lastScaleDelta_ - 1;\n      zoom(view, resolution, this.anchor_, this.duration_, direction);\n    }\n    return false;\n  } else {\n    return true;\n  }\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Start drag sequence?\n * @this {module:ol/interaction/PinchZoom}\n */\nfunction handleDownEvent(mapBrowserEvent) {\n  if (this.targetPointers.length >= 2) {\n    const map = mapBrowserEvent.map;\n    this.anchor_ = null;\n    this.lastDistance_ = undefined;\n    this.lastScaleDelta_ = 1;\n    if (!this.handlingDownUpSequence) {\n      map.getView().setHint(ViewHint.INTERACTING, 1);\n    }\n    return true;\n  } else {\n    return false;\n  }\n}\n\n\n/**\n * @inheritDoc\n */\nPinchZoom.prototype.shouldStopEvent = FALSE;\nexport default PinchZoom;\n","/**\n * @module ol/interaction/DragAndDrop\n */\n// FIXME should handle all geo-referenced data, not just vector data\n\nimport {inherits} from '../index.js';\nimport {TRUE} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport Interaction from '../interaction/Interaction.js';\nimport {get as getProjection} from '../proj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {Array.<function(new: module:ol/format/Feature)>} [formatConstructors] Format constructors.\n * @property {module:ol/source/Vector} [source] Optional vector source where features will be added.  If a source is provided\n * all existing features will be removed and new features will be added when\n * they are dropped on the target.  If you want to add features to a vector\n * source without removing the existing features (append only), instead of\n * providing the source option listen for the \"addfeatures\" event.\n * @property {module:ol/proj~ProjectionLike} [projection] Target projection. By default, the map's view's projection is used.\n * @property {Element} [target] The element that is used as the drop target, default is the viewport element.\n */\n\n\n/**\n * @enum {string}\n */\nconst DragAndDropEventType = {\n  /**\n   * Triggered when features are added\n   * @event module:ol/interaction/DragAndDrop~DragAndDropEvent#addfeatures\n   * @api\n   */\n  ADD_FEATURES: 'addfeatures'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragAndDrop~DragAndDrop} instances are instances\n * of this type.\n *\n * @constructor\n * @extends {module:ol/events/Event}\n * @param {module:ol/interaction/DragAndDrop~DragAndDropEventType} type Type.\n * @param {File} file File.\n * @param {Array.<module:ol/Feature>=} opt_features Features.\n * @param {module:ol/proj/Projection=} opt_projection Projection.\n */\nconst DragAndDropEvent = function(type, file, opt_features, opt_projection) {\n\n  Event.call(this, type);\n\n  /**\n   * The features parsed from dropped data.\n   * @type {Array.<module:ol/Feature>|undefined}\n   * @api\n   */\n  this.features = opt_features;\n\n  /**\n   * The dropped file.\n   * @type {File}\n   * @api\n   */\n  this.file = file;\n\n  /**\n   * The feature projection.\n   * @type {module:ol/proj/Projection|undefined}\n   * @api\n   */\n  this.projection = opt_projection;\n\n};\ninherits(DragAndDropEvent, Event);\n\n\n/**\n * @classdesc\n * Handles input of vector data by drag and drop.\n *\n * @constructor\n * @extends {module:ol/interaction/Interaction}\n * @fires module:ol/interaction/DragAndDrop~DragAndDropEvent\n * @param {module:ol/interaction/DragAndDrop~Options=} opt_options Options.\n * @api\n */\nconst DragAndDrop = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  Interaction.call(this, {\n    handleEvent: TRUE\n  });\n\n  /**\n   * @private\n   * @type {Array.<function(new: module:ol/format/Feature)>}\n   */\n  this.formatConstructors_ = options.formatConstructors ?\n    options.formatConstructors : [];\n\n  /**\n   * @private\n   * @type {module:ol/proj/Projection}\n   */\n  this.projection_ = options.projection ?\n    getProjection(options.projection) : null;\n\n  /**\n   * @private\n   * @type {Array.<module:ol/events~EventsKey>}\n   */\n  this.dropListenKeys_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/source/Vector}\n   */\n  this.source_ = options.source || null;\n\n  /**\n   * @private\n   * @type {Element}\n   */\n  this.target = options.target ? options.target : null;\n\n};\n\ninherits(DragAndDrop, Interaction);\n\n\n/**\n * @param {DragEvent} event Event.\n * @this {module:ol/interaction/DragAndDrop}\n */\nfunction handleDrop(event) {\n  const files = event.dataTransfer.files;\n  for (let i = 0, ii = files.length; i < ii; ++i) {\n    const file = files.item(i);\n    const reader = new FileReader();\n    reader.addEventListener(EventType.LOAD, this.handleResult_.bind(this, file));\n    reader.readAsText(file);\n  }\n}\n\n\n/**\n * @param {DragEvent} event Event.\n */\nfunction handleStop(event) {\n  event.stopPropagation();\n  event.preventDefault();\n  event.dataTransfer.dropEffect = 'copy';\n}\n\n\n/**\n * @param {File} file File.\n * @param {Event} event Load event.\n * @private\n */\nDragAndDrop.prototype.handleResult_ = function(file, event) {\n  const result = event.target.result;\n  const map = this.getMap();\n  let projection = this.projection_;\n  if (!projection) {\n    const view = map.getView();\n    projection = view.getProjection();\n  }\n\n  const formatConstructors = this.formatConstructors_;\n  let features = [];\n  for (let i = 0, ii = formatConstructors.length; i < ii; ++i) {\n    /**\n     * Avoid \"cannot instantiate abstract class\" error.\n     * @type {Function}\n     */\n    const formatConstructor = formatConstructors[i];\n    /**\n     * @type {module:ol/format/Feature}\n     */\n    const format = new formatConstructor();\n    features = this.tryReadFeatures_(format, result, {\n      featureProjection: projection\n    });\n    if (features && features.length > 0) {\n      break;\n    }\n  }\n  if (this.source_) {\n    this.source_.clear();\n    this.source_.addFeatures(features);\n  }\n  this.dispatchEvent(\n    new DragAndDropEvent(\n      DragAndDropEventType.ADD_FEATURES, file,\n      features, projection));\n};\n\n\n/**\n * @private\n */\nDragAndDrop.prototype.registerListeners_ = function() {\n  const map = this.getMap();\n  if (map) {\n    const dropArea = this.target ? this.target : map.getViewport();\n    this.dropListenKeys_ = [\n      listen(dropArea, EventType.DROP, handleDrop, this),\n      listen(dropArea, EventType.DRAGENTER, handleStop, this),\n      listen(dropArea, EventType.DRAGOVER, handleStop, this),\n      listen(dropArea, EventType.DROP, handleStop, this)\n    ];\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nDragAndDrop.prototype.setActive = function(active) {\n  Interaction.prototype.setActive.call(this, active);\n  if (active) {\n    this.registerListeners_();\n  } else {\n    this.unregisterListeners_();\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nDragAndDrop.prototype.setMap = function(map) {\n  this.unregisterListeners_();\n  Interaction.prototype.setMap.call(this, map);\n  if (this.getActive()) {\n    this.registerListeners_();\n  }\n};\n\n\n/**\n * @param {module:ol/format/Feature} format Format.\n * @param {string} text Text.\n * @param {module:ol/format/Feature~ReadOptions} options Read options.\n * @private\n * @return {Array.<module:ol/Feature>} Features.\n */\nDragAndDrop.prototype.tryReadFeatures_ = function(format, text, options) {\n  try {\n    return format.readFeatures(text, options);\n  } catch (e) {\n    return null;\n  }\n};\n\n\n/**\n * @private\n */\nDragAndDrop.prototype.unregisterListeners_ = function() {\n  if (this.dropListenKeys_) {\n    this.dropListenKeys_.forEach(unlistenByKey);\n    this.dropListenKeys_ = null;\n  }\n};\n\n\nexport default DragAndDrop;\n","/**\n * @module ol/interaction/DragRotateAndZoom\n */\nimport {inherits} from '../index.js';\nimport {disable} from '../rotationconstraint.js';\nimport ViewHint from '../ViewHint.js';\nimport {shiftKeyOnly, mouseOnly} from '../events/condition.js';\nimport {rotate, rotateWithoutConstraints, zoom, zoomWithoutConstraints} from '../interaction/Interaction.js';\nimport PointerInteraction from '../interaction/Pointer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/events/condition~Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~shiftKeyOnly}.\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom and rotate the map by clicking and dragging\n * on the map.  By default, this interaction is limited to when the shift\n * key is held down.\n *\n * This interaction is only supported for mouse devices.\n *\n * And this interaction is not included in the default interactions.\n *\n * @constructor\n * @extends {module:ol/interaction/Pointer}\n * @param {module:ol/interaction/DragRotateAndZoom~Options=} opt_options Options.\n * @api\n */\nconst DragRotateAndZoom = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  PointerInteraction.call(this, {\n    handleDownEvent: handleDownEvent,\n    handleDragEvent: handleDragEvent,\n    handleUpEvent: handleUpEvent\n  });\n\n  /**\n   * @private\n   * @type {module:ol/events/condition~Condition}\n   */\n  this.condition_ = options.condition ? options.condition : shiftKeyOnly;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.lastAngle_ = undefined;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.lastMagnitude_ = undefined;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.lastScaleDelta_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n};\n\ninherits(DragRotateAndZoom, PointerInteraction);\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @this {module:ol/interaction/DragRotateAndZoom}\n */\nfunction handleDragEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return;\n  }\n\n  const map = mapBrowserEvent.map;\n  const size = map.getSize();\n  const offset = mapBrowserEvent.pixel;\n  const deltaX = offset[0] - size[0] / 2;\n  const deltaY = size[1] / 2 - offset[1];\n  const theta = Math.atan2(deltaY, deltaX);\n  const magnitude = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n  const view = map.getView();\n  if (view.getConstraints().rotation !== disable && this.lastAngle_ !== undefined) {\n    const angleDelta = theta - this.lastAngle_;\n    rotateWithoutConstraints(view, view.getRotation() - angleDelta);\n  }\n  this.lastAngle_ = theta;\n  if (this.lastMagnitude_ !== undefined) {\n    const resolution = this.lastMagnitude_ * (view.getResolution() / magnitude);\n    zoomWithoutConstraints(view, resolution);\n  }\n  if (this.lastMagnitude_ !== undefined) {\n    this.lastScaleDelta_ = this.lastMagnitude_ / magnitude;\n  }\n  this.lastMagnitude_ = magnitude;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/DragRotateAndZoom}\n */\nfunction handleUpEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return true;\n  }\n\n  const map = mapBrowserEvent.map;\n  const view = map.getView();\n  view.setHint(ViewHint.INTERACTING, -1);\n  const direction = this.lastScaleDelta_ - 1;\n  rotate(view, view.getRotation());\n  zoom(view, view.getResolution(), undefined, this.duration_, direction);\n  this.lastScaleDelta_ = 0;\n  return false;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Start drag sequence?\n * @this {module:ol/interaction/DragRotateAndZoom}\n */\nfunction handleDownEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return false;\n  }\n\n  if (this.condition_(mapBrowserEvent)) {\n    mapBrowserEvent.map.getView().setHint(ViewHint.INTERACTING, 1);\n    this.lastAngle_ = undefined;\n    this.lastMagnitude_ = undefined;\n    return true;\n  } else {\n    return false;\n  }\n}\n\nexport default DragRotateAndZoom;\n","/**\n * @module ol/color\n */\nimport {assert} from './asserts.js';\nimport {clamp} from './math.js';\n\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array.<number>} Color\n * @api\n */\n\n\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nconst HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n\n\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nconst NAMED_COLOR_RE_ = /^([a-z]*)$/i;\n\n\n/**\n * Return the color as an rgba string.\n * @param {module:ol/color~Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  } else {\n    return toString(color);\n  }\n}\n\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n  const el = document.createElement('div');\n  el.style.color = color;\n  if (el.style.color !== '') {\n    document.body.appendChild(el);\n    const rgb = getComputedStyle(el).color;\n    document.body.removeChild(el);\n    return rgb;\n  } else {\n    return '';\n  }\n}\n\n\n/**\n * @param {string} s String.\n * @return {module:ol/color~Color} Color.\n */\nexport const fromString = (\n  function() {\n\n    // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n    // semantics, whenever the cache grows too large we simply delete an\n    // arbitrary 25% of the entries.\n\n    /**\n     * @const\n     * @type {number}\n     */\n    const MAX_CACHE_SIZE = 1024;\n\n    /**\n     * @type {Object.<string, module:ol/color~Color>}\n     */\n    const cache = {};\n\n    /**\n     * @type {number}\n     */\n    let cacheSize = 0;\n\n    return (\n      /**\n       * @param {string} s String.\n       * @return {module:ol/color~Color} Color.\n       */\n      function(s) {\n        let color;\n        if (cache.hasOwnProperty(s)) {\n          color = cache[s];\n        } else {\n          if (cacheSize >= MAX_CACHE_SIZE) {\n            let i = 0;\n            for (const key in cache) {\n              if ((i++ & 3) === 0) {\n                delete cache[key];\n                --cacheSize;\n              }\n            }\n          }\n          color = fromStringInternal_(s);\n          cache[s] = color;\n          ++cacheSize;\n        }\n        return color;\n      }\n    );\n\n  })();\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {module:ol/color~Color|string} color Color.\n * @return {module:ol/color~Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  } else {\n    return fromString(/** @type {string} */ (color));\n  }\n}\n\n/**\n * @param {string} s String.\n * @private\n * @return {module:ol/color~Color} Color.\n */\nfunction fromStringInternal_(s) {\n  let r, g, b, a, color;\n\n  if (NAMED_COLOR_RE_.exec(s)) {\n    s = fromNamed(s);\n  }\n\n  if (HEX_COLOR_RE_.exec(s)) { // hex\n    const n = s.length - 1; // number of hex digits\n    let d; // number of digits per channel\n    if (n <= 4) {\n      d = 1;\n    } else {\n      d = 2;\n    }\n    const hasAlpha = n === 4 || n === 8;\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\n    if (hasAlpha) {\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\n    } else {\n      a = 255;\n    }\n    if (d == 1) {\n      r = (r << 4) + r;\n      g = (g << 4) + g;\n      b = (b << 4) + b;\n      if (hasAlpha) {\n        a = (a << 4) + a;\n      }\n    }\n    color = [r, g, b, a / 255];\n  } else if (s.indexOf('rgba(') == 0) { // rgba()\n    color = s.slice(5, -1).split(',').map(Number);\n    normalize(color);\n  } else if (s.indexOf('rgb(') == 0) { // rgb()\n    color = s.slice(4, -1).split(',').map(Number);\n    color.push(1);\n    normalize(color);\n  } else {\n    assert(false, 14); // Invalid color\n  }\n  return (\n    /** @type {module:ol/color~Color} */ (color)\n  );\n}\n\n\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {module:ol/color~Color} color Color.\n * @return {module:ol/color~Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n\n/**\n * @param {module:ol/color~Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : color[3];\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n","/**\n * @module ol/colorlike\n */\nimport {toString} from './color.js';\n\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n\n/**\n * @param {module:ol/color~Color|module:ol/colorlike~ColorLike} color Color.\n * @return {module:ol/colorlike~ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (isColorLike(color)) {\n    return /** @type {string|CanvasPattern|CanvasGradient} */ (color);\n  } else {\n    return toString(/** @type {module:ol/color~Color} */ (color));\n  }\n}\n\n\n/**\n * @param {?} color The value that is potentially an {@link ol/colorlike~ColorLike}.\n * @return {boolean} The color is an {@link ol/colorlike~ColorLike}.\n */\nexport function isColorLike(color) {\n  return (\n    typeof color === 'string' ||\n    color instanceof CanvasPattern ||\n    color instanceof CanvasGradient\n  );\n}\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3\n};\n","/**\n * @module ol/structs/LRUCache\n */\nimport {inherits} from '../index.js';\nimport {assert} from '../asserts.js';\nimport EventTarget from '../events/EventTarget.js';\nimport EventType from '../events/EventType.js';\n\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_\n * @property {Object} newer\n * @property {Object} older\n * @property {*} value_\n */\n\n\n/**\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n * @constructor\n * @extends {module:ol/events/EventTarget}\n * @fires module:ol/events/Event~Event\n * @struct\n * @template T\n * @param {number=} opt_highWaterMark High water mark.\n */\nconst LRUCache = function(opt_highWaterMark) {\n\n  EventTarget.call(this);\n\n  /**\n   * @type {number}\n   */\n  this.highWaterMark = opt_highWaterMark !== undefined ? opt_highWaterMark : 2048;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.count_ = 0;\n\n  /**\n   * @private\n   * @type {!Object.<string, module:ol/structs/LRUCache~Entry>}\n   */\n  this.entries_ = {};\n\n  /**\n   * @private\n   * @type {?module:ol/structs/LRUCache~Entry}\n   */\n  this.oldest_ = null;\n\n  /**\n   * @private\n   * @type {?module:ol/structs/LRUCache~Entry}\n   */\n  this.newest_ = null;\n\n};\n\ninherits(LRUCache, EventTarget);\n\n\n/**\n * @return {boolean} Can expire cache.\n */\nLRUCache.prototype.canExpireCache = function() {\n  return this.getCount() > this.highWaterMark;\n};\n\n\n/**\n * FIXME empty description for jsdoc\n */\nLRUCache.prototype.clear = function() {\n  this.count_ = 0;\n  this.entries_ = {};\n  this.oldest_ = null;\n  this.newest_ = null;\n  this.dispatchEvent(EventType.CLEAR);\n};\n\n\n/**\n * @param {string} key Key.\n * @return {boolean} Contains key.\n */\nLRUCache.prototype.containsKey = function(key) {\n  return this.entries_.hasOwnProperty(key);\n};\n\n\n/**\n * @param {function(this: S, T, string, module:ol/structs/LRUCache): ?} f The function\n *     to call for every entry from the oldest to the newer. This function takes\n *     3 arguments (the entry value, the entry key and the LRUCache object).\n *     The return value is ignored.\n * @param {S=} opt_this The object to use as `this` in `f`.\n * @template S\n */\nLRUCache.prototype.forEach = function(f, opt_this) {\n  let entry = this.oldest_;\n  while (entry) {\n    f.call(opt_this, entry.value_, entry.key_, this);\n    entry = entry.newer;\n  }\n};\n\n\n/**\n * @param {string} key Key.\n * @return {T} Value.\n */\nLRUCache.prototype.get = function(key) {\n  const entry = this.entries_[key];\n  assert(entry !== undefined,\n    15); // Tried to get a value for a key that does not exist in the cache\n  if (entry === this.newest_) {\n    return entry.value_;\n  } else if (entry === this.oldest_) {\n    this.oldest_ = /** @type {module:ol/structs/LRUCache~Entry} */ (this.oldest_.newer);\n    this.oldest_.older = null;\n  } else {\n    entry.newer.older = entry.older;\n    entry.older.newer = entry.newer;\n  }\n  entry.newer = null;\n  entry.older = this.newest_;\n  this.newest_.newer = entry;\n  this.newest_ = entry;\n  return entry.value_;\n};\n\n\n/**\n * Remove an entry from the cache.\n * @param {string} key The entry key.\n * @return {T} The removed entry.\n */\nLRUCache.prototype.remove = function(key) {\n  const entry = this.entries_[key];\n  assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n  if (entry === this.newest_) {\n    this.newest_ = /** @type {module:ol/structs/LRUCache~Entry} */ (entry.older);\n    if (this.newest_) {\n      this.newest_.newer = null;\n    }\n  } else if (entry === this.oldest_) {\n    this.oldest_ = /** @type {module:ol/structs/LRUCache~Entry} */ (entry.newer);\n    if (this.oldest_) {\n      this.oldest_.older = null;\n    }\n  } else {\n    entry.newer.older = entry.older;\n    entry.older.newer = entry.newer;\n  }\n  delete this.entries_[key];\n  --this.count_;\n  return entry.value_;\n};\n\n\n/**\n * @return {number} Count.\n */\nLRUCache.prototype.getCount = function() {\n  return this.count_;\n};\n\n\n/**\n * @return {Array.<string>} Keys.\n */\nLRUCache.prototype.getKeys = function() {\n  const keys = new Array(this.count_);\n  let i = 0;\n  let entry;\n  for (entry = this.newest_; entry; entry = entry.older) {\n    keys[i++] = entry.key_;\n  }\n  return keys;\n};\n\n\n/**\n * @return {Array.<T>} Values.\n */\nLRUCache.prototype.getValues = function() {\n  const values = new Array(this.count_);\n  let i = 0;\n  let entry;\n  for (entry = this.newest_; entry; entry = entry.older) {\n    values[i++] = entry.value_;\n  }\n  return values;\n};\n\n\n/**\n * @return {T} Last value.\n */\nLRUCache.prototype.peekLast = function() {\n  return this.oldest_.value_;\n};\n\n\n/**\n * @return {string} Last key.\n */\nLRUCache.prototype.peekLastKey = function() {\n  return this.oldest_.key_;\n};\n\n\n/**\n * Get the key of the newest item in the cache.  Throws if the cache is empty.\n * @return {string} The newest key.\n */\nLRUCache.prototype.peekFirstKey = function() {\n  return this.newest_.key_;\n};\n\n\n/**\n * @return {T} value Value.\n */\nLRUCache.prototype.pop = function() {\n  const entry = this.oldest_;\n  delete this.entries_[entry.key_];\n  if (entry.newer) {\n    entry.newer.older = null;\n  }\n  this.oldest_ = /** @type {module:ol/structs/LRUCache~Entry} */ (entry.newer);\n  if (!this.oldest_) {\n    this.newest_ = null;\n  }\n  --this.count_;\n  return entry.value_;\n};\n\n\n/**\n * @param {string} key Key.\n * @param {T} value Value.\n */\nLRUCache.prototype.replace = function(key, value) {\n  this.get(key);  // update `newest_`\n  this.entries_[key].value_ = value;\n};\n\n\n/**\n * @param {string} key Key.\n * @param {T} value Value.\n */\nLRUCache.prototype.set = function(key, value) {\n  assert(!(key in this.entries_),\n    16); // Tried to set a value for a key that is used already\n  const entry = /** @type {module:ol/structs/LRUCache~Entry} */ ({\n    key_: key,\n    newer: null,\n    older: this.newest_,\n    value_: value\n  });\n  if (!this.newest_) {\n    this.oldest_ = entry;\n  } else {\n    this.newest_.newer = entry;\n  }\n  this.newest_ = entry;\n  this.entries_[key] = entry;\n  ++this.count_;\n};\n\n\n/**\n * Set a maximum number of entries for the cache.\n * @param {number} size Cache size.\n * @api\n */\nLRUCache.prototype.setSize = function(size) {\n  this.highWaterMark = size;\n};\n\n\n/**\n * Prune the cache.\n */\nLRUCache.prototype.prune = function() {\n  while (this.canExpireCache()) {\n    this.pop();\n  }\n};\nexport default LRUCache;\n","/**\n * @module ol/render/canvas\n */\nimport {getFontFamilies} from '../css.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {clear} from '../obj.js';\nimport LRUCache from '../structs/LRUCache.js';\nimport {create as createTransform} from '../transform.js';\n\n\n/**\n * @typedef {Object} FillState\n * @property {module:ol/colorlike~ColorLike} fillStyle\n */\n\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {module:ol/colorlike~ColorLike} [currentFillStyle]\n * @property {module:ol/colorlike~ColorLike} [currentStrokeStyle]\n * @property {string} [currentLineCap]\n * @property {Array.<number>} currentLineDash\n * @property {number} [currentLineDashOffset]\n * @property {string} [currentLineJoin]\n * @property {number} [currentLineWidth]\n * @property {number} [currentMiterLimit]\n * @property {number} [lastStroke]\n * @property {module:ol/colorlike~ColorLike} [fillStyle]\n * @property {module:ol/colorlike~ColorLike} [strokeStyle]\n * @property {string} [lineCap]\n * @property {Array.<number>} lineDash\n * @property {number} [lineDashOffset]\n * @property {string} [lineJoin]\n * @property {number} [lineWidth]\n * @property {number} [miterLimit]\n */\n\n\n/**\n * @typedef {Object} StrokeState\n * @property {string} lineCap\n * @property {Array.<number>} lineDash\n * @property {number} lineDashOffset\n * @property {string} lineJoin\n * @property {number} lineWidth\n * @property {number} miterLimit\n * @property {module:ol/colorlike~ColorLike} strokeStyle\n */\n\n\n/**\n * @typedef {Object} TextState\n * @property {string} font\n * @property {string} [textAlign]\n * @property {string} textBaseline\n */\n\n\n/**\n * Container for decluttered replay instructions that need to be rendered or\n * omitted together, i.e. when styles render both an image and text, or for the\n * characters that form text along lines. The basic elements of this array are\n * `[minX, minY, maxX, maxY, count]`, where the first four entries are the\n * rendered extent of the group in pixel space. `count` is the number of styles\n * in the group, i.e. 2 when an image and a text are grouped, or 1 otherwise.\n * In addition to these four elements, declutter instruction arrays (i.e. the\n * arguments to {@link module:ol/render/canvas~drawImage} are appended to the array.\n * @typedef {Array.<*>} DeclutterGroup\n */\n\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n\n/**\n * @const\n * @type {module:ol/color~Color}\n */\nexport const defaultFillStyle = [0, 0, 0, 1];\n\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultLineCap = 'round';\n\n\n/**\n * @const\n * @type {Array.<number>}\n */\nexport const defaultLineDash = [];\n\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultLineJoin = 'round';\n\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n\n/**\n * @const\n * @type {module:ol/color~Color}\n */\nexport const defaultStrokeStyle = [0, 0, 0, 1];\n\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultTextAlign = 'center';\n\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultTextBaseline = 'middle';\n\n\n/**\n * @const\n * @type {Array.<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n\n/**\n * The label cache for text rendering. To change the default cache size of 2048\n * entries, use {@link module:ol/structs/LRUCache#setSize}.\n * @type {module:ol/structs/LRUCache.<HTMLCanvasElement>}\n * @api\n */\nexport const labelCache = new LRUCache();\n\n\n/**\n * @type {!Object.<string, number>}\n */\nexport const checkedFonts = {};\n\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n\n/**\n * @type {!Object.<string, number>}\n */\nexport const textHeights = {};\n\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const checkFont = (function() {\n  const retries = 60;\n  const checked = checkedFonts;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  function isAvailable(font) {\n    const context = getMeasureContext();\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      context.font = size + referenceFont;\n      referenceWidth = context.measureText(text).width;\n      if (font != referenceFont) {\n        context.font = size + font + ',' + referenceFont;\n        const width = context.measureText(text).width;\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    return available;\n  }\n\n  function check() {\n    let done = true;\n    for (const font in checked) {\n      if (checked[font] < retries) {\n        if (isAvailable(font)) {\n          checked[font] = retries;\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          labelCache.clear();\n        } else {\n          ++checked[font];\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function(fontSpec) {\n    const fontFamilies = getFontFamilies(fontSpec);\n    if (!fontFamilies) {\n      return;\n    }\n    for (let i = 0, ii = fontFamilies.length; i < ii; ++i) {\n      const fontFamily = fontFamilies[i];\n      if (!(fontFamily in checked)) {\n        checked[fontFamily] = retries;\n        if (!isAvailable(fontFamily)) {\n          checked[fontFamily] = 0;\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n\n/**\n * @return {CanvasRenderingContext2D} Measure context.\n */\nfunction getMeasureContext() {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  return measureContext;\n}\n\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {module:ol/size~Size} Measurement.\n */\nexport const measureTextHeight = (function() {\n  let span;\n  const heights = textHeights;\n  return function(font) {\n    let height = heights[font];\n    if (height == undefined) {\n      if (!span) {\n        span = document.createElement('span');\n        span.textContent = 'M';\n        span.style.margin = span.style.padding = '0 !important';\n        span.style.position = 'absolute !important';\n        span.style.left = '-99999px !important';\n      }\n      span.style.font = font;\n      document.body.appendChild(span);\n      height = heights[font] = span.offsetHeight;\n      document.body.removeChild(span);\n    }\n    return height;\n  };\n})();\n\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  const measureContext = getMeasureContext();\n  if (font != measureContext.font) {\n    measureContext.font = font;\n  }\n  return measureContext.measureText(text).width;\n}\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n\nexport const resetTransform = createTransform();\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {module:ol/transform~Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} image Image.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} scale Scale.\n */\nexport function drawImage(context,\n  transform, opacity, image, originX, originY, w, h, x, y, scale) {\n  let alpha;\n  if (opacity != 1) {\n    alpha = context.globalAlpha;\n    context.globalAlpha = alpha * opacity;\n  }\n  if (transform) {\n    context.setTransform.apply(context, transform);\n  }\n\n  context.drawImage(image, originX, originY, w, h, x, y, w * scale, h * scale);\n\n  if (alpha) {\n    context.globalAlpha = alpha;\n  }\n  if (transform) {\n    context.setTransform.apply(context, resetTransform);\n  }\n}\n","/**\n * @module ol/style/Image\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity\n * @property {boolean} rotateWithView\n * @property {number} rotation\n * @property {number} scale\n * @property {boolean} snapToPixel\n */\n\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n *\n * @constructor\n * @abstract\n * @param {module:ol/style/Image~Options} options Options.\n * @api\n */\nconst ImageStyle = function(options) {\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.opacity_ = options.opacity;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.rotateWithView_ = options.rotateWithView;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.rotation_ = options.rotation;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.scale_ = options.scale;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.snapToPixel_ = options.snapToPixel;\n\n};\n\n\n/**\n * Get the symbolizer opacity.\n * @return {number} Opacity.\n * @api\n */\nImageStyle.prototype.getOpacity = function() {\n  return this.opacity_;\n};\n\n\n/**\n * Determine whether the symbolizer rotates with the map.\n * @return {boolean} Rotate with map.\n * @api\n */\nImageStyle.prototype.getRotateWithView = function() {\n  return this.rotateWithView_;\n};\n\n\n/**\n * Get the symoblizer rotation.\n * @return {number} Rotation.\n * @api\n */\nImageStyle.prototype.getRotation = function() {\n  return this.rotation_;\n};\n\n\n/**\n * Get the symbolizer scale.\n * @return {number} Scale.\n * @api\n */\nImageStyle.prototype.getScale = function() {\n  return this.scale_;\n};\n\n\n/**\n * Determine whether the symbolizer should be snapped to a pixel.\n * @return {boolean} The symbolizer should snap to a pixel.\n * @api\n */\nImageStyle.prototype.getSnapToPixel = function() {\n  return this.snapToPixel_;\n};\n\n\n/**\n * Get the anchor point in pixels. The anchor determines the center point for the\n * symbolizer.\n * @abstract\n * @return {Array.<number>} Anchor.\n */\nImageStyle.prototype.getAnchor = function() {};\n\n\n/**\n * Get the image element for the symbolizer.\n * @abstract\n * @param {number} pixelRatio Pixel ratio.\n * @return {HTMLCanvasElement|HTMLVideoElement|Image} Image element.\n */\nImageStyle.prototype.getImage = function(pixelRatio) {};\n\n\n/**\n * @abstract\n * @param {number} pixelRatio Pixel ratio.\n * @return {HTMLCanvasElement|HTMLVideoElement|Image} Image element.\n */\nImageStyle.prototype.getHitDetectionImage = function(pixelRatio) {};\n\n\n/**\n * @abstract\n * @return {module:ol/ImageState} Image state.\n */\nImageStyle.prototype.getImageState = function() {};\n\n\n/**\n * @abstract\n * @return {module:ol/size~Size} Image size.\n */\nImageStyle.prototype.getImageSize = function() {};\n\n\n/**\n * @abstract\n * @return {module:ol/size~Size} Size of the hit-detection image.\n */\nImageStyle.prototype.getHitDetectionImageSize = function() {};\n\n\n/**\n * Get the origin of the symbolizer.\n * @abstract\n * @return {Array.<number>} Origin.\n */\nImageStyle.prototype.getOrigin = function() {};\n\n\n/**\n * Get the size of the symbolizer (in pixels).\n * @abstract\n * @return {module:ol/size~Size} Size.\n */\nImageStyle.prototype.getSize = function() {};\n\n\n/**\n * Set the opacity.\n *\n * @param {number} opacity Opacity.\n * @api\n */\nImageStyle.prototype.setOpacity = function(opacity) {\n  this.opacity_ = opacity;\n};\n\n\n/**\n * Set whether to rotate the style with the view.\n *\n * @param {boolean} rotateWithView Rotate with map.\n * @api\n */\nImageStyle.prototype.setRotateWithView = function(rotateWithView) {\n  this.rotateWithView_ = rotateWithView;\n};\n\n\n/**\n * Set the rotation.\n *\n * @param {number} rotation Rotation.\n * @api\n */\nImageStyle.prototype.setRotation = function(rotation) {\n  this.rotation_ = rotation;\n};\n\n\n/**\n * Set the scale.\n *\n * @param {number} scale Scale.\n * @api\n */\nImageStyle.prototype.setScale = function(scale) {\n  this.scale_ = scale;\n};\n\n\n/**\n * Set whether to snap the image to the closest pixel.\n *\n * @param {boolean} snapToPixel Snap to pixel?\n * @api\n */\nImageStyle.prototype.setSnapToPixel = function(snapToPixel) {\n  this.snapToPixel_ = snapToPixel;\n};\n\n\n/**\n * @abstract\n * @param {function(this: T, module:ol/events/Event)} listener Listener function.\n * @param {T} thisArg Value to use as `this` when executing `listener`.\n * @return {module:ol/events~EventsKey|undefined} Listener key.\n * @template T\n */\nImageStyle.prototype.listenImageChange = function(listener, thisArg) {};\n\n\n/**\n * Load not yet loaded URI.\n * @abstract\n */\nImageStyle.prototype.load = function() {};\n\n\n/**\n * @abstract\n * @param {function(this: T, module:ol/events/Event)} listener Listener function.\n * @param {T} thisArg Value to use as `this` when executing `listener`.\n * @template T\n */\nImageStyle.prototype.unlistenImageChange = function(listener, thisArg) {};\nexport default ImageStyle;\n","/**\n * @module ol/style/RegularShape\n */\nimport {inherits} from '../index.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {CANVAS_LINE_DASH} from '../has.js';\nimport ImageState from '../ImageState.js';\nimport {defaultStrokeStyle, defaultFillStyle, defaultLineCap, defaultLineWidth, defaultLineJoin, defaultMiterLimit} from '../render/canvas.js';\nimport ImageStyle from '../style/Image.js';\n\n\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {module:ol/style/Fill} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] Outer radius of a star.\n * @property {number} [radius2] Inner radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {boolean} [snapToPixel=true] If `true` integral numbers of pixels are used as the X and Y pixel coordinate\n * when drawing the shape in the output canvas. If `false` fractional numbers may be used. Using `true` allows for\n * \"sharp\" rendering (no blur), while using `false` allows for \"accurate\" rendering. Note that accuracy is important if\n * the shape's position is animated. Without it, the shape may jitter noticeably.\n * @property {module:ol/style/Stroke} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {module:ol/style/AtlasManager} [atlasManager] The atlas manager to use for this symbol. When\n * using WebGL it is recommended to use an atlas manager to avoid texture switching. If an atlas manager is given, the\n * symbol is added to an atlas. By default no atlas manager is used.\n */\n\n\n/**\n * @typedef {Object} RenderOptions\n * @property {module:ol/colorlike~ColorLike} [strokeStyle]\n * @property {number} strokeWidth\n * @property {number} size\n * @property {string} lineCap\n * @property {Array.<number>} lineDash\n * @property {number} lineDashOffset\n * @property {string} lineJoin\n * @property {number} miterLimit\n */\n\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n *\n * @constructor\n * @param {module:ol/style/RegularShape~Options} options Options.\n * @extends {module:ol/style/Image}\n * @api\n */\nconst RegularShape = function(options) {\n  /**\n   * @private\n   * @type {Array.<string>}\n   */\n  this.checksums_ = null;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement}\n   */\n  this.canvas_ = null;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement}\n   */\n  this.hitDetectionCanvas_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/style/Fill}\n   */\n  this.fill_ = options.fill !== undefined ? options.fill : null;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.origin_ = [0, 0];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.points_ = options.points;\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.radius_ = /** @type {number} */ (options.radius !== undefined ?\n    options.radius : options.radius1);\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.radius2_ = options.radius2;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n  /**\n   * @private\n   * @type {module:ol/style/Stroke}\n   */\n  this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.anchor_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/size~Size}\n   */\n  this.size_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/size~Size}\n   */\n  this.imageSize_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/size~Size}\n   */\n  this.hitDetectionImageSize_ = null;\n\n  /**\n   * @protected\n   * @type {module:ol/style/AtlasManager|undefined}\n   */\n  this.atlasManager_ = options.atlasManager;\n\n  this.render_(this.atlasManager_);\n\n  /**\n   * @type {boolean}\n   */\n  const snapToPixel = options.snapToPixel !== undefined ?\n    options.snapToPixel : true;\n\n  /**\n   * @type {boolean}\n   */\n  const rotateWithView = options.rotateWithView !== undefined ?\n    options.rotateWithView : false;\n\n  ImageStyle.call(this, {\n    opacity: 1,\n    rotateWithView: rotateWithView,\n    rotation: options.rotation !== undefined ? options.rotation : 0,\n    scale: 1,\n    snapToPixel: snapToPixel\n  });\n};\n\ninherits(RegularShape, ImageStyle);\n\n\n/**\n * Clones the style. If an atlasmanager was provided to the original style it will be used in the cloned style, too.\n * @return {module:ol/style/RegularShape} The cloned style.\n * @api\n */\nRegularShape.prototype.clone = function() {\n  const style = new RegularShape({\n    fill: this.getFill() ? this.getFill().clone() : undefined,\n    points: this.getPoints(),\n    radius: this.getRadius(),\n    radius2: this.getRadius2(),\n    angle: this.getAngle(),\n    snapToPixel: this.getSnapToPixel(),\n    stroke: this.getStroke() ?  this.getStroke().clone() : undefined,\n    rotation: this.getRotation(),\n    rotateWithView: this.getRotateWithView(),\n    atlasManager: this.atlasManager_\n  });\n  style.setOpacity(this.getOpacity());\n  style.setScale(this.getScale());\n  return style;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nRegularShape.prototype.getAnchor = function() {\n  return this.anchor_;\n};\n\n\n/**\n * Get the angle used in generating the shape.\n * @return {number} Shape's rotation in radians.\n * @api\n */\nRegularShape.prototype.getAngle = function() {\n  return this.angle_;\n};\n\n\n/**\n * Get the fill style for the shape.\n * @return {module:ol/style/Fill} Fill style.\n * @api\n */\nRegularShape.prototype.getFill = function() {\n  return this.fill_;\n};\n\n\n/**\n * @inheritDoc\n */\nRegularShape.prototype.getHitDetectionImage = function(pixelRatio) {\n  return this.hitDetectionCanvas_;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nRegularShape.prototype.getImage = function(pixelRatio) {\n  return this.canvas_;\n};\n\n\n/**\n * @inheritDoc\n */\nRegularShape.prototype.getImageSize = function() {\n  return this.imageSize_;\n};\n\n\n/**\n * @inheritDoc\n */\nRegularShape.prototype.getHitDetectionImageSize = function() {\n  return this.hitDetectionImageSize_;\n};\n\n\n/**\n * @inheritDoc\n */\nRegularShape.prototype.getImageState = function() {\n  return ImageState.LOADED;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nRegularShape.prototype.getOrigin = function() {\n  return this.origin_;\n};\n\n\n/**\n * Get the number of points for generating the shape.\n * @return {number} Number of points for stars and regular polygons.\n * @api\n */\nRegularShape.prototype.getPoints = function() {\n  return this.points_;\n};\n\n\n/**\n * Get the (primary) radius for the shape.\n * @return {number} Radius.\n * @api\n */\nRegularShape.prototype.getRadius = function() {\n  return this.radius_;\n};\n\n\n/**\n * Get the secondary radius for the shape.\n * @return {number|undefined} Radius2.\n * @api\n */\nRegularShape.prototype.getRadius2 = function() {\n  return this.radius2_;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nRegularShape.prototype.getSize = function() {\n  return this.size_;\n};\n\n\n/**\n * Get the stroke style for the shape.\n * @return {module:ol/style/Stroke} Stroke style.\n * @api\n */\nRegularShape.prototype.getStroke = function() {\n  return this.stroke_;\n};\n\n\n/**\n * @inheritDoc\n */\nRegularShape.prototype.listenImageChange = function(listener, thisArg) {};\n\n\n/**\n * @inheritDoc\n */\nRegularShape.prototype.load = function() {};\n\n\n/**\n * @inheritDoc\n */\nRegularShape.prototype.unlistenImageChange = function(listener, thisArg) {};\n\n\n/**\n * @protected\n * @param {module:ol/style/AtlasManager|undefined} atlasManager An atlas manager.\n */\nRegularShape.prototype.render_ = function(atlasManager) {\n  let imageSize;\n  let lineCap = '';\n  let lineJoin = '';\n  let miterLimit = 0;\n  let lineDash = null;\n  let lineDashOffset = 0;\n  let strokeStyle;\n  let strokeWidth = 0;\n\n  if (this.stroke_) {\n    strokeStyle = this.stroke_.getColor();\n    if (strokeStyle === null) {\n      strokeStyle = defaultStrokeStyle;\n    }\n    strokeStyle = asColorLike(strokeStyle);\n    strokeWidth = this.stroke_.getWidth();\n    if (strokeWidth === undefined) {\n      strokeWidth = defaultLineWidth;\n    }\n    lineDash = this.stroke_.getLineDash();\n    lineDashOffset = this.stroke_.getLineDashOffset();\n    if (!CANVAS_LINE_DASH) {\n      lineDash = null;\n      lineDashOffset = 0;\n    }\n    lineJoin = this.stroke_.getLineJoin();\n    if (lineJoin === undefined) {\n      lineJoin = defaultLineJoin;\n    }\n    lineCap = this.stroke_.getLineCap();\n    if (lineCap === undefined) {\n      lineCap = defaultLineCap;\n    }\n    miterLimit = this.stroke_.getMiterLimit();\n    if (miterLimit === undefined) {\n      miterLimit = defaultMiterLimit;\n    }\n  }\n\n  let size = 2 * (this.radius_ + strokeWidth) + 1;\n\n  /** @type {module:ol/style/RegularShape~RenderOptions} */\n  const renderOptions = {\n    strokeStyle: strokeStyle,\n    strokeWidth: strokeWidth,\n    size: size,\n    lineCap: lineCap,\n    lineDash: lineDash,\n    lineDashOffset: lineDashOffset,\n    lineJoin: lineJoin,\n    miterLimit: miterLimit\n  };\n\n  if (atlasManager === undefined) {\n    // no atlas manager is used, create a new canvas\n    const context = createCanvasContext2D(size, size);\n    this.canvas_ = context.canvas;\n\n    // canvas.width and height are rounded to the closest integer\n    size = this.canvas_.width;\n    imageSize = size;\n\n    this.draw_(renderOptions, context, 0, 0);\n\n    this.createHitDetectionCanvas_(renderOptions);\n  } else {\n    // an atlas manager is used, add the symbol to an atlas\n    size = Math.round(size);\n\n    const hasCustomHitDetectionImage = !this.fill_;\n    let renderHitDetectionCallback;\n    if (hasCustomHitDetectionImage) {\n      // render the hit-detection image into a separate atlas image\n      renderHitDetectionCallback =\n          this.drawHitDetectionCanvas_.bind(this, renderOptions);\n    }\n\n    const id = this.getChecksum();\n    const info = atlasManager.add(\n      id, size, size, this.draw_.bind(this, renderOptions),\n      renderHitDetectionCallback);\n\n    this.canvas_ = info.image;\n    this.origin_ = [info.offsetX, info.offsetY];\n    imageSize = info.image.width;\n\n    if (hasCustomHitDetectionImage) {\n      this.hitDetectionCanvas_ = info.hitImage;\n      this.hitDetectionImageSize_ =\n          [info.hitImage.width, info.hitImage.height];\n    } else {\n      this.hitDetectionCanvas_ = this.canvas_;\n      this.hitDetectionImageSize_ = [imageSize, imageSize];\n    }\n  }\n\n  this.anchor_ = [size / 2, size / 2];\n  this.size_ = [size, size];\n  this.imageSize_ = [imageSize, imageSize];\n};\n\n\n/**\n * @private\n * @param {module:ol/style/RegularShape~RenderOptions} renderOptions Render options.\n * @param {CanvasRenderingContext2D} context The rendering context.\n * @param {number} x The origin for the symbol (x).\n * @param {number} y The origin for the symbol (y).\n */\nRegularShape.prototype.draw_ = function(renderOptions, context, x, y) {\n  let i, angle0, radiusC;\n  // reset transform\n  context.setTransform(1, 0, 0, 1, 0, 0);\n\n  // then move to (x, y)\n  context.translate(x, y);\n\n  context.beginPath();\n\n  let points = this.points_;\n  if (points === Infinity) {\n    context.arc(\n      renderOptions.size / 2, renderOptions.size / 2,\n      this.radius_, 0, 2 * Math.PI, true);\n  } else {\n    const radius2 = (this.radius2_ !== undefined) ? this.radius2_\n      : this.radius_;\n    if (radius2 !== this.radius_) {\n      points = 2 * points;\n    }\n    for (i = 0; i <= points; i++) {\n      angle0 = i * 2 * Math.PI / points - Math.PI / 2 + this.angle_;\n      radiusC = i % 2 === 0 ? this.radius_ : radius2;\n      context.lineTo(renderOptions.size / 2 + radiusC * Math.cos(angle0),\n        renderOptions.size / 2 + radiusC * Math.sin(angle0));\n    }\n  }\n\n\n  if (this.fill_) {\n    let color = this.fill_.getColor();\n    if (color === null) {\n      color = defaultFillStyle;\n    }\n    context.fillStyle = asColorLike(color);\n    context.fill();\n  }\n  if (this.stroke_) {\n    context.strokeStyle = renderOptions.strokeStyle;\n    context.lineWidth = renderOptions.strokeWidth;\n    if (renderOptions.lineDash) {\n      context.setLineDash(renderOptions.lineDash);\n      context.lineDashOffset = renderOptions.lineDashOffset;\n    }\n    context.lineCap = renderOptions.lineCap;\n    context.lineJoin = renderOptions.lineJoin;\n    context.miterLimit = renderOptions.miterLimit;\n    context.stroke();\n  }\n  context.closePath();\n};\n\n\n/**\n * @private\n * @param {module:ol/style/RegularShape~RenderOptions} renderOptions Render options.\n */\nRegularShape.prototype.createHitDetectionCanvas_ = function(renderOptions) {\n  this.hitDetectionImageSize_ = [renderOptions.size, renderOptions.size];\n  if (this.fill_) {\n    this.hitDetectionCanvas_ = this.canvas_;\n    return;\n  }\n\n  // if no fill style is set, create an extra hit-detection image with a\n  // default fill style\n  const context = createCanvasContext2D(renderOptions.size, renderOptions.size);\n  this.hitDetectionCanvas_ = context.canvas;\n\n  this.drawHitDetectionCanvas_(renderOptions, context, 0, 0);\n};\n\n\n/**\n * @private\n * @param {module:ol/style/RegularShape~RenderOptions} renderOptions Render options.\n * @param {CanvasRenderingContext2D} context The context.\n * @param {number} x The origin for the symbol (x).\n * @param {number} y The origin for the symbol (y).\n */\nRegularShape.prototype.drawHitDetectionCanvas_ = function(renderOptions, context, x, y) {\n  // reset transform\n  context.setTransform(1, 0, 0, 1, 0, 0);\n\n  // then move to (x, y)\n  context.translate(x, y);\n\n  context.beginPath();\n\n  let points = this.points_;\n  if (points === Infinity) {\n    context.arc(\n      renderOptions.size / 2, renderOptions.size / 2,\n      this.radius_, 0, 2 * Math.PI, true);\n  } else {\n    const radius2 = (this.radius2_ !== undefined) ? this.radius2_\n      : this.radius_;\n    if (radius2 !== this.radius_) {\n      points = 2 * points;\n    }\n    let i, radiusC, angle0;\n    for (i = 0; i <= points; i++) {\n      angle0 = i * 2 * Math.PI / points - Math.PI / 2 + this.angle_;\n      radiusC = i % 2 === 0 ? this.radius_ : radius2;\n      context.lineTo(renderOptions.size / 2 + radiusC * Math.cos(angle0),\n        renderOptions.size / 2 + radiusC * Math.sin(angle0));\n    }\n  }\n\n  context.fillStyle = defaultFillStyle;\n  context.fill();\n  if (this.stroke_) {\n    context.strokeStyle = renderOptions.strokeStyle;\n    context.lineWidth = renderOptions.strokeWidth;\n    if (renderOptions.lineDash) {\n      context.setLineDash(renderOptions.lineDash);\n      context.lineDashOffset = renderOptions.lineDashOffset;\n    }\n    context.stroke();\n  }\n  context.closePath();\n};\n\n\n/**\n * @return {string} The checksum.\n */\nRegularShape.prototype.getChecksum = function() {\n  const strokeChecksum = this.stroke_ ?\n    this.stroke_.getChecksum() : '-';\n  const fillChecksum = this.fill_ ?\n    this.fill_.getChecksum() : '-';\n\n  const recalculate = !this.checksums_ ||\n      (strokeChecksum != this.checksums_[1] ||\n      fillChecksum != this.checksums_[2] ||\n      this.radius_ != this.checksums_[3] ||\n      this.radius2_ != this.checksums_[4] ||\n      this.angle_ != this.checksums_[5] ||\n      this.points_ != this.checksums_[6]);\n\n  if (recalculate) {\n    const checksum = 'r' + strokeChecksum + fillChecksum +\n        (this.radius_ !== undefined ? this.radius_.toString() : '-') +\n        (this.radius2_ !== undefined ? this.radius2_.toString() : '-') +\n        (this.angle_ !== undefined ? this.angle_.toString() : '-') +\n        (this.points_ !== undefined ? this.points_.toString() : '-');\n    this.checksums_ = [checksum, strokeChecksum, fillChecksum,\n      this.radius_, this.radius2_, this.angle_, this.points_];\n  }\n\n  return this.checksums_[0];\n};\nexport default RegularShape;\n","/**\n * @module ol/style/Circle\n */\nimport {inherits} from '../index.js';\nimport RegularShape from '../style/RegularShape.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/style/Fill} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {boolean} [snapToPixel=true] If `true` integral numbers of pixels are used as the X and Y pixel coordinate\n * when drawing the circle in the output canvas. If `false` fractional numbers may be used. Using `true` allows for\n * \"sharp\" rendering (no blur), while using `false` allows for \"accurate\" rendering. Note that accuracy is important if\n * the circle's position is animated. Without it, the circle may jitter noticeably.\n * @property {module:ol/style/Stroke} [stroke] Stroke style.\n * @property {module:ol/style/AtlasManager} [atlasManager] The atlas manager to use for this circle.\n * When using WebGL it is recommended to use an atlas manager to avoid texture switching. If an atlas manager is given,\n * the circle is added to an atlas. By default no atlas manager is used.\n */\n\n\n/**\n * @classdesc\n * Set circle style for vector features.\n *\n * @constructor\n * @param {module:ol/style/Circle~Options=} opt_options Options.\n * @extends {module:ol/style/RegularShape}\n * @api\n */\nconst CircleStyle = function(opt_options) {\n\n  const options = opt_options || {};\n\n  RegularShape.call(this, {\n    points: Infinity,\n    fill: options.fill,\n    radius: options.radius,\n    snapToPixel: options.snapToPixel,\n    stroke: options.stroke,\n    atlasManager: options.atlasManager\n  });\n\n};\n\ninherits(CircleStyle, RegularShape);\n\n\n/**\n * Clones the style.  If an atlasmanager was provided to the original style it will be used in the cloned style, too.\n * @return {module:ol/style/Circle} The cloned style.\n * @override\n * @api\n */\nCircleStyle.prototype.clone = function() {\n  const style = new CircleStyle({\n    fill: this.getFill() ? this.getFill().clone() : undefined,\n    stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n    radius: this.getRadius(),\n    snapToPixel: this.getSnapToPixel(),\n    atlasManager: this.atlasManager_\n  });\n  style.setOpacity(this.getOpacity());\n  style.setScale(this.getScale());\n  return style;\n};\n\n\n/**\n * Set the circle radius.\n *\n * @param {number} radius Circle radius.\n * @api\n */\nCircleStyle.prototype.setRadius = function(radius) {\n  this.radius_ = radius;\n  this.render_(this.atlasManager_);\n};\nexport default CircleStyle;\n","/**\n * @module ol/style/Fill\n */\nimport {getUid} from '../index.js';\nimport {asString} from '../color.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/color~Color|module:ol/colorlike~ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n\n/**\n * @classdesc\n * Set fill style for vector features.\n *\n * @constructor\n * @param {module:ol/style/Fill~Options=} opt_options Options.\n * @api\n */\nconst Fill = function(opt_options) {\n\n  const options = opt_options || {};\n\n  /**\n   * @private\n   * @type {module:ol/color~Color|module:ol/colorlike~ColorLike}\n   */\n  this.color_ = options.color !== undefined ? options.color : null;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.checksum_ = undefined;\n};\n\n\n/**\n * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n * @return {module:ol/style/Fill} The cloned style.\n * @api\n */\nFill.prototype.clone = function() {\n  const color = this.getColor();\n  return new Fill({\n    color: (color && color.slice) ? color.slice() : color || undefined\n  });\n};\n\n\n/**\n * Get the fill color.\n * @return {module:ol/color~Color|module:ol/colorlike~ColorLike} Color.\n * @api\n */\nFill.prototype.getColor = function() {\n  return this.color_;\n};\n\n\n/**\n * Set the color.\n *\n * @param {module:ol/color~Color|module:ol/colorlike~ColorLike} color Color.\n * @api\n */\nFill.prototype.setColor = function(color) {\n  this.color_ = color;\n  this.checksum_ = undefined;\n};\n\n\n/**\n * @return {string} The checksum.\n */\nFill.prototype.getChecksum = function() {\n  if (this.checksum_ === undefined) {\n    if (\n      this.color_ instanceof CanvasPattern ||\n        this.color_ instanceof CanvasGradient\n    ) {\n      this.checksum_ = getUid(this.color_).toString();\n    } else {\n      this.checksum_ = 'f' + (this.color_ ? asString(this.color_) : '-');\n    }\n  }\n\n  return this.checksum_;\n};\nexport default Fill;\n","/**\n * @module ol/style/Stroke\n */\nimport {getUid} from '../index.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/color~Color|module:ol/colorlike~ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {string} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {string} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array.<number>} [lineDash] Line dash pattern. Default is `undefined` (no dash).\n * Please note that Internet Explorer 10 and lower do not support the `setLineDash` method on\n * the `CanvasRenderingContext2D` and therefore this option will have no visual effect in these browsers.\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n *\n * @constructor\n * @param {module:ol/style/Stroke~Options=} opt_options Options.\n * @api\n */\nconst Stroke = function(opt_options) {\n\n  const options = opt_options || {};\n\n  /**\n   * @private\n   * @type {module:ol/color~Color|module:ol/colorlike~ColorLike}\n   */\n  this.color_ = options.color !== undefined ? options.color : null;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.lineCap_ = options.lineCap;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.lineDashOffset_ = options.lineDashOffset;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.lineJoin_ = options.lineJoin;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.miterLimit_ = options.miterLimit;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.width_ = options.width;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.checksum_ = undefined;\n};\n\n\n/**\n * Clones the style.\n * @return {module:ol/style/Stroke} The cloned style.\n * @api\n */\nStroke.prototype.clone = function() {\n  const color = this.getColor();\n  return new Stroke({\n    color: (color && color.slice) ? color.slice() : color || undefined,\n    lineCap: this.getLineCap(),\n    lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n    lineDashOffset: this.getLineDashOffset(),\n    lineJoin: this.getLineJoin(),\n    miterLimit: this.getMiterLimit(),\n    width: this.getWidth()\n  });\n};\n\n\n/**\n * Get the stroke color.\n * @return {module:ol/color~Color|module:ol/colorlike~ColorLike} Color.\n * @api\n */\nStroke.prototype.getColor = function() {\n  return this.color_;\n};\n\n\n/**\n * Get the line cap type for the stroke.\n * @return {string|undefined} Line cap.\n * @api\n */\nStroke.prototype.getLineCap = function() {\n  return this.lineCap_;\n};\n\n\n/**\n * Get the line dash style for the stroke.\n * @return {Array.<number>} Line dash.\n * @api\n */\nStroke.prototype.getLineDash = function() {\n  return this.lineDash_;\n};\n\n\n/**\n * Get the line dash offset for the stroke.\n * @return {number|undefined} Line dash offset.\n * @api\n */\nStroke.prototype.getLineDashOffset = function() {\n  return this.lineDashOffset_;\n};\n\n\n/**\n * Get the line join type for the stroke.\n * @return {string|undefined} Line join.\n * @api\n */\nStroke.prototype.getLineJoin = function() {\n  return this.lineJoin_;\n};\n\n\n/**\n * Get the miter limit for the stroke.\n * @return {number|undefined} Miter limit.\n * @api\n */\nStroke.prototype.getMiterLimit = function() {\n  return this.miterLimit_;\n};\n\n\n/**\n * Get the stroke width.\n * @return {number|undefined} Width.\n * @api\n */\nStroke.prototype.getWidth = function() {\n  return this.width_;\n};\n\n\n/**\n * Set the color.\n *\n * @param {module:ol/color~Color|module:ol/colorlike~ColorLike} color Color.\n * @api\n */\nStroke.prototype.setColor = function(color) {\n  this.color_ = color;\n  this.checksum_ = undefined;\n};\n\n\n/**\n * Set the line cap.\n *\n * @param {string|undefined} lineCap Line cap.\n * @api\n */\nStroke.prototype.setLineCap = function(lineCap) {\n  this.lineCap_ = lineCap;\n  this.checksum_ = undefined;\n};\n\n\n/**\n * Set the line dash.\n *\n * Please note that Internet Explorer 10 and lower [do not support][mdn] the\n * `setLineDash` method on the `CanvasRenderingContext2D` and therefore this\n * property will have no visual effect in these browsers.\n *\n * [mdn]: https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/setLineDash#Browser_compatibility\n *\n * @param {Array.<number>} lineDash Line dash.\n * @api\n */\nStroke.prototype.setLineDash = function(lineDash) {\n  this.lineDash_ = lineDash;\n  this.checksum_ = undefined;\n};\n\n\n/**\n * Set the line dash offset.\n *\n * @param {number|undefined} lineDashOffset Line dash offset.\n * @api\n */\nStroke.prototype.setLineDashOffset = function(lineDashOffset) {\n  this.lineDashOffset_ = lineDashOffset;\n  this.checksum_ = undefined;\n};\n\n\n/**\n * Set the line join.\n *\n * @param {string|undefined} lineJoin Line join.\n * @api\n */\nStroke.prototype.setLineJoin = function(lineJoin) {\n  this.lineJoin_ = lineJoin;\n  this.checksum_ = undefined;\n};\n\n\n/**\n * Set the miter limit.\n *\n * @param {number|undefined} miterLimit Miter limit.\n * @api\n */\nStroke.prototype.setMiterLimit = function(miterLimit) {\n  this.miterLimit_ = miterLimit;\n  this.checksum_ = undefined;\n};\n\n\n/**\n * Set the width.\n *\n * @param {number|undefined} width Width.\n * @api\n */\nStroke.prototype.setWidth = function(width) {\n  this.width_ = width;\n  this.checksum_ = undefined;\n};\n\n\n/**\n * @return {string} The checksum.\n */\nStroke.prototype.getChecksum = function() {\n  if (this.checksum_ === undefined) {\n    this.checksum_ = 's';\n    if (this.color_) {\n      if (typeof this.color_ === 'string') {\n        this.checksum_ += this.color_;\n      } else {\n        this.checksum_ += getUid(this.color_).toString();\n      }\n    } else {\n      this.checksum_ += '-';\n    }\n    this.checksum_ += ',' +\n        (this.lineCap_ !== undefined ?\n          this.lineCap_.toString() : '-') + ',' +\n        (this.lineDash_ ?\n          this.lineDash_.toString() : '-') + ',' +\n        (this.lineDashOffset_ !== undefined ?\n          this.lineDashOffset_ : '-') + ',' +\n        (this.lineJoin_ !== undefined ?\n          this.lineJoin_ : '-') + ',' +\n        (this.miterLimit_ !== undefined ?\n          this.miterLimit_.toString() : '-') + ',' +\n        (this.width_ !== undefined ?\n          this.width_.toString() : '-');\n  }\n\n  return this.checksum_;\n};\nexport default Stroke;\n","/**\n * @module ol/style/Style\n */\n\n/**\n * Feature styles.\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Fill, Stroke, Cirle, Style} from 'ol/style';\n *\n *  var fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)'\n *  });\n *  var stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25\n *  });\n *  var styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5\n *      }),\n *      fill: fill,\n *      stroke: stroke\n *    })\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Fill, Stroke, Cirle, Style} from 'ol/style';\n *  import GeometryType from 'ol/geom/GeometryType';\n *\n *  var white = [255, 255, 255, 1];\n *  var blue = [0, 153, 255, 1];\n *  var width = 3;\n *  styles[GeometryType.POLYGON] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5]\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POLYGON] =\n *      styles[GeometryType.POLYGON];\n *  styles[GeometryType.LINE_STRING] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2\n *      })\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_LINE_STRING] =\n *      styles[GeometryType.LINE_STRING];\n *  styles[GeometryType.POINT] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2\n *        })\n *      }),\n *      zIndex: Infinity\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POINT] =\n *      styles[GeometryType.POINT];\n *  styles[GEOMETRY_COLLECTION] =\n *      styles[GeometryType.POLYGON].concat(\n *          styles[GeometryType.POINT]\n *      );\n * ```\n */\nimport {assert} from '../asserts.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport CircleStyle from '../style/Circle.js';\nimport Fill from '../style/Fill.js';\nimport Stroke from '../style/Stroke.js';\n\n\n/**\n * A function that takes an {@link module:ol/Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style} or an array of them. This way e.g. a\n * vector layer can be styled.\n *\n * @typedef {function((module:ol/Feature|module:ol/render/Feature), number):\n *     (module:ol/style/Style|Array.<module:ol/style/Style>)} StyleFunction\n */\n\n\n/**\n * A function that takes an {@link module:ol/Feature} as argument and returns an\n * {@link module:ol/geom/Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function((module:ol/Feature|module:ol/render/Feature)):\n *     (module:ol/geom/Geometry|module:ol/render/Feature|undefined)} GeometryFunction\n */\n\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((module:ol/coordinate~Coordinate|Array<module:ol/coordinate~Coordinate>|Array.<Array.<module:ol/coordinate~Coordinate>>),module:ol/render~State)}\n * RenderFunction\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {string|module:ol/geom/Geometry|module:ol/style/Style~GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {module:ol/style/Fill} [fill] Fill style.\n * @property {module:ol/style/Image} [image] Image style.\n * @property {module:ol/style/Style~RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {module:ol/style/Stroke} [stroke] Stroke style.\n * @property {module:ol/style/Text} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * @constructor\n * @struct\n * @param {module:ol/style/Style~Options=} opt_options Style options.\n * @api\n */\nconst Style = function(opt_options) {\n\n  const options = opt_options || {};\n\n  /**\n   * @private\n   * @type {string|module:ol/geom/Geometry|module:ol/style/Style~GeometryFunction}\n   */\n  this.geometry_ = null;\n\n  /**\n   * @private\n   * @type {!module:ol/style/Style~GeometryFunction}\n   */\n  this.geometryFunction_ = defaultGeometryFunction;\n\n  if (options.geometry !== undefined) {\n    this.setGeometry(options.geometry);\n  }\n\n  /**\n   * @private\n   * @type {module:ol/style/Fill}\n   */\n  this.fill_ = options.fill !== undefined ? options.fill : null;\n\n  /**\n     * @private\n     * @type {module:ol/style/Image}\n     */\n  this.image_ = options.image !== undefined ? options.image : null;\n\n  /**\n   * @private\n   * @type {module:ol/style/Style~RenderFunction|null}\n   */\n  this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n  /**\n   * @private\n   * @type {module:ol/style/Stroke}\n   */\n  this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n  /**\n   * @private\n   * @type {module:ol/style/Text}\n   */\n  this.text_ = options.text !== undefined ? options.text : null;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.zIndex_ = options.zIndex;\n\n};\n\n\n/**\n * Clones the style.\n * @return {module:ol/style/Style} The cloned style.\n * @api\n */\nStyle.prototype.clone = function() {\n  let geometry = this.getGeometry();\n  if (geometry && geometry.clone) {\n    geometry = geometry.clone();\n  }\n  return new Style({\n    geometry: geometry,\n    fill: this.getFill() ? this.getFill().clone() : undefined,\n    image: this.getImage() ? this.getImage().clone() : undefined,\n    stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n    text: this.getText() ? this.getText().clone() : undefined,\n    zIndex: this.getZIndex()\n  });\n};\n\n\n/**\n * Get the custom renderer function that was configured with\n * {@link #setRenderer} or the `renderer` constructor option.\n * @return {module:ol/style/Style~RenderFunction|null} Custom renderer function.\n * @api\n */\nStyle.prototype.getRenderer = function() {\n  return this.renderer_;\n};\n\n\n/**\n * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n * and `image` options of the style will be ignored.\n * @param {module:ol/style/Style~RenderFunction|null} renderer Custom renderer function.\n * @api\n */\nStyle.prototype.setRenderer = function(renderer) {\n  this.renderer_ = renderer;\n};\n\n\n/**\n * Get the geometry to be rendered.\n * @return {string|module:ol/geom/Geometry|module:ol/style/Style~GeometryFunction}\n * Feature property or geometry or function that returns the geometry that will\n * be rendered with this style.\n * @api\n */\nStyle.prototype.getGeometry = function() {\n  return this.geometry_;\n};\n\n\n/**\n * Get the function used to generate a geometry for rendering.\n * @return {!module:ol/style/Style~GeometryFunction} Function that is called with a feature\n * and returns the geometry to render instead of the feature's geometry.\n * @api\n */\nStyle.prototype.getGeometryFunction = function() {\n  return this.geometryFunction_;\n};\n\n\n/**\n * Get the fill style.\n * @return {module:ol/style/Fill} Fill style.\n * @api\n */\nStyle.prototype.getFill = function() {\n  return this.fill_;\n};\n\n\n/**\n * Set the fill style.\n * @param {module:ol/style/Fill} fill Fill style.\n * @api\n */\nStyle.prototype.setFill = function(fill) {\n  this.fill_ = fill;\n};\n\n\n/**\n * Get the image style.\n * @return {module:ol/style/Image} Image style.\n * @api\n */\nStyle.prototype.getImage = function() {\n  return this.image_;\n};\n\n\n/**\n * Set the image style.\n * @param {module:ol/style/Image} image Image style.\n * @api\n */\nStyle.prototype.setImage = function(image) {\n  this.image_ = image;\n};\n\n\n/**\n * Get the stroke style.\n * @return {module:ol/style/Stroke} Stroke style.\n * @api\n */\nStyle.prototype.getStroke = function() {\n  return this.stroke_;\n};\n\n\n/**\n * Set the stroke style.\n * @param {module:ol/style/Stroke} stroke Stroke style.\n * @api\n */\nStyle.prototype.setStroke = function(stroke) {\n  this.stroke_ = stroke;\n};\n\n\n/**\n * Get the text style.\n * @return {module:ol/style/Text} Text style.\n * @api\n */\nStyle.prototype.getText = function() {\n  return this.text_;\n};\n\n\n/**\n * Set the text style.\n * @param {module:ol/style/Text} text Text style.\n * @api\n */\nStyle.prototype.setText = function(text) {\n  this.text_ = text;\n};\n\n\n/**\n * Get the z-index for the style.\n * @return {number|undefined} ZIndex.\n * @api\n */\nStyle.prototype.getZIndex = function() {\n  return this.zIndex_;\n};\n\n\n/**\n * Set a geometry that is rendered instead of the feature's geometry.\n *\n * @param {string|module:ol/geom/Geometry|module:ol/style/Style~GeometryFunction} geometry\n *     Feature property or geometry or function returning a geometry to render\n *     for this style.\n * @api\n */\nStyle.prototype.setGeometry = function(geometry) {\n  if (typeof geometry === 'function') {\n    this.geometryFunction_ = geometry;\n  } else if (typeof geometry === 'string') {\n    this.geometryFunction_ = function(feature) {\n      return (\n        /** @type {module:ol/geom/Geometry} */ (feature.get(geometry))\n      );\n    };\n  } else if (!geometry) {\n    this.geometryFunction_ = defaultGeometryFunction;\n  } else if (geometry !== undefined) {\n    this.geometryFunction_ = function() {\n      return (\n        /** @type {module:ol/geom/Geometry} */ (geometry)\n      );\n    };\n  }\n  this.geometry_ = geometry;\n};\n\n\n/**\n * Set the z-index.\n *\n * @param {number|undefined} zIndex ZIndex.\n * @api\n */\nStyle.prototype.setZIndex = function(zIndex) {\n  this.zIndex_ = zIndex;\n};\n\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of module:ol/style/Style or single style objects wrapped in a\n * new style function.\n * @param {module:ol/style/Style~StyleFunction|Array.<module:ol/style/Style>|module:ol/style/Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {module:ol/style/Style~StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array.<module:ol/style/Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(obj instanceof Style,\n        41); // Expected an `module:ol/style/Style~Style` or an array of `module:ol/style/Style~Style`\n      styles = [obj];\n    }\n    styleFunction = function() {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n\n/**\n * @type {Array.<module:ol/style/Style>}\n */\nlet defaultStyles = null;\n\n\n/**\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array.<module:ol/style/Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (module:ol/style/Circle~CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)'\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5\n        }),\n        fill: fill,\n        stroke: stroke\n      })\n    ];\n  }\n  return defaultStyles;\n}\n\n\n/**\n * Default styles for editing features.\n * @return {Object.<module:ol/geom/GeometryType, Array.<module:ol/style/Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object.<module:ol/geom/GeometryType, Array.<module:ol/style/Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles[GeometryType.POLYGON] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5]\n      })\n    })\n  ];\n  styles[GeometryType.MULTI_POLYGON] =\n      styles[GeometryType.POLYGON];\n\n  styles[GeometryType.LINE_STRING] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2\n      })\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width\n      })\n    })\n  ];\n  styles[GeometryType.MULTI_LINE_STRING] =\n      styles[GeometryType.LINE_STRING];\n\n  styles[GeometryType.CIRCLE] =\n      styles[GeometryType.POLYGON].concat(\n        styles[GeometryType.LINE_STRING]\n      );\n\n\n  styles[GeometryType.POINT] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2\n        })\n      }),\n      zIndex: Infinity\n    })\n  ];\n  styles[GeometryType.MULTI_POINT] =\n      styles[GeometryType.POINT];\n\n  styles[GeometryType.GEOMETRY_COLLECTION] =\n      styles[GeometryType.POLYGON].concat(\n        styles[GeometryType.LINE_STRING],\n        styles[GeometryType.POINT]\n      );\n\n  return styles;\n}\n\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature to get the geometry for.\n * @return {module:ol/geom/Geometry|module:ol/render/Feature|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/Feature\n */\nimport {assert} from './asserts.js';\nimport {listen, unlisten, unlistenByKey} from './events.js';\nimport EventType from './events/EventType.js';\nimport {inherits} from './index.js';\nimport BaseObject, {getChangeEventType} from './Object.js';\nimport Geometry from './geom/Geometry.js';\nimport Style from './style/Style.js';\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature';\n * import Polygon from 'ol/geom/Polygon';\n * import Point from 'ol/geom/Point';\n *\n * var feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon'\n * });\n *\n * // get the polygon geometry\n * var poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * var point = feature.getGeometry();\n * ```\n *\n * @constructor\n * @extends {module:ol/Object}\n * @param {module:ol/geom/Geometry|Object.<string, *>=} opt_geometryOrProperties\n * You may pass a Geometry object directly, or an object literal containing\n * properties. If you pass an object literal, you may include a Geometry\n * associated with a `geometry` key.\n * @api\n */\nconst Feature = function(opt_geometryOrProperties) {\n\n  BaseObject.call(this);\n\n  /**\n   * @private\n   * @type {number|string|undefined}\n   */\n  this.id_ = undefined;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.geometryName_ = 'geometry';\n\n  /**\n   * User provided style.\n   * @private\n   * @type {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction}\n   */\n  this.style_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/style/Style~StyleFunction|undefined}\n   */\n  this.styleFunction_ = undefined;\n\n  /**\n   * @private\n   * @type {?module:ol/events~EventsKey}\n   */\n  this.geometryChangeKey_ = null;\n\n  listen(\n    this, getChangeEventType(this.geometryName_),\n    this.handleGeometryChanged_, this);\n\n  if (opt_geometryOrProperties !== undefined) {\n    if (opt_geometryOrProperties instanceof Geometry ||\n        !opt_geometryOrProperties) {\n      const geometry = opt_geometryOrProperties;\n      this.setGeometry(geometry);\n    } else {\n      /** @type {Object.<string, *>} */\n      const properties = opt_geometryOrProperties;\n      this.setProperties(properties);\n    }\n  }\n};\n\ninherits(Feature, BaseObject);\n\n\n/**\n * Clone this feature. If the original feature has a geometry it\n * is also cloned. The feature id is not set in the clone.\n * @return {module:ol/Feature} The clone.\n * @api\n */\nFeature.prototype.clone = function() {\n  const clone = new Feature(this.getProperties());\n  clone.setGeometryName(this.getGeometryName());\n  const geometry = this.getGeometry();\n  if (geometry) {\n    clone.setGeometry(geometry.clone());\n  }\n  const style = this.getStyle();\n  if (style) {\n    clone.setStyle(style);\n  }\n  return clone;\n};\n\n\n/**\n * Get the feature's default geometry.  A feature may have any number of named\n * geometries.  The \"default\" geometry (the one that is rendered by default) is\n * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n * @return {module:ol/geom/Geometry|undefined} The default geometry for the feature.\n * @api\n * @observable\n */\nFeature.prototype.getGeometry = function() {\n  return (\n    /** @type {module:ol/geom/Geometry|undefined} */ (this.get(this.geometryName_))\n  );\n};\n\n\n/**\n * Get the feature identifier.  This is a stable identifier for the feature and\n * is either set when reading data from a remote source or set explicitly by\n * calling {@link module:ol/Feature~Feature#setId}.\n * @return {number|string|undefined} Id.\n * @api\n */\nFeature.prototype.getId = function() {\n  return this.id_;\n};\n\n\n/**\n * Get the name of the feature's default geometry.  By default, the default\n * geometry is named `geometry`.\n * @return {string} Get the property name associated with the default geometry\n *     for this feature.\n * @api\n */\nFeature.prototype.getGeometryName = function() {\n  return this.geometryName_;\n};\n\n\n/**\n * Get the feature's style. Will return what was provided to the\n * {@link module:ol/Feature~Feature#setStyle} method.\n * @return {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction} The feature style.\n * @api\n */\nFeature.prototype.getStyle = function() {\n  return this.style_;\n};\n\n\n/**\n * Get the feature's style function.\n * @return {module:ol/style/Style~StyleFunction|undefined} Return a function\n * representing the current style of this feature.\n * @api\n */\nFeature.prototype.getStyleFunction = function() {\n  return this.styleFunction_;\n};\n\n\n/**\n * @private\n */\nFeature.prototype.handleGeometryChange_ = function() {\n  this.changed();\n};\n\n\n/**\n * @private\n */\nFeature.prototype.handleGeometryChanged_ = function() {\n  if (this.geometryChangeKey_) {\n    unlistenByKey(this.geometryChangeKey_);\n    this.geometryChangeKey_ = null;\n  }\n  const geometry = this.getGeometry();\n  if (geometry) {\n    this.geometryChangeKey_ = listen(geometry,\n      EventType.CHANGE, this.handleGeometryChange_, this);\n  }\n  this.changed();\n};\n\n\n/**\n * Set the default geometry for the feature.  This will update the property\n * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n * @param {module:ol/geom/Geometry|undefined} geometry The new geometry.\n * @api\n * @observable\n */\nFeature.prototype.setGeometry = function(geometry) {\n  this.set(this.geometryName_, geometry);\n};\n\n\n/**\n * Set the style for the feature.  This can be a single style object, an array\n * of styles, or a function that takes a resolution and returns an array of\n * styles. If it is `null` the feature has no style (a `null` style).\n * @param {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction} style Style for this feature.\n * @api\n * @fires module:ol/events/Event~Event#event:change\n */\nFeature.prototype.setStyle = function(style) {\n  this.style_ = style;\n  this.styleFunction_ = !style ? undefined : createStyleFunction(style);\n  this.changed();\n};\n\n\n/**\n * Set the feature id.  The feature id is considered stable and may be used when\n * requesting features or comparing identifiers returned from a remote source.\n * The feature id can be used with the\n * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n * @param {number|string|undefined} id The feature id.\n * @api\n * @fires module:ol/events/Event~Event#event:change\n */\nFeature.prototype.setId = function(id) {\n  this.id_ = id;\n  this.changed();\n};\n\n\n/**\n * Set the property name to be used when getting the feature's default geometry.\n * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n * this name will be returned.\n * @param {string} name The property name of the default geometry.\n * @api\n */\nFeature.prototype.setGeometryName = function(name) {\n  unlisten(\n    this, getChangeEventType(this.geometryName_),\n    this.handleGeometryChanged_, this);\n  this.geometryName_ = name;\n  listen(\n    this, getChangeEventType(this.geometryName_),\n    this.handleGeometryChanged_, this);\n  this.handleGeometryChanged_();\n};\n\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of module:ol/style/Style or single style objects wrapped\n * in a new feature style function.\n * @param {module:ol/style/Style~StyleFunction|!Array.<module:ol/style/Style>|!module:ol/style/Style} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {module:ol/style/Style~StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  } else {\n    /**\n     * @type {Array.<module:ol/style/Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(obj instanceof Style,\n        41); // Expected an `module:ol/style/Style~Style` or an array of `module:ol/style/Style~Style`\n      styles = [obj];\n    }\n    return function() {\n      return styles;\n    };\n  }\n}\nexport default Feature;\n","/**\n * @module ol/geom/Circle\n */\nimport {inherits} from '../index.js';\nimport {createOrUpdate, forEachCorner, intersects} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport {deflateCoordinate} from '../geom/flat/deflate.js';\n\n/**\n * @classdesc\n * Circle geometry.\n *\n * @constructor\n * @extends {module:ol/geom/SimpleGeometry}\n * @param {module:ol/coordinate~Coordinate} center Center.\n * @param {number=} opt_radius Radius.\n * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst Circle = function(center, opt_radius, opt_layout) {\n  SimpleGeometry.call(this);\n  const radius = opt_radius ? opt_radius : 0;\n  this.setCenterAndRadius(center, radius, opt_layout);\n};\n\ninherits(Circle, SimpleGeometry);\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!module:ol/geom/Circle} Clone.\n * @override\n * @api\n */\nCircle.prototype.clone = function() {\n  const circle = new Circle(null);\n  circle.setFlatCoordinates(this.layout, this.flatCoordinates.slice());\n  return circle;\n};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  const flatCoordinates = this.flatCoordinates;\n  const dx = x - flatCoordinates[0];\n  const dy = y - flatCoordinates[1];\n  const squaredDistance = dx * dx + dy * dy;\n  if (squaredDistance < minSquaredDistance) {\n    if (squaredDistance === 0) {\n      for (let i = 0; i < this.stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n    } else {\n      const delta = this.getRadius() / Math.sqrt(squaredDistance);\n      closestPoint[0] = flatCoordinates[0] + delta * dx;\n      closestPoint[1] = flatCoordinates[1] + delta * dy;\n      for (let i = 2; i < this.stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n    }\n    closestPoint.length = this.stride;\n    return squaredDistance;\n  } else {\n    return minSquaredDistance;\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.containsXY = function(x, y) {\n  const flatCoordinates = this.flatCoordinates;\n  const dx = x - flatCoordinates[0];\n  const dy = y - flatCoordinates[1];\n  return dx * dx + dy * dy <= this.getRadiusSquared_();\n};\n\n\n/**\n * Return the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n * @return {module:ol/coordinate~Coordinate} Center.\n * @api\n */\nCircle.prototype.getCenter = function() {\n  return this.flatCoordinates.slice(0, this.stride);\n};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.computeExtent = function(extent) {\n  const flatCoordinates = this.flatCoordinates;\n  const radius = flatCoordinates[this.stride] - flatCoordinates[0];\n  return createOrUpdate(\n    flatCoordinates[0] - radius, flatCoordinates[1] - radius,\n    flatCoordinates[0] + radius, flatCoordinates[1] + radius,\n    extent);\n};\n\n\n/**\n * Return the radius of the circle.\n * @return {number} Radius.\n * @api\n */\nCircle.prototype.getRadius = function() {\n  return Math.sqrt(this.getRadiusSquared_());\n};\n\n\n/**\n * @private\n * @return {number} Radius squared.\n */\nCircle.prototype.getRadiusSquared_ = function() {\n  const dx = this.flatCoordinates[this.stride] - this.flatCoordinates[0];\n  const dy = this.flatCoordinates[this.stride + 1] - this.flatCoordinates[1];\n  return dx * dx + dy * dy;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nCircle.prototype.getType = function() {\n  return GeometryType.CIRCLE;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nCircle.prototype.intersectsExtent = function(extent) {\n  const circleExtent = this.getExtent();\n  if (intersects(extent, circleExtent)) {\n    const center = this.getCenter();\n\n    if (extent[0] <= center[0] && extent[2] >= center[0]) {\n      return true;\n    }\n    if (extent[1] <= center[1] && extent[3] >= center[1]) {\n      return true;\n    }\n\n    return forEachCorner(extent, this.intersectsCoordinate, this);\n  }\n  return false;\n\n};\n\n\n/**\n * Set the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n * @param {module:ol/coordinate~Coordinate} center Center.\n * @api\n */\nCircle.prototype.setCenter = function(center) {\n  const stride = this.stride;\n  const radius = this.flatCoordinates[stride] - this.flatCoordinates[0];\n  const flatCoordinates = center.slice();\n  flatCoordinates[stride] = flatCoordinates[0] + radius;\n  for (let i = 1; i < stride; ++i) {\n    flatCoordinates[stride + i] = center[i];\n  }\n  this.setFlatCoordinates(this.layout, flatCoordinates);\n};\n\n\n/**\n * Set the center (as {@link module:ol/coordinate~Coordinate coordinate}) and the radius (as\n * number) of the circle.\n * @param {module:ol/coordinate~Coordinate} center Center.\n * @param {number} radius Radius.\n * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n * @api\n */\nCircle.prototype.setCenterAndRadius = function(center, radius, opt_layout) {\n  if (!center) {\n    this.setFlatCoordinates(GeometryLayout.XY, null);\n  } else {\n    this.setLayout(opt_layout, center, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    /** @type {Array.<number>} */\n    const flatCoordinates = this.flatCoordinates;\n    let offset = deflateCoordinate(\n      flatCoordinates, 0, center, this.stride);\n    flatCoordinates[offset++] = flatCoordinates[0] + radius;\n    for (let i = 1, ii = this.stride; i < ii; ++i) {\n      flatCoordinates[offset++] = flatCoordinates[i];\n    }\n    flatCoordinates.length = offset;\n    this.changed();\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.getCoordinates = function() {};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.setCoordinates = function(coordinates, opt_layout) {};\n\n\n/**\n * @param {module:ol/geom/GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n */\nCircle.prototype.setFlatCoordinates = function(layout, flatCoordinates) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.changed();\n};\n\n\n/**\n * Set the radius of the circle. The radius is in the units of the projection.\n * @param {number} radius Radius.\n * @api\n */\nCircle.prototype.setRadius = function(radius) {\n  this.flatCoordinates[this.stride] = this.flatCoordinates[0] + radius;\n  this.changed();\n};\n\n\n/**\n * Transform each coordinate of the circle from one coordinate reference system\n * to another. The geometry is modified in place.\n * If you do not want the geometry modified in place, first clone() it and\n * then use this function on the clone.\n *\n * Internally a circle is currently represented by two points: the center of\n * the circle `[cx, cy]`, and the point to the right of the circle\n * `[cx + r, cy]`. This `transform` function just transforms these two points.\n * So the resulting geometry is also a circle, and that circle does not\n * correspond to the shape that would be obtained by transforming every point\n * of the original circle.\n *\n * @param {module:ol/proj~ProjectionLike} source The current projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @param {module:ol/proj~ProjectionLike} destination The desired projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @return {module:ol/geom/Circle} This geometry.  Note that original geometry is\n *     modified in place.\n * @function\n * @api\n */\nCircle.prototype.transform;\nexport default Circle;\n","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array.<number>=} opt_dest Destination.\n * @return {Array.<number>} Destination.\n */\nexport function interpolatePoint(flatCoordinates, offset, end, stride, fraction, opt_dest) {\n  let pointX = NaN;\n  let pointY = NaN;\n  const n = (end - offset) / stride;\n  if (n === 1) {\n    pointX = flatCoordinates[offset];\n    pointY = flatCoordinates[offset + 1];\n  } else if (n == 2) {\n    pointX = (1 - fraction) * flatCoordinates[offset] +\n        fraction * flatCoordinates[offset + stride];\n    pointY = (1 - fraction) * flatCoordinates[offset + 1] +\n        fraction * flatCoordinates[offset + stride + 1];\n  } else if (n !== 0) {\n    let x1 = flatCoordinates[offset];\n    let y1 = flatCoordinates[offset + 1];\n    let length = 0;\n    const cumulativeLengths = [0];\n    for (let i = offset + stride; i < end; i += stride) {\n      const x2 = flatCoordinates[i];\n      const y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    const target = fraction * length;\n    const index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      const t = (target - cumulativeLengths[-index - 2]) /\n          (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      const o = offset + (-index - 2) * stride;\n      pointX = lerp(\n        flatCoordinates[o], flatCoordinates[o + stride], t);\n      pointY = lerp(\n        flatCoordinates[o + 1], flatCoordinates[o + stride + 1], t);\n    } else {\n      pointX = flatCoordinates[offset + index * stride];\n      pointY = flatCoordinates[offset + index * stride + 1];\n    }\n  }\n  if (opt_dest) {\n    opt_dest[0] = pointX;\n    opt_dest[1] = pointY;\n    return opt_dest;\n  } else {\n    return [pointX, pointY];\n  }\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {module:ol/coordinate~Coordinate} Coordinate.\n */\nexport function lineStringCoordinateAtM(flatCoordinates, offset, end, stride, m, extrapolate) {\n  if (end == offset) {\n    return null;\n  }\n  let coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  } else if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  let lo = offset / stride;\n  let hi = end / stride;\n  while (lo < hi) {\n    const mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  const m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  const m1 = flatCoordinates[(lo + 1) * stride - 1];\n  const t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (let i = 0; i < stride - 1; ++i) {\n    coordinate.push(lerp(flatCoordinates[(lo - 1) * stride + i],\n      flatCoordinates[lo * stride + i], t));\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {module:ol/coordinate~Coordinate} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates, offset, ends, stride, m, extrapolate, interpolate) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates, offset, ends[ends.length - 1], stride, m, extrapolate);\n  }\n  let coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    } else if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates, offset, end, stride, m, false);\n    }\n    offset = end;\n  }\n  return null;\n}\n","/**\n * @module ol/geom/flat/length\n */\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n","/**\n * @module ol/geom/LineString\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from '../geom/flat/closest.js';\nimport {deflateCoordinates} from '../geom/flat/deflate.js';\nimport {inflateCoordinates} from '../geom/flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from '../geom/flat/interpolate.js';\nimport {intersectsLineString} from '../geom/flat/intersectsextent.js';\nimport {lineStringLength} from '../geom/flat/length.js';\nimport {forEach as forEachSegment} from '../geom/flat/segments.js';\nimport {douglasPeucker} from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @constructor\n * @extends {module:ol/geom/SimpleGeometry}\n * @param {Array.<module:ol/coordinate~Coordinate>} coordinates Coordinates.\n * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst LineString = function(coordinates, opt_layout) {\n\n  SimpleGeometry.call(this);\n\n  /**\n   * @private\n   * @type {module:ol/coordinate~Coordinate}\n   */\n  this.flatMidpoint_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.flatMidpointRevision_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\ninherits(LineString, SimpleGeometry);\n\n\n/**\n * Append the passed coordinate to the coordinates of the linestring.\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @api\n */\nLineString.prototype.appendCoordinate = function(coordinate) {\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = coordinate.slice();\n  } else {\n    extend(this.flatCoordinates, coordinate);\n  }\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!module:ol/geom/LineString} Clone.\n * @override\n * @api\n */\nLineString.prototype.clone = function() {\n  const lineString = new LineString(null);\n  lineString.setFlatCoordinates(this.layout, this.flatCoordinates.slice());\n  return lineString;\n};\n\n\n/**\n * @inheritDoc\n */\nLineString.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(maxSquaredDelta(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return assignClosestPoint(\n    this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n    this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * Iterate over each segment, calling the provided callback.\n * If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n *\n * @param {function(this: S, module:ol/coordinate~Coordinate, module:ol/coordinate~Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T,S\n * @api\n */\nLineString.prototype.forEachSegment = function(callback) {\n  return forEachSegment(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, callback);\n};\n\n\n/**\n * Returns the coordinate at `m` using linear interpolation, or `null` if no\n * such coordinate exists.\n *\n * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n * M will return the first coordinate and Ms greater than the last M will\n * return the last coordinate.\n *\n * @param {number} m M.\n * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n * @return {module:ol/coordinate~Coordinate} Coordinate.\n * @api\n */\nLineString.prototype.getCoordinateAtM = function(m, opt_extrapolate) {\n  if (this.layout != GeometryLayout.XYM &&\n      this.layout != GeometryLayout.XYZM) {\n    return null;\n  }\n  const extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n  return lineStringCoordinateAtM(this.flatCoordinates, 0,\n    this.flatCoordinates.length, this.stride, m, extrapolate);\n};\n\n\n/**\n * Return the coordinates of the linestring.\n * @return {Array.<module:ol/coordinate~Coordinate>} Coordinates.\n * @override\n * @api\n */\nLineString.prototype.getCoordinates = function() {\n  return inflateCoordinates(\n    this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n};\n\n\n/**\n * Return the coordinate at the provided fraction along the linestring.\n * The `fraction` is a number between 0 and 1, where 0 is the start of the\n * linestring and 1 is the end.\n * @param {number} fraction Fraction.\n * @param {module:ol/coordinate~Coordinate=} opt_dest Optional coordinate whose values will\n *     be modified. If not provided, a new coordinate will be returned.\n * @return {module:ol/coordinate~Coordinate} Coordinate of the interpolated point.\n * @api\n */\nLineString.prototype.getCoordinateAt = function(fraction, opt_dest) {\n  return interpolatePoint(\n    this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n    fraction, opt_dest);\n};\n\n\n/**\n * Return the length of the linestring on projected plane.\n * @return {number} Length (on projected plane).\n * @api\n */\nLineString.prototype.getLength = function() {\n  return lineStringLength(\n    this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n};\n\n\n/**\n * @return {Array.<number>} Flat midpoint.\n */\nLineString.prototype.getFlatMidpoint = function() {\n  if (this.flatMidpointRevision_ != this.getRevision()) {\n    this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\n    this.flatMidpointRevision_ = this.getRevision();\n  }\n  return this.flatMidpoint_;\n};\n\n\n/**\n * @inheritDoc\n */\nLineString.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  const simplifiedFlatCoordinates = [];\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n    squaredTolerance, simplifiedFlatCoordinates, 0);\n  const simplifiedLineString = new LineString(null);\n  simplifiedLineString.setFlatCoordinates(\n    GeometryLayout.XY, simplifiedFlatCoordinates);\n  return simplifiedLineString;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nLineString.prototype.getType = function() {\n  return GeometryType.LINE_STRING;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nLineString.prototype.intersectsExtent = function(extent) {\n  return intersectsLineString(\n    this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n    extent);\n};\n\n\n/**\n * Set the coordinates of the linestring.\n * @param {Array.<module:ol/coordinate~Coordinate>} coordinates Coordinates.\n * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nLineString.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null);\n  } else {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  }\n};\n\n\n/**\n * @param {module:ol/geom/GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n */\nLineString.prototype.setFlatCoordinates = function(layout, flatCoordinates) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.changed();\n};\nexport default LineString;\n","/**\n * @module ol/geom/MultiLineString\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport {assignClosestArrayPoint, arrayMaxSquaredDelta} from '../geom/flat/closest.js';\nimport {deflateCoordinatesArray} from '../geom/flat/deflate.js';\nimport {inflateCoordinatesArray} from '../geom/flat/inflate.js';\nimport {interpolatePoint, lineStringsCoordinateAtM} from '../geom/flat/interpolate.js';\nimport {intersectsLineStringArray} from '../geom/flat/intersectsextent.js';\nimport {douglasPeuckerArray} from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @constructor\n * @extends {module:ol/geom/SimpleGeometry}\n * @param {Array.<Array.<module:ol/coordinate~Coordinate>>} coordinates Coordinates.\n * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiLineString = function(coordinates, opt_layout) {\n\n  SimpleGeometry.call(this);\n\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n  this.ends_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\ninherits(MultiLineString, SimpleGeometry);\n\n\n/**\n * Append the passed linestring to the multilinestring.\n * @param {module:ol/geom/LineString} lineString LineString.\n * @api\n */\nMultiLineString.prototype.appendLineString = function(lineString) {\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = lineString.getFlatCoordinates().slice();\n  } else {\n    extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n  }\n  this.ends_.push(this.flatCoordinates.length);\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!module:ol/geom/MultiLineString} Clone.\n * @override\n * @api\n */\nMultiLineString.prototype.clone = function() {\n  const multiLineString = new MultiLineString(null);\n  multiLineString.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(), this.ends_.slice());\n  return multiLineString;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiLineString.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(\n      this.flatCoordinates, 0, this.ends_, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return assignClosestArrayPoint(\n    this.flatCoordinates, 0, this.ends_, this.stride,\n    this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * Returns the coordinate at `m` using linear interpolation, or `null` if no\n * such coordinate exists.\n *\n * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n * M will return the first coordinate and Ms greater than the last M will\n * return the last coordinate.\n *\n * `opt_interpolate` controls interpolation between consecutive LineStrings\n * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\n * will be linearly interpolated between the last coordinate of one LineString\n * and the first coordinate of the next LineString.  If `opt_interpolate` is\n * `false` then the function will return `null` for Ms falling between\n * LineStrings.\n *\n * @param {number} m M.\n * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n * @param {boolean=} opt_interpolate Interpolate. Default is `false`.\n * @return {module:ol/coordinate~Coordinate} Coordinate.\n * @api\n */\nMultiLineString.prototype.getCoordinateAtM = function(m, opt_extrapolate, opt_interpolate) {\n  if ((this.layout != GeometryLayout.XYM &&\n       this.layout != GeometryLayout.XYZM) ||\n      this.flatCoordinates.length === 0) {\n    return null;\n  }\n  const extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n  const interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\n  return lineStringsCoordinateAtM(this.flatCoordinates, 0,\n    this.ends_, this.stride, m, extrapolate, interpolate);\n};\n\n\n/**\n * Return the coordinates of the multilinestring.\n * @return {Array.<Array.<module:ol/coordinate~Coordinate>>} Coordinates.\n * @override\n * @api\n */\nMultiLineString.prototype.getCoordinates = function() {\n  return inflateCoordinatesArray(\n    this.flatCoordinates, 0, this.ends_, this.stride);\n};\n\n\n/**\n * @return {Array.<number>} Ends.\n */\nMultiLineString.prototype.getEnds = function() {\n  return this.ends_;\n};\n\n\n/**\n * Return the linestring at the specified index.\n * @param {number} index Index.\n * @return {module:ol/geom/LineString} LineString.\n * @api\n */\nMultiLineString.prototype.getLineString = function(index) {\n  if (index < 0 || this.ends_.length <= index) {\n    return null;\n  }\n  const lineString = new LineString(null);\n  lineString.setFlatCoordinates(this.layout, this.flatCoordinates.slice(\n    index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]));\n  return lineString;\n};\n\n\n/**\n * Return the linestrings of this multilinestring.\n * @return {Array.<module:ol/geom/LineString>} LineStrings.\n * @api\n */\nMultiLineString.prototype.getLineStrings = function() {\n  const flatCoordinates = this.flatCoordinates;\n  const ends = this.ends_;\n  const layout = this.layout;\n  /** @type {Array.<module:ol/geom/LineString>} */\n  const lineStrings = [];\n  let offset = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(layout, flatCoordinates.slice(offset, end));\n    lineStrings.push(lineString);\n    offset = end;\n  }\n  return lineStrings;\n};\n\n\n/**\n * @return {Array.<number>} Flat midpoints.\n */\nMultiLineString.prototype.getFlatMidpoints = function() {\n  const midpoints = [];\n  const flatCoordinates = this.flatCoordinates;\n  let offset = 0;\n  const ends = this.ends_;\n  const stride = this.stride;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const midpoint = interpolatePoint(\n      flatCoordinates, offset, end, stride, 0.5);\n    extend(midpoints, midpoint);\n    offset = end;\n  }\n  return midpoints;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiLineString.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  const simplifiedFlatCoordinates = [];\n  const simplifiedEnds = [];\n  simplifiedFlatCoordinates.length = douglasPeuckerArray(\n    this.flatCoordinates, 0, this.ends_, this.stride, squaredTolerance,\n    simplifiedFlatCoordinates, 0, simplifiedEnds);\n  const simplifiedMultiLineString = new MultiLineString(null);\n  simplifiedMultiLineString.setFlatCoordinates(\n    GeometryLayout.XY, simplifiedFlatCoordinates, simplifiedEnds);\n  return simplifiedMultiLineString;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiLineString.prototype.getType = function() {\n  return GeometryType.MULTI_LINE_STRING;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiLineString.prototype.intersectsExtent = function(extent) {\n  return intersectsLineStringArray(\n    this.flatCoordinates, 0, this.ends_, this.stride, extent);\n};\n\n\n/**\n * Set the coordinates of the multilinestring.\n * @param {Array.<Array.<module:ol/coordinate~Coordinate>>} coordinates Coordinates.\n * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiLineString.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null, this.ends_);\n  } else {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n};\n\n\n/**\n * @param {module:ol/geom/GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<number>} ends Ends.\n */\nMultiLineString.prototype.setFlatCoordinates = function(layout, flatCoordinates, ends) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.ends_ = ends;\n  this.changed();\n};\n\n\n/**\n * @param {Array.<module:ol/geom/LineString>} lineStrings LineStrings.\n */\nMultiLineString.prototype.setLineStrings = function(lineStrings) {\n  let layout = this.getLayout();\n  const flatCoordinates = [];\n  const ends = [];\n  for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n    const lineString = lineStrings[i];\n    if (i === 0) {\n      layout = lineString.getLayout();\n    }\n    extend(flatCoordinates, lineString.getFlatCoordinates());\n    ends.push(flatCoordinates.length);\n  }\n  this.setFlatCoordinates(layout, flatCoordinates, ends);\n};\nexport default MultiLineString;\n","/**\n * @module ol/geom/MultiPoint\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Point from '../geom/Point.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport {deflateCoordinates} from '../geom/flat/deflate.js';\nimport {inflateCoordinates} from '../geom/flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @constructor\n * @extends {module:ol/geom/SimpleGeometry}\n * @param {Array.<module:ol/coordinate~Coordinate>} coordinates Coordinates.\n * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiPoint = function(coordinates, opt_layout) {\n  SimpleGeometry.call(this);\n  this.setCoordinates(coordinates, opt_layout);\n};\n\ninherits(MultiPoint, SimpleGeometry);\n\n\n/**\n * Append the passed point to this multipoint.\n * @param {module:ol/geom/Point} point Point.\n * @api\n */\nMultiPoint.prototype.appendPoint = function(point) {\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = point.getFlatCoordinates().slice();\n  } else {\n    extend(this.flatCoordinates, point.getFlatCoordinates());\n  }\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!module:ol/geom/MultiPoint} Clone.\n * @override\n * @api\n */\nMultiPoint.prototype.clone = function() {\n  const multiPoint = new MultiPoint(null);\n  multiPoint.setFlatCoordinates(this.layout, this.flatCoordinates.slice());\n  return multiPoint;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPoint.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  const flatCoordinates = this.flatCoordinates;\n  const stride = this.stride;\n  for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    const squaredDistance = squaredDx(\n      x, y, flatCoordinates[i], flatCoordinates[i + 1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (let j = 0; j < stride; ++j) {\n        closestPoint[j] = flatCoordinates[i + j];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n};\n\n\n/**\n * Return the coordinates of the multipoint.\n * @return {Array.<module:ol/coordinate~Coordinate>} Coordinates.\n * @override\n * @api\n */\nMultiPoint.prototype.getCoordinates = function() {\n  return inflateCoordinates(\n    this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n};\n\n\n/**\n * Return the point at the specified index.\n * @param {number} index Index.\n * @return {module:ol/geom/Point} Point.\n * @api\n */\nMultiPoint.prototype.getPoint = function(index) {\n  const n = !this.flatCoordinates ? 0 : this.flatCoordinates.length / this.stride;\n  if (index < 0 || n <= index) {\n    return null;\n  }\n  const point = new Point(null);\n  point.setFlatCoordinates(this.layout, this.flatCoordinates.slice(\n    index * this.stride, (index + 1) * this.stride));\n  return point;\n};\n\n\n/**\n * Return the points of this multipoint.\n * @return {Array.<module:ol/geom/Point>} Points.\n * @api\n */\nMultiPoint.prototype.getPoints = function() {\n  const flatCoordinates = this.flatCoordinates;\n  const layout = this.layout;\n  const stride = this.stride;\n  /** @type {Array.<module:ol/geom/Point>} */\n  const points = [];\n  for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    const point = new Point(null);\n    point.setFlatCoordinates(layout, flatCoordinates.slice(i, i + stride));\n    points.push(point);\n  }\n  return points;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPoint.prototype.getType = function() {\n  return GeometryType.MULTI_POINT;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPoint.prototype.intersectsExtent = function(extent) {\n  const flatCoordinates = this.flatCoordinates;\n  const stride = this.stride;\n  for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    const x = flatCoordinates[i];\n    const y = flatCoordinates[i + 1];\n    if (containsXY(extent, x, y)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * Set the coordinates of the multipoint.\n * @param {Array.<module:ol/coordinate~Coordinate>} coordinates Coordinates.\n * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiPoint.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null);\n  } else {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  }\n};\n\n\n/**\n * @param {module:ol/geom/GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n */\nMultiPoint.prototype.setFlatCoordinates = function(layout, flatCoordinates) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.changed();\n};\nexport default MultiPoint;\n","/**\n * @module ol/geom/MultiPolygon\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport Polygon from '../geom/Polygon.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport {linearRingss as linearRingssArea} from '../geom/flat/area.js';\nimport {linearRingss as linearRingssCenter} from '../geom/flat/center.js';\nimport {assignClosestMultiArrayPoint, multiArrayMaxSquaredDelta} from '../geom/flat/closest.js';\nimport {linearRingssContainsXY} from '../geom/flat/contains.js';\nimport {deflateMultiCoordinatesArray} from '../geom/flat/deflate.js';\nimport {inflateMultiCoordinatesArray} from '../geom/flat/inflate.js';\nimport {getInteriorPointsOfMultiArray} from '../geom/flat/interiorpoint.js';\nimport {intersectsLinearRingMultiArray} from '../geom/flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRingsArray} from '../geom/flat/orient.js';\nimport {quantizeMultiArray} from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @constructor\n * @extends {module:ol/geom/SimpleGeometry}\n * @param {Array.<Array.<Array.<module:ol/coordinate~Coordinate>>>} coordinates Coordinates.\n * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiPolygon = function(coordinates, opt_layout) {\n\n  SimpleGeometry.call(this);\n\n  /**\n   * @type {Array.<Array.<number>>}\n   * @private\n   */\n  this.endss_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.flatInteriorPointsRevision_ = -1;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.flatInteriorPoints_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.orientedRevision_ = -1;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.orientedFlatCoordinates_ = null;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\ninherits(MultiPolygon, SimpleGeometry);\n\n\n/**\n * Append the passed polygon to this multipolygon.\n * @param {module:ol/geom/Polygon} polygon Polygon.\n * @api\n */\nMultiPolygon.prototype.appendPolygon = function(polygon) {\n  /** @type {Array.<number>} */\n  let ends;\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = polygon.getFlatCoordinates().slice();\n    ends = polygon.getEnds().slice();\n    this.endss_.push();\n  } else {\n    const offset = this.flatCoordinates.length;\n    extend(this.flatCoordinates, polygon.getFlatCoordinates());\n    ends = polygon.getEnds().slice();\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      ends[i] += offset;\n    }\n  }\n  this.endss_.push(ends);\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!module:ol/geom/MultiPolygon} Clone.\n * @override\n * @api\n */\nMultiPolygon.prototype.clone = function() {\n  const multiPolygon = new MultiPolygon(null);\n\n  const len = this.endss_.length;\n  const newEndss = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    newEndss[i] = this.endss_[i].slice();\n  }\n\n  multiPolygon.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(), newEndss);\n  return multiPolygon;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(multiArrayMaxSquaredDelta(\n      this.flatCoordinates, 0, this.endss_, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return assignClosestMultiArrayPoint(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n    this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.containsXY = function(x, y) {\n  return linearRingssContainsXY(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, x, y);\n};\n\n\n/**\n * Return the area of the multipolygon on projected plane.\n * @return {number} Area (on projected plane).\n * @api\n */\nMultiPolygon.prototype.getArea = function() {\n  return linearRingssArea(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride);\n};\n\n\n/**\n * Get the coordinate array for this geometry.  This array has the structure\n * of a GeoJSON coordinate array for multi-polygons.\n *\n * @param {boolean=} opt_right Orient coordinates according to the right-hand\n *     rule (counter-clockwise for exterior and clockwise for interior rings).\n *     If `false`, coordinates will be oriented according to the left-hand rule\n *     (clockwise for exterior and counter-clockwise for interior rings).\n *     By default, coordinate orientation will depend on how the geometry was\n *     constructed.\n * @return {Array.<Array.<Array.<module:ol/coordinate~Coordinate>>>} Coordinates.\n * @override\n * @api\n */\nMultiPolygon.prototype.getCoordinates = function(opt_right) {\n  let flatCoordinates;\n  if (opt_right !== undefined) {\n    flatCoordinates = this.getOrientedFlatCoordinates().slice();\n    orientLinearRingsArray(\n      flatCoordinates, 0, this.endss_, this.stride, opt_right);\n  } else {\n    flatCoordinates = this.flatCoordinates;\n  }\n\n  return inflateMultiCoordinatesArray(\n    flatCoordinates, 0, this.endss_, this.stride);\n};\n\n\n/**\n * @return {Array.<Array.<number>>} Endss.\n */\nMultiPolygon.prototype.getEndss = function() {\n  return this.endss_;\n};\n\n\n/**\n * @return {Array.<number>} Flat interior points.\n */\nMultiPolygon.prototype.getFlatInteriorPoints = function() {\n  if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n    const flatCenters = linearRingssCenter(\n      this.flatCoordinates, 0, this.endss_, this.stride);\n    this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n      flatCenters);\n    this.flatInteriorPointsRevision_ = this.getRevision();\n  }\n  return this.flatInteriorPoints_;\n};\n\n\n/**\n * Return the interior points as {@link module:ol/geom/MultiPoint multipoint}.\n * @return {module:ol/geom/MultiPoint} Interior points as XYM coordinates, where M is\n * the length of the horizontal intersection that the point belongs to.\n * @api\n */\nMultiPolygon.prototype.getInteriorPoints = function() {\n  const interiorPoints = new MultiPoint(null);\n  interiorPoints.setFlatCoordinates(GeometryLayout.XYM,\n    this.getFlatInteriorPoints().slice());\n  return interiorPoints;\n};\n\n\n/**\n * @return {Array.<number>} Oriented flat coordinates.\n */\nMultiPolygon.prototype.getOrientedFlatCoordinates = function() {\n  if (this.orientedRevision_ != this.getRevision()) {\n    const flatCoordinates = this.flatCoordinates;\n    if (linearRingsAreOriented(\n      flatCoordinates, 0, this.endss_, this.stride)) {\n      this.orientedFlatCoordinates_ = flatCoordinates;\n    } else {\n      this.orientedFlatCoordinates_ = flatCoordinates.slice();\n      this.orientedFlatCoordinates_.length =\n          orientLinearRingsArray(\n            this.orientedFlatCoordinates_, 0, this.endss_, this.stride);\n    }\n    this.orientedRevision_ = this.getRevision();\n  }\n  return this.orientedFlatCoordinates_;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  const simplifiedFlatCoordinates = [];\n  const simplifiedEndss = [];\n  simplifiedFlatCoordinates.length = quantizeMultiArray(\n    this.flatCoordinates, 0, this.endss_, this.stride,\n    Math.sqrt(squaredTolerance),\n    simplifiedFlatCoordinates, 0, simplifiedEndss);\n  const simplifiedMultiPolygon = new MultiPolygon(null);\n  simplifiedMultiPolygon.setFlatCoordinates(\n    GeometryLayout.XY, simplifiedFlatCoordinates, simplifiedEndss);\n  return simplifiedMultiPolygon;\n};\n\n\n/**\n * Return the polygon at the specified index.\n * @param {number} index Index.\n * @return {module:ol/geom/Polygon} Polygon.\n * @api\n */\nMultiPolygon.prototype.getPolygon = function(index) {\n  if (index < 0 || this.endss_.length <= index) {\n    return null;\n  }\n  let offset;\n  if (index === 0) {\n    offset = 0;\n  } else {\n    const prevEnds = this.endss_[index - 1];\n    offset = prevEnds[prevEnds.length - 1];\n  }\n  const ends = this.endss_[index].slice();\n  const end = ends[ends.length - 1];\n  if (offset !== 0) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      ends[i] -= offset;\n    }\n  }\n  const polygon = new Polygon(null);\n  polygon.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(offset, end), ends);\n  return polygon;\n};\n\n\n/**\n * Return the polygons of this multipolygon.\n * @return {Array.<module:ol/geom/Polygon>} Polygons.\n * @api\n */\nMultiPolygon.prototype.getPolygons = function() {\n  const layout = this.layout;\n  const flatCoordinates = this.flatCoordinates;\n  const endss = this.endss_;\n  const polygons = [];\n  let offset = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (let j = 0, jj = ends.length; j < jj; ++j) {\n        ends[j] -= offset;\n      }\n    }\n    const polygon = new Polygon(null);\n    polygon.setFlatCoordinates(\n      layout, flatCoordinates.slice(offset, end), ends);\n    polygons.push(polygon);\n    offset = end;\n  }\n  return polygons;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPolygon.prototype.getType = function() {\n  return GeometryType.MULTI_POLYGON;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPolygon.prototype.intersectsExtent = function(extent) {\n  return intersectsLinearRingMultiArray(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, extent);\n};\n\n\n/**\n * Set the coordinates of the multipolygon.\n * @param {Array.<Array.<Array.<module:ol/coordinate~Coordinate>>>} coordinates Coordinates.\n * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiPolygon.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null, this.endss_);\n  } else {\n    this.setLayout(opt_layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = deflateMultiCoordinatesArray(\n      this.flatCoordinates, 0, coordinates, this.stride, this.endss_);\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length = lastEnds.length === 0 ?\n        0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n};\n\n\n/**\n * @param {module:ol/geom/GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<Array.<number>>} endss Endss.\n */\nMultiPolygon.prototype.setFlatCoordinates = function(layout, flatCoordinates, endss) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.endss_ = endss;\n  this.changed();\n};\n\n\n/**\n * @param {Array.<module:ol/geom/Polygon>} polygons Polygons.\n */\nMultiPolygon.prototype.setPolygons = function(polygons) {\n  let layout = this.getLayout();\n  const flatCoordinates = [];\n  const endss = [];\n  for (let i = 0, ii = polygons.length; i < ii; ++i) {\n    const polygon = polygons[i];\n    if (i === 0) {\n      layout = polygon.getLayout();\n    }\n    const offset = flatCoordinates.length;\n    const ends = polygon.getEnds();\n    for (let j = 0, jj = ends.length; j < jj; ++j) {\n      ends[j] += offset;\n    }\n    extend(flatCoordinates, polygon.getFlatCoordinates());\n    endss.push(ends);\n  }\n  this.setFlatCoordinates(layout, flatCoordinates, endss);\n};\n\nexport default MultiPolygon;\n","/**\n * @module ol/geom/flat/center\n */\nimport {createEmpty, createOrUpdateFromFlatCoordinates} from '../../extent.js';\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array.<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  const flatCenters = [];\n  let extent = createEmpty();\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    extent = createOrUpdateFromFlatCoordinates(flatCoordinates, offset, ends[0], stride);\n    flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n    offset = ends[ends.length - 1];\n  }\n  return flatCenters;\n}\n","/**\n * @module ol/LayerType\n */\n\n/**\n * A layer type used when creating layer renderers.\n * @enum {string}\n */\nexport default {\n  IMAGE: 'IMAGE',\n  TILE: 'TILE',\n  VECTOR_TILE: 'VECTOR_TILE',\n  VECTOR: 'VECTOR'\n};\n","/**\n * @module ol/layer/VectorRenderType\n */\n\n/**\n * @enum {string}\n * Render mode for vector layers:\n *  * `'image'`: Vector layers are rendered as images. Great performance, but\n *    point symbols and texts are always rotated with the view and pixels are\n *    scaled during zoom animations.\n *  * `'vector'`: Vector layers are rendered as vectors. Most accurate rendering\n *    even during animations, but slower performance.\n * @api\n */\nexport default {\n  IMAGE: 'image',\n  VECTOR: 'vector'\n};\n","/**\n * @module ol/layer/Vector\n */\nimport {inherits} from '../index.js';\nimport LayerType from '../LayerType.js';\nimport Layer from '../layer/Layer.js';\nimport VectorRenderType from '../layer/VectorRenderType.js';\nimport {assign} from '../obj.js';\nimport {createDefaultStyle, toFunction as toStyleFunction} from '../style/Style.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {module:ol/extent~Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex=0] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {module:ol/render~OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {module:ol/layer/VectorRenderType|string} [renderMode='vector'] Render mode for vector layers:\n *  * `'image'`: Vector layers are rendered as images. Great performance, but point symbols and\n *    texts are always rotated with the view and pixels are scaled during zoom animations.\n *  * `'vector'`: Vector layers are rendered as vectors. Most accurate rendering even during\n *    animations, but slower performance.\n * @property {module:ol/source/Vector} [source] Source.\n * @property {module:ol/PluggableMap} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles, and the priority is defined by the z-index of the style. Lower z-index\n * means higher priority.\n * @property {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction} [style] Layer style. See\n * {@link module:ol/style} for default style which will be used if this is not defined.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load simultaneously.\n * @property {boolean} [updateWhileAnimating=false] When set to `true` and `renderMode`\n * is `vector`, feature batches will be recreated during animations. This means that no\n * vectors will be shown clipped, but the setting will have a performance impact for large\n * amounts of vector data. When set to `false`, batches will be recreated when no animation\n * is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true` and `renderMode`\n * is `vector`, feature batches will be recreated during interactions. See also\n * `updateWhileAnimating`.\n */\n\n\n/**\n * @enum {string}\n * Render mode for vector layers:\n *  * `'image'`: Vector layers are rendered as images. Great performance, but\n *    point symbols and texts are always rotated with the view and pixels are\n *    scaled during zoom animations.\n *  * `'vector'`: Vector layers are rendered as vectors. Most accurate rendering\n *    even during animations, but slower performance.\n * @api\n */\nexport const RenderType = {\n  IMAGE: 'image',\n  VECTOR: 'vector'\n};\n\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder'\n};\n\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @constructor\n * @extends {module:ol/layer/Layer}\n * @fires module:ol/render/Event~RenderEvent\n * @param {module:ol/layer/Vector~Options=} opt_options Options.\n * @api\n */\nconst VectorLayer = function(opt_options) {\n  const options = opt_options ?\n    opt_options : /** @type {module:ol/layer/Vector~Options} */ ({});\n\n  const baseOptions = assign({}, options);\n\n  delete baseOptions.style;\n  delete baseOptions.renderBuffer;\n  delete baseOptions.updateWhileAnimating;\n  delete baseOptions.updateWhileInteracting;\n  Layer.call(this, /** @type {module:ol/layer/Layer~Options} */ (baseOptions));\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.declutter_ = options.declutter !== undefined ? options.declutter : false;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.renderBuffer_ = options.renderBuffer !== undefined ?\n    options.renderBuffer : 100;\n\n  /**\n   * User provided style.\n   * @type {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction}\n   * @private\n   */\n  this.style_ = null;\n\n  /**\n   * Style function for use within the library.\n   * @type {module:ol/style/Style~StyleFunction|undefined}\n   * @private\n   */\n  this.styleFunction_ = undefined;\n\n  this.setStyle(options.style);\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.updateWhileAnimating_ = options.updateWhileAnimating !== undefined ?\n    options.updateWhileAnimating : false;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.updateWhileInteracting_ = options.updateWhileInteracting !== undefined ?\n    options.updateWhileInteracting : false;\n\n  /**\n   * @private\n   * @type {module:ol/layer/VectorTileRenderType|string}\n   */\n  this.renderMode_ = options.renderMode || VectorRenderType.VECTOR;\n\n  /**\n   * The layer type.\n   * @protected\n   * @type {module:ol/LayerType}\n   */\n  this.type = LayerType.VECTOR;\n\n};\n\ninherits(VectorLayer, Layer);\n\n\n/**\n * @return {boolean} Declutter.\n */\nVectorLayer.prototype.getDeclutter = function() {\n  return this.declutter_;\n};\n\n\n/**\n * @param {boolean} declutter Declutter.\n */\nVectorLayer.prototype.setDeclutter = function(declutter) {\n  this.declutter_ = declutter;\n};\n\n\n/**\n * @return {number|undefined} Render buffer.\n */\nVectorLayer.prototype.getRenderBuffer = function() {\n  return this.renderBuffer_;\n};\n\n\n/**\n * @return {function(module:ol/Feature, module:ol/Feature): number|null|undefined} Render\n *     order.\n */\nVectorLayer.prototype.getRenderOrder = function() {\n  return (\n    /** @type {module:ol/render~OrderFunction|null|undefined} */ (this.get(Property.RENDER_ORDER))\n  );\n};\n\n\n/**\n * Return the associated {@link module:ol/source/Vector vectorsource} of the layer.\n * @function\n * @return {module:ol/source/Vector} Source.\n * @api\n */\nVectorLayer.prototype.getSource;\n\n\n/**\n * Get the style for features.  This returns whatever was passed to the `style`\n * option at construction or to the `setStyle` method.\n * @return {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction}\n *     Layer style.\n * @api\n */\nVectorLayer.prototype.getStyle = function() {\n  return this.style_;\n};\n\n\n/**\n * Get the style function.\n * @return {module:ol/style/Style~StyleFunction|undefined} Layer style function.\n * @api\n */\nVectorLayer.prototype.getStyleFunction = function() {\n  return this.styleFunction_;\n};\n\n\n/**\n * @return {boolean} Whether the rendered layer should be updated while\n *     animating.\n */\nVectorLayer.prototype.getUpdateWhileAnimating = function() {\n  return this.updateWhileAnimating_;\n};\n\n\n/**\n * @return {boolean} Whether the rendered layer should be updated while\n *     interacting.\n */\nVectorLayer.prototype.getUpdateWhileInteracting = function() {\n  return this.updateWhileInteracting_;\n};\n\n\n/**\n * @param {module:ol/render~OrderFunction|null|undefined} renderOrder\n *     Render order.\n */\nVectorLayer.prototype.setRenderOrder = function(renderOrder) {\n  this.set(Property.RENDER_ORDER, renderOrder);\n};\n\n\n/**\n * Set the style for features.  This can be a single style object, an array\n * of styles, or a function that takes a feature and resolution and returns\n * an array of styles. If it is `undefined` the default style is used. If\n * it is `null` the layer has no style (a `null` style), so only features\n * that have their own styles will be rendered in the layer. See\n * {@link module:ol/style} for information on the default style.\n * @param {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction|null|undefined}\n *     style Layer style.\n * @api\n */\nVectorLayer.prototype.setStyle = function(style) {\n  this.style_ = style !== undefined ? style : createDefaultStyle;\n  this.styleFunction_ = style === null ?\n    undefined : toStyleFunction(this.style_);\n  this.changed();\n};\n\n\n/**\n * @return {module:ol/layer/VectorRenderType|string} The render mode.\n */\nVectorLayer.prototype.getRenderMode = function() {\n  return this.renderMode_;\n};\n\n\nexport default VectorLayer;\n","/**\n * @module ol/format/FormatType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ARRAY_BUFFER: 'arraybuffer',\n  JSON: 'json',\n  TEXT: 'text',\n  XML: 'xml'\n};\n","/**\n * @module ol/featureloader\n */\nimport {UNDEFINED} from './functions.js';\nimport FormatType from './format/FormatType.js';\n\n\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * load features.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area to be loaded,\n * a `{number}` representing the resolution (map units per pixel) and an\n * {@link module:ol/proj/Projection} for the projection  as\n * arguments. `this` within the function is bound to the\n * {@link module:ol/source/Vector} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:module:ol/source/Vector, module:ol/extent~Extent, number,\n *                    module:ol/proj/Projection)} FeatureLoader\n * @api\n */\n\n\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(module:ol/extent~Extent, number, module:ol/proj/Projection): string} FeatureUrlFunction\n * @api\n */\n\n\n/**\n * @param {string|module:ol/featureloader~FeatureUrlFunction} url Feature URL service.\n * @param {module:ol/format/Feature} format Feature format.\n * @param {function(this:module:ol/VectorTile, Array.<module:ol/Feature>, module:ol/proj/Projection, module:ol/extent~Extent)|function(this:module:ol/source/Vector, Array.<module:ol/Feature>)} success\n *     Function called with the loaded features and optionally with the data\n *     projection. Called with the vector tile or source as `this`.\n * @param {function(this:module:ol/VectorTile)|function(this:module:ol/source/Vector)} failure\n *     Function called when loading failed. Called with the vector tile or\n *     source as `this`.\n * @return {module:ol/featureloader~FeatureLoader} The feature loader.\n */\nexport function loadFeaturesXhr(url, format, success, failure) {\n  return (\n    /**\n     * @param {module:ol/extent~Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {module:ol/proj/Projection} projection Projection.\n     * @this {module:ol/source/Vector|module:ol/VectorTile}\n     */\n    function(extent, resolution, projection) {\n      const xhr = new XMLHttpRequest();\n      xhr.open('GET',\n        typeof url === 'function' ? url(extent, resolution, projection) : url,\n        true);\n      if (format.getType() == FormatType.ARRAY_BUFFER) {\n        xhr.responseType = 'arraybuffer';\n      }\n      /**\n       * @param {Event} event Event.\n       * @private\n       */\n      xhr.onload = function(event) {\n        // status will be 0 for file:// urls\n        if (!xhr.status || xhr.status >= 200 && xhr.status < 300) {\n          const type = format.getType();\n          /** @type {Document|Node|Object|string|undefined} */\n          let source;\n          if (type == FormatType.JSON || type == FormatType.TEXT) {\n            source = xhr.responseText;\n          } else if (type == FormatType.XML) {\n            source = xhr.responseXML;\n            if (!source) {\n              source = new DOMParser().parseFromString(xhr.responseText, 'application/xml');\n            }\n          } else if (type == FormatType.ARRAY_BUFFER) {\n            source = /** @type {ArrayBuffer} */ (xhr.response);\n          }\n          if (source) {\n            success.call(this, format.readFeatures(source,\n              {featureProjection: projection}),\n            format.readProjection(source), format.getLastExtent());\n          } else {\n            failure.call(this);\n          }\n        } else {\n          failure.call(this);\n        }\n      }.bind(this);\n      /**\n       * @private\n       */\n      xhr.onerror = function() {\n        failure.call(this);\n      }.bind(this);\n      xhr.send();\n    }\n  );\n}\n\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|module:ol/featureloader~FeatureUrlFunction} url Feature URL service.\n * @param {module:ol/format/Feature} format Feature format.\n * @return {module:ol/featureloader~FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  return loadFeaturesXhr(url, format,\n    /**\n     * @param {Array.<module:ol/Feature>} features The loaded features.\n     * @param {module:ol/proj/Projection} dataProjection Data\n     * projection.\n     * @this {module:ol/source/Vector}\n     */\n    function(features, dataProjection) {\n      this.addFeatures(features);\n    }, /* FIXME handle error */ UNDEFINED);\n}\n","/**\n * @module ol/loadingstrategy\n */\n\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array.<module:ol/extent~Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array.<module:ol/extent~Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {module:ol/tilegrid/TileGrid} tileGrid Tile grid.\n * @return {function(module:ol/extent~Extent, number): Array.<module:ol/extent~Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {module:ol/extent~Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @return {Array.<module:ol/extent~Extent>} Extents.\n     */\n    function(extent, resolution) {\n      const z = tileGrid.getZForResolution(resolution);\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n      /** @type {Array.<module:ol/extent~Extent>} */\n      const extents = [];\n      /** @type {module:ol/tilecoord~TileCoord} */\n      const tileCoord = [z, 0, 0];\n      for (tileCoord[1] = tileRange.minX; tileCoord[1] <= tileRange.maxX; ++tileCoord[1]) {\n        for (tileCoord[2] = tileRange.minY; tileCoord[2] <= tileRange.maxY; ++tileCoord[2]) {\n          extents.push(tileGrid.getTileCoordExtent(tileCoord));\n        }\n      }\n      return extents;\n    }\n  );\n}\n","/**\n * @module ol/source/Source\n */\nimport {inherits} from '../index.js';\nimport {UNDEFINED} from '../functions.js';\nimport BaseObject from '../Object.js';\nimport {get as getProjection} from '../proj.js';\nimport SourceState from '../source/State.js';\n\n\n/**\n * A function that returns a string or an array of strings representing source\n * attributions.\n *\n * @typedef {function(module:ol/PluggableMap~FrameState): (string|Array.<string>)} Attribution\n */\n\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings (`{@link module:ol/source/Source~Attribution}`)\n *\n * @typedef {string|Array.<string>|module:ol/source/Source~Attribution} AttributionLike\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions]\n * @property {module:ol/proj~ProjectionLike} projection\n * @property {module:ol/source/State} [state]\n * @property {boolean} [wrapX]\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n *\n * @constructor\n * @abstract\n * @extends {module:ol/Object}\n * @param {module:ol/source/Source~Options} options Source options.\n * @api\n */\nconst Source = function(options) {\n\n  BaseObject.call(this);\n\n  /**\n   * @private\n   * @type {module:ol/proj/Projection}\n   */\n  this.projection_ = getProjection(options.projection);\n\n  /**\n   * @private\n   * @type {?module:ol/source/Source~Attribution}\n   */\n  this.attributions_ = this.adaptAttributions_(options.attributions);\n\n  /**\n   * @private\n   * @type {module:ol/source/State}\n   */\n  this.state_ = options.state !== undefined ?\n    options.state : SourceState.READY;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n};\n\ninherits(Source, BaseObject);\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {module:ol/source/Source~AttributionLike|undefined} attributionLike The attribution option.\n * @return {?module:ol/source/Source~Attribution} An attribution function (or null).\n */\nSource.prototype.adaptAttributions_ = function(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function(frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function(frameState) {\n    return [attributionLike];\n  };\n};\n\n/**\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {number} hitTolerance Hit tolerance in pixels.\n * @param {Object.<string, boolean>} skippedFeatureUids Skipped feature uids.\n * @param {function((module:ol/Feature|module:ol/render/Feature)): T} callback Feature callback.\n * @return {T|undefined} Callback result.\n * @template T\n */\nSource.prototype.forEachFeatureAtCoordinate = UNDEFINED;\n\n\n/**\n * Get the attribution function for the source.\n * @return {?module:ol/source/Source~Attribution} Attribution function.\n */\nSource.prototype.getAttributions = function() {\n  return this.attributions_;\n};\n\n\n/**\n * Get the projection of the source.\n * @return {module:ol/proj/Projection} Projection.\n * @api\n */\nSource.prototype.getProjection = function() {\n  return this.projection_;\n};\n\n\n/**\n * @abstract\n * @return {Array.<number>|undefined} Resolutions.\n */\nSource.prototype.getResolutions = function() {};\n\n\n/**\n * Get the state of the source, see {@link module:ol/source/State~State} for possible states.\n * @return {module:ol/source/State} State.\n * @api\n */\nSource.prototype.getState = function() {\n  return this.state_;\n};\n\n\n/**\n * @return {boolean|undefined} Wrap X.\n */\nSource.prototype.getWrapX = function() {\n  return this.wrapX_;\n};\n\n\n/**\n * Refreshes the source and finally dispatches a 'change' event.\n * @api\n */\nSource.prototype.refresh = function() {\n  this.changed();\n};\n\n\n/**\n * Set the attributions of the source.\n * @param {module:ol/source/Source~AttributionLike|undefined} attributions Attributions.\n *     Can be passed as `string`, `Array<string>`, `{@link module:ol/source/Source~Attribution}`,\n *     or `undefined`.\n * @api\n */\nSource.prototype.setAttributions = function(attributions) {\n  this.attributions_ = this.adaptAttributions_(attributions);\n  this.changed();\n};\n\n\n/**\n * Set the state of the source.\n * @param {module:ol/source/State} state State.\n * @protected\n */\nSource.prototype.setState = function(state) {\n  this.state_ = state;\n  this.changed();\n};\nexport default Source;\n","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event ol/source/Vector~VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event ol/source/Vector~VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event ol/source/Vector~VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector#clear source.clear()} for exceptions.\n   * @event ol/source/Vector~VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature'\n};\n","/**\n * @module ol/structs/RBush\n */\nimport {getUid} from '../index.js';\nimport rbush from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {Object} Entry\n * @property {number} minX\n * @property {number} minY\n * @property {number} maxX\n * @property {number} maxY\n * @property {Object} [value]\n */\n\n/**\n * Wrapper around the RBush by Vladimir Agafonkin.\n *\n * @constructor\n * @param {number=} opt_maxEntries Max entries.\n * @see https://github.com/mourner/rbush\n * @struct\n * @template T\n */\nconst RBush = function(opt_maxEntries) {\n\n  /**\n   * @private\n   */\n  this.rbush_ = rbush(opt_maxEntries, undefined);\n\n  /**\n   * A mapping between the objects added to this rbush wrapper\n   * and the objects that are actually added to the internal rbush.\n   * @private\n   * @type {Object.<number, module:ol/structs/RBush~Entry>}\n   */\n  this.items_ = {};\n\n};\n\n\n/**\n * Insert a value into the RBush.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {T} value Value.\n */\nRBush.prototype.insert = function(extent, value) {\n  /** @type {module:ol/structs/RBush~Entry} */\n  const item = {\n    minX: extent[0],\n    minY: extent[1],\n    maxX: extent[2],\n    maxY: extent[3],\n    value: value\n  };\n\n  this.rbush_.insert(item);\n  this.items_[getUid(value)] = item;\n};\n\n\n/**\n * Bulk-insert values into the RBush.\n * @param {Array.<module:ol/extent~Extent>} extents Extents.\n * @param {Array.<T>} values Values.\n */\nRBush.prototype.load = function(extents, values) {\n  const items = new Array(values.length);\n  for (let i = 0, l = values.length; i < l; i++) {\n    const extent = extents[i];\n    const value = values[i];\n\n    /** @type {module:ol/structs/RBush~Entry} */\n    const item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value\n    };\n    items[i] = item;\n    this.items_[getUid(value)] = item;\n  }\n  this.rbush_.load(items);\n};\n\n\n/**\n * Remove a value from the RBush.\n * @param {T} value Value.\n * @return {boolean} Removed.\n */\nRBush.prototype.remove = function(value) {\n  const uid = getUid(value);\n\n  // get the object in which the value was wrapped when adding to the\n  // internal rbush. then use that object to do the removal.\n  const item = this.items_[uid];\n  delete this.items_[uid];\n  return this.rbush_.remove(item) !== null;\n};\n\n\n/**\n * Update the extent of a value in the RBush.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {T} value Value.\n */\nRBush.prototype.update = function(extent, value) {\n  const item = this.items_[getUid(value)];\n  const bbox = [item.minX, item.minY, item.maxX, item.maxY];\n  if (!equals(bbox, extent)) {\n    this.remove(value);\n    this.insert(extent, value);\n  }\n};\n\n\n/**\n * Return all values in the RBush.\n * @return {Array.<T>} All.\n */\nRBush.prototype.getAll = function() {\n  const items = this.rbush_.all();\n  return items.map(function(item) {\n    return item.value;\n  });\n};\n\n\n/**\n * Return all values in the given extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {Array.<T>} All in extent.\n */\nRBush.prototype.getInExtent = function(extent) {\n  /** @type {module:ol/structs/RBush~Entry} */\n  const bbox = {\n    minX: extent[0],\n    minY: extent[1],\n    maxX: extent[2],\n    maxY: extent[3]\n  };\n  const items = this.rbush_.search(bbox);\n  return items.map(function(item) {\n    return item.value;\n  });\n};\n\n\n/**\n * Calls a callback function with each value in the tree.\n * If the callback returns a truthy value, this value is returned without\n * checking the rest of the tree.\n * @param {function(this: S, T): *} callback Callback.\n * @param {S=} opt_this The object to use as `this` in `callback`.\n * @return {*} Callback return value.\n * @template S\n */\nRBush.prototype.forEach = function(callback, opt_this) {\n  return this.forEach_(this.getAll(), callback, opt_this);\n};\n\n\n/**\n * Calls a callback function with each value in the provided extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {function(this: S, T): *} callback Callback.\n * @param {S=} opt_this The object to use as `this` in `callback`.\n * @return {*} Callback return value.\n * @template S\n */\nRBush.prototype.forEachInExtent = function(extent, callback, opt_this) {\n  return this.forEach_(this.getInExtent(extent), callback, opt_this);\n};\n\n\n/**\n * @param {Array.<T>} values Values.\n * @param {function(this: S, T): *} callback Callback.\n * @param {S=} opt_this The object to use as `this` in `callback`.\n * @private\n * @return {*} Callback return value.\n * @template S\n */\nRBush.prototype.forEach_ = function(values, callback, opt_this) {\n  let result;\n  for (let i = 0, l = values.length; i < l; i++) {\n    result = callback.call(opt_this, values[i]);\n    if (result) {\n      return result;\n    }\n  }\n  return result;\n};\n\n\n/**\n * @return {boolean} Is empty.\n */\nRBush.prototype.isEmpty = function() {\n  return isEmpty(this.items_);\n};\n\n\n/**\n * Remove all values from the RBush.\n */\nRBush.prototype.clear = function() {\n  this.rbush_.clear();\n  this.items_ = {};\n};\n\n\n/**\n * @param {module:ol/extent~Extent=} opt_extent Extent.\n * @return {module:ol/extent~Extent} Extent.\n */\nRBush.prototype.getExtent = function(opt_extent) {\n  // FIXME add getExtent() to rbush\n  const data = this.rbush_.data;\n  return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, opt_extent);\n};\n\n\n/**\n * @param {module:ol/structs/RBush} rbush R-Tree.\n */\nRBush.prototype.concat = function(rbush) {\n  this.rbush_.load(rbush.rbush_.all());\n  for (const i in rbush.items_) {\n    this.items_[i | 0] = rbush.items_[i | 0];\n  }\n};\nexport default RBush;\n","/**\n * @module ol/source/Vector\n */\n\nimport {getUid, inherits} from '../index.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {extend} from '../array.js';\nimport {assert} from '../asserts.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, equals} from '../extent.js';\nimport {xhr} from '../featureloader.js';\nimport {TRUE, UNDEFINED} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {isEmpty, getValues} from '../obj.js';\nimport Source from '../source/Source.js';\nimport SourceState from '../source/State.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport RBush from '../structs/RBush.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(module:ol/extent~Extent, number): Array.<module:ol/extent~Extent>} LoadingStrategy\n * @api\n */\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector} instances are instances of this\n * type.\n *\n * @constructor\n * @extends {module:ol/events/Event}\n * @param {string} type Type.\n * @param {module:ol/Feature=} opt_feature Feature.\n */\nexport const VectorSourceEvent = function(type, opt_feature) {\n\n  Event.call(this, type);\n\n  /**\n   * The feature being added or removed.\n   * @type {module:ol/Feature|undefined}\n   * @api\n   */\n  this.feature = opt_feature;\n\n};\ninherits(VectorSourceEvent, Event);\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {Array.<module:ol/Feature>|module:ol/Collection.<module:ol/Feature>} [features]\n * Features. If provided as {@link module:ol/Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {module:ol/format/Feature} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {module:ol/featureloader~FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader.\n *\n * Example:\n *\n * ```js\n * import {Vector} from 'ol/source';\n * import {GeoJSON} from 'ol/format';\n * import {bbox} from 'ol/loadingstrategy';\n *\n * var vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection) {\n *      var proj = projection.getCode();\n *      var url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      var xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      var onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          vectorSource.addFeatures(\n *              vectorSource.getFormat().readFeatures(xhr.responseText));\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {module:ol/source/Vector~LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy~all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|module:ol/featureloader~FeatureUrlfunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader~xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy~all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlfunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * defaultDataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @constructor\n * @extends {module:ol/source/Source}\n * @fires ol/source/Vector~VectorSourceEvent\n * @param {module:ol/source/Vector~Options=} opt_options Vector source options.\n * @api\n */\nconst VectorSource = function(opt_options) {\n\n  const options = opt_options || {};\n\n  Source.call(this, {\n    attributions: options.attributions,\n    projection: undefined,\n    state: SourceState.READY,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true\n  });\n\n  /**\n   * @private\n   * @type {module:ol/featureloader~FeatureLoader}\n   */\n  this.loader_ = UNDEFINED;\n\n  /**\n   * @private\n   * @type {module:ol/format/Feature|undefined}\n   */\n  this.format_ = options.format;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.overlaps_ = options.overlaps == undefined ? true : options.overlaps;\n\n  /**\n   * @private\n   * @type {string|module:ol/featureloader~FeatureUrlFunction|undefined}\n   */\n  this.url_ = options.url;\n\n  if (options.loader !== undefined) {\n    this.loader_ = options.loader;\n  } else if (this.url_ !== undefined) {\n    assert(this.format_, 7); // `format` must be set when `url` is set\n    // create a XHR feature loader for \"url\" and \"format\"\n    this.loader_ = xhr(this.url_, /** @type {module:ol/format/Feature} */ (this.format_));\n  }\n\n  /**\n   * @private\n   * @type {module:ol/source/Vector~LoadingStrategy}\n   */\n  this.strategy_ = options.strategy !== undefined ? options.strategy : allStrategy;\n\n  const useSpatialIndex =\n      options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n  /**\n   * @private\n   * @type {module:ol/structs/RBush.<module:ol/Feature>}\n   */\n  this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n  /**\n   * @private\n   * @type {module:ol/structs/RBush.<{extent: module:ol/extent~Extent}>}\n   */\n  this.loadedExtentsRtree_ = new RBush();\n\n  /**\n   * @private\n   * @type {!Object.<string, module:ol/Feature>}\n   */\n  this.nullGeometryFeatures_ = {};\n\n  /**\n   * A lookup of features by id (the return from feature.getId()).\n   * @private\n   * @type {!Object.<string, module:ol/Feature>}\n   */\n  this.idIndex_ = {};\n\n  /**\n   * A lookup of features without id (keyed by getUid(feature)).\n   * @private\n   * @type {!Object.<string, module:ol/Feature>}\n   */\n  this.undefIdIndex_ = {};\n\n  /**\n   * @private\n   * @type {Object.<string, Array.<module:ol/events~EventsKey>>}\n   */\n  this.featureChangeKeys_ = {};\n\n  /**\n   * @private\n   * @type {module:ol/Collection.<module:ol/Feature>}\n   */\n  this.featuresCollection_ = null;\n\n  let collection, features;\n  if (options.features instanceof Collection) {\n    collection = options.features;\n    features = collection.getArray();\n  } else if (Array.isArray(options.features)) {\n    features = options.features;\n  }\n  if (!useSpatialIndex && collection === undefined) {\n    collection = new Collection(features);\n  }\n  if (features !== undefined) {\n    this.addFeaturesInternal(features);\n  }\n  if (collection !== undefined) {\n    this.bindFeaturesCollection_(collection);\n  }\n\n};\n\ninherits(VectorSource, Source);\n\n\n/**\n * Add a single feature to the source.  If you want to add a batch of features\n * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n * instead. A feature will not be added to the source if feature with\n * the same id is already there. The reason for this behavior is to avoid\n * feature duplication when using bbox or tile loading strategies.\n * @param {module:ol/Feature} feature Feature to add.\n * @api\n */\nVectorSource.prototype.addFeature = function(feature) {\n  this.addFeatureInternal(feature);\n  this.changed();\n};\n\n\n/**\n * Add a feature without firing a `change` event.\n * @param {module:ol/Feature} feature Feature.\n * @protected\n */\nVectorSource.prototype.addFeatureInternal = function(feature) {\n  const featureKey = getUid(feature).toString();\n\n  if (!this.addToIndex_(featureKey, feature)) {\n    return;\n  }\n\n  this.setupChangeEvents_(featureKey, feature);\n\n  const geometry = feature.getGeometry();\n  if (geometry) {\n    const extent = geometry.getExtent();\n    if (this.featuresRtree_) {\n      this.featuresRtree_.insert(extent, feature);\n    }\n  } else {\n    this.nullGeometryFeatures_[featureKey] = feature;\n  }\n\n  this.dispatchEvent(\n    new VectorSourceEvent(VectorEventType.ADDFEATURE, feature));\n};\n\n\n/**\n * @param {string} featureKey Unique identifier for the feature.\n * @param {module:ol/Feature} feature The feature.\n * @private\n */\nVectorSource.prototype.setupChangeEvents_ = function(featureKey, feature) {\n  this.featureChangeKeys_[featureKey] = [\n    listen(feature, EventType.CHANGE,\n      this.handleFeatureChange_, this),\n    listen(feature, ObjectEventType.PROPERTYCHANGE,\n      this.handleFeatureChange_, this)\n  ];\n};\n\n\n/**\n * @param {string} featureKey Unique identifier for the feature.\n * @param {module:ol/Feature} feature The feature.\n * @return {boolean} The feature is \"valid\", in the sense that it is also a\n *     candidate for insertion into the Rtree.\n * @private\n */\nVectorSource.prototype.addToIndex_ = function(featureKey, feature) {\n  let valid = true;\n  const id = feature.getId();\n  if (id !== undefined) {\n    if (!(id.toString() in this.idIndex_)) {\n      this.idIndex_[id.toString()] = feature;\n    } else {\n      valid = false;\n    }\n  } else {\n    assert(!(featureKey in this.undefIdIndex_),\n      30); // The passed `feature` was already added to the source\n    this.undefIdIndex_[featureKey] = feature;\n  }\n  return valid;\n};\n\n\n/**\n * Add a batch of features to the source.\n * @param {Array.<module:ol/Feature>} features Features to add.\n * @api\n */\nVectorSource.prototype.addFeatures = function(features) {\n  this.addFeaturesInternal(features);\n  this.changed();\n};\n\n\n/**\n * Add features without firing a `change` event.\n * @param {Array.<module:ol/Feature>} features Features.\n * @protected\n */\nVectorSource.prototype.addFeaturesInternal = function(features) {\n  const extents = [];\n  const newFeatures = [];\n  const geometryFeatures = [];\n\n  for (let i = 0, length = features.length; i < length; i++) {\n    const feature = features[i];\n    const featureKey = getUid(feature).toString();\n    if (this.addToIndex_(featureKey, feature)) {\n      newFeatures.push(feature);\n    }\n  }\n\n  for (let i = 0, length = newFeatures.length; i < length; i++) {\n    const feature = newFeatures[i];\n    const featureKey = getUid(feature).toString();\n    this.setupChangeEvents_(featureKey, feature);\n\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const extent = geometry.getExtent();\n      extents.push(extent);\n      geometryFeatures.push(feature);\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n  }\n  if (this.featuresRtree_) {\n    this.featuresRtree_.load(extents, geometryFeatures);\n  }\n\n  for (let i = 0, length = newFeatures.length; i < length; i++) {\n    this.dispatchEvent(new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i]));\n  }\n};\n\n\n/**\n * @param {!module:ol/Collection.<module:ol/Feature>} collection Collection.\n * @private\n */\nVectorSource.prototype.bindFeaturesCollection_ = function(collection) {\n  let modifyingCollection = false;\n  listen(this, VectorEventType.ADDFEATURE,\n    function(evt) {\n      if (!modifyingCollection) {\n        modifyingCollection = true;\n        collection.push(evt.feature);\n        modifyingCollection = false;\n      }\n    });\n  listen(this, VectorEventType.REMOVEFEATURE,\n    function(evt) {\n      if (!modifyingCollection) {\n        modifyingCollection = true;\n        collection.remove(evt.feature);\n        modifyingCollection = false;\n      }\n    });\n  listen(collection, CollectionEventType.ADD,\n    function(evt) {\n      if (!modifyingCollection) {\n        modifyingCollection = true;\n        this.addFeature(/** @type {module:ol/Feature} */ (evt.element));\n        modifyingCollection = false;\n      }\n    }, this);\n  listen(collection, CollectionEventType.REMOVE,\n    function(evt) {\n      if (!modifyingCollection) {\n        modifyingCollection = true;\n        this.removeFeature(/** @type {module:ol/Feature} */ (evt.element));\n        modifyingCollection = false;\n      }\n    }, this);\n  this.featuresCollection_ = collection;\n};\n\n\n/**\n * Remove all features from the source.\n * @param {boolean=} opt_fast Skip dispatching of {@link module:ol/source/Vector~VectorSourceEvent#removefeature} events.\n * @api\n */\nVectorSource.prototype.clear = function(opt_fast) {\n  if (opt_fast) {\n    for (const featureId in this.featureChangeKeys_) {\n      const keys = this.featureChangeKeys_[featureId];\n      keys.forEach(unlistenByKey);\n    }\n    if (!this.featuresCollection_) {\n      this.featureChangeKeys_ = {};\n      this.idIndex_ = {};\n      this.undefIdIndex_ = {};\n    }\n  } else {\n    if (this.featuresRtree_) {\n      this.featuresRtree_.forEach(this.removeFeatureInternal, this);\n      for (const id in this.nullGeometryFeatures_) {\n        this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n      }\n    }\n  }\n  if (this.featuresCollection_) {\n    this.featuresCollection_.clear();\n  }\n\n  if (this.featuresRtree_) {\n    this.featuresRtree_.clear();\n  }\n  this.loadedExtentsRtree_.clear();\n  this.nullGeometryFeatures_ = {};\n\n  const clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n  this.dispatchEvent(clearEvent);\n  this.changed();\n};\n\n\n/**\n * Iterate through all features on the source, calling the provided callback\n * with each one.  If the callback returns any \"truthy\" value, iteration will\n * stop and the function will return the same value.\n * Note: this function only iterate through the feature that have a defined geometry.\n *\n * @param {function(module:ol/Feature): T} callback Called with each feature\n *     on the source.  Return a truthy value to stop iteration.\n * @return {T|undefined} The return value from the last call to the callback.\n * @template T\n * @api\n */\nVectorSource.prototype.forEachFeature = function(callback) {\n  if (this.featuresRtree_) {\n    return this.featuresRtree_.forEach(callback);\n  } else if (this.featuresCollection_) {\n    return this.featuresCollection_.forEach(callback);\n  }\n};\n\n\n/**\n * Iterate through all features whose geometries contain the provided\n * coordinate, calling the callback with each feature.  If the callback returns\n * a \"truthy\" value, iteration will stop and the function will return the same\n * value.\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {function(module:ol/Feature): T} callback Called with each feature\n *     whose goemetry contains the provided coordinate.\n * @return {T|undefined} The return value from the last call to the callback.\n * @template T\n */\nVectorSource.prototype.forEachFeatureAtCoordinateDirect = function(coordinate, callback) {\n  const extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n  return this.forEachFeatureInExtent(extent, function(feature) {\n    const geometry = feature.getGeometry();\n    if (geometry.intersectsCoordinate(coordinate)) {\n      return callback(feature);\n    } else {\n      return undefined;\n    }\n  });\n};\n\n\n/**\n * Iterate through all features whose bounding box intersects the provided\n * extent (note that the feature's geometry may not intersect the extent),\n * calling the callback with each feature.  If the callback returns a \"truthy\"\n * value, iteration will stop and the function will return the same value.\n *\n * If you are interested in features whose geometry intersects an extent, call\n * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n *\n * When `useSpatialIndex` is set to false, this method will loop through all\n * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n *\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {function(module:ol/Feature): T} callback Called with each feature\n *     whose bounding box intersects the provided extent.\n * @return {T|undefined} The return value from the last call to the callback.\n * @template T\n * @api\n */\nVectorSource.prototype.forEachFeatureInExtent = function(extent, callback) {\n  if (this.featuresRtree_) {\n    return this.featuresRtree_.forEachInExtent(extent, callback);\n  } else if (this.featuresCollection_) {\n    return this.featuresCollection_.forEach(callback);\n  }\n};\n\n\n/**\n * Iterate through all features whose geometry intersects the provided extent,\n * calling the callback with each feature.  If the callback returns a \"truthy\"\n * value, iteration will stop and the function will return the same value.\n *\n * If you only want to test for bounding box intersection, call the\n * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n *\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {function(module:ol/Feature): T} callback Called with each feature\n *     whose geometry intersects the provided extent.\n * @return {T|undefined} The return value from the last call to the callback.\n * @template T\n * @api\n */\nVectorSource.prototype.forEachFeatureIntersectingExtent = function(extent, callback) {\n  return this.forEachFeatureInExtent(extent,\n    /**\n     * @param {module:ol/Feature} feature Feature.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     */\n    function(feature) {\n      const geometry = feature.getGeometry();\n      if (geometry.intersectsExtent(extent)) {\n        const result = callback(feature);\n        if (result) {\n          return result;\n        }\n      }\n    });\n};\n\n\n/**\n * Get the features collection associated with this source. Will be `null`\n * unless the source was configured with `useSpatialIndex` set to `false`, or\n * with an {@link module:ol/Collection} as `features`.\n * @return {module:ol/Collection.<module:ol/Feature>} The collection of features.\n * @api\n */\nVectorSource.prototype.getFeaturesCollection = function() {\n  return this.featuresCollection_;\n};\n\n\n/**\n * Get all features on the source in random order.\n * @return {Array.<module:ol/Feature>} Features.\n * @api\n */\nVectorSource.prototype.getFeatures = function() {\n  let features;\n  if (this.featuresCollection_) {\n    features = this.featuresCollection_.getArray();\n  } else if (this.featuresRtree_) {\n    features = this.featuresRtree_.getAll();\n    if (!isEmpty(this.nullGeometryFeatures_)) {\n      extend(features, getValues(this.nullGeometryFeatures_));\n    }\n  }\n  return (\n    /** @type {Array.<module:ol/Feature>} */ (features)\n  );\n};\n\n\n/**\n * Get all features whose geometry intersects the provided coordinate.\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @return {Array.<module:ol/Feature>} Features.\n * @api\n */\nVectorSource.prototype.getFeaturesAtCoordinate = function(coordinate) {\n  const features = [];\n  this.forEachFeatureAtCoordinateDirect(coordinate, function(feature) {\n    features.push(feature);\n  });\n  return features;\n};\n\n\n/**\n * Get all features in the provided extent.  Note that this returns an array of\n * all features intersecting the given extent in random order (so it may include\n * features whose geometries do not intersect the extent).\n *\n * This method is not available when the source is configured with\n * `useSpatialIndex` set to `false`.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {Array.<module:ol/Feature>} Features.\n * @api\n */\nVectorSource.prototype.getFeaturesInExtent = function(extent) {\n  return this.featuresRtree_.getInExtent(extent);\n};\n\n\n/**\n * Get the closest feature to the provided coordinate.\n *\n * This method is not available when the source is configured with\n * `useSpatialIndex` set to `false`.\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {function(module:ol/Feature):boolean=} opt_filter Feature filter function.\n *     The filter function will receive one argument, the {@link module:ol/Feature feature}\n *     and it should return a boolean value. By default, no filtering is made.\n * @return {module:ol/Feature} Closest feature.\n * @api\n */\nVectorSource.prototype.getClosestFeatureToCoordinate = function(coordinate, opt_filter) {\n  // Find the closest feature using branch and bound.  We start searching an\n  // infinite extent, and find the distance from the first feature found.  This\n  // becomes the closest feature.  We then compute a smaller extent which any\n  // closer feature must intersect.  We continue searching with this smaller\n  // extent, trying to find a closer feature.  Every time we find a closer\n  // feature, we update the extent being searched so that any even closer\n  // feature must intersect it.  We continue until we run out of features.\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let closestFeature = null;\n  const closestPoint = [NaN, NaN];\n  let minSquaredDistance = Infinity;\n  const extent = [-Infinity, -Infinity, Infinity, Infinity];\n  const filter = opt_filter ? opt_filter : TRUE;\n  this.featuresRtree_.forEachInExtent(extent,\n    /**\n     * @param {module:ol/Feature} feature Feature.\n     */\n    function(feature) {\n      if (filter(feature)) {\n        const geometry = feature.getGeometry();\n        const previousMinSquaredDistance = minSquaredDistance;\n        minSquaredDistance = geometry.closestPointXY(\n          x, y, closestPoint, minSquaredDistance);\n        if (minSquaredDistance < previousMinSquaredDistance) {\n          closestFeature = feature;\n          // This is sneaky.  Reduce the extent that it is currently being\n          // searched while the R-Tree traversal using this same extent object\n          // is still in progress.  This is safe because the new extent is\n          // strictly contained by the old extent.\n          const minDistance = Math.sqrt(minSquaredDistance);\n          extent[0] = x - minDistance;\n          extent[1] = y - minDistance;\n          extent[2] = x + minDistance;\n          extent[3] = y + minDistance;\n        }\n      }\n    });\n  return closestFeature;\n};\n\n\n/**\n * Get the extent of the features currently in the source.\n *\n * This method is not available when the source is configured with\n * `useSpatialIndex` set to `false`.\n * @param {module:ol/extent~Extent=} opt_extent Destination extent. If provided, no new extent\n *     will be created. Instead, that extent's coordinates will be overwritten.\n * @return {module:ol/extent~Extent} Extent.\n * @api\n */\nVectorSource.prototype.getExtent = function(opt_extent) {\n  return this.featuresRtree_.getExtent(opt_extent);\n};\n\n\n/**\n * Get a feature by its identifier (the value returned by feature.getId()).\n * Note that the index treats string and numeric identifiers as the same.  So\n * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n *\n * @param {string|number} id Feature identifier.\n * @return {module:ol/Feature} The feature (or `null` if not found).\n * @api\n */\nVectorSource.prototype.getFeatureById = function(id) {\n  const feature = this.idIndex_[id.toString()];\n  return feature !== undefined ? feature : null;\n};\n\n\n/**\n * Get the format associated with this source.\n *\n * @return {module:ol/format/Feature|undefined} The feature format.\n * @api\n */\nVectorSource.prototype.getFormat = function() {\n  return this.format_;\n};\n\n\n/**\n * @return {boolean} The source can have overlapping geometries.\n */\nVectorSource.prototype.getOverlaps = function() {\n  return this.overlaps_;\n};\n\n\n/**\n * @override\n */\nVectorSource.prototype.getResolutions = function() {};\n\n\n/**\n * Get the url associated with this source.\n *\n * @return {string|module:ol/featureloader~FeatureUrlFunction|undefined} The url.\n * @api\n */\nVectorSource.prototype.getUrl = function() {\n  return this.url_;\n};\n\n\n/**\n * @param {module:ol/events/Event} event Event.\n * @private\n */\nVectorSource.prototype.handleFeatureChange_ = function(event) {\n  const feature = /** @type {module:ol/Feature} */ (event.target);\n  const featureKey = getUid(feature).toString();\n  const geometry = feature.getGeometry();\n  if (!geometry) {\n    if (!(featureKey in this.nullGeometryFeatures_)) {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n  } else {\n    const extent = geometry.getExtent();\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.update(extent, feature);\n      }\n    }\n  }\n  const id = feature.getId();\n  if (id !== undefined) {\n    const sid = id.toString();\n    if (featureKey in this.undefIdIndex_) {\n      delete this.undefIdIndex_[featureKey];\n      this.idIndex_[sid] = feature;\n    } else {\n      if (this.idIndex_[sid] !== feature) {\n        this.removeFromIdIndex_(feature);\n        this.idIndex_[sid] = feature;\n      }\n    }\n  } else {\n    if (!(featureKey in this.undefIdIndex_)) {\n      this.removeFromIdIndex_(feature);\n      this.undefIdIndex_[featureKey] = feature;\n    }\n  }\n  this.changed();\n  this.dispatchEvent(new VectorSourceEvent(\n    VectorEventType.CHANGEFEATURE, feature));\n};\n\n/**\n * Returns true if the feature is contained within the source.\n * @param {module:ol/Feature} feature Feature.\n * @return {boolean} Has feature.\n * @api\n */\nVectorSource.prototype.hasFeature = function(feature) {\n  const id = feature.getId();\n  if (id !== undefined) {\n    return id in this.idIndex_;\n  } else {\n    const featureKey = getUid(feature).toString();\n    return featureKey in this.undefIdIndex_;\n  }\n};\n\n/**\n * @return {boolean} Is empty.\n */\nVectorSource.prototype.isEmpty = function() {\n  return this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_);\n};\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {module:ol/proj/Projection} projection Projection.\n */\nVectorSource.prototype.loadFeatures = function(extent, resolution, projection) {\n  const loadedExtentsRtree = this.loadedExtentsRtree_;\n  const extentsToLoad = this.strategy_(extent, resolution);\n  for (let i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n    const extentToLoad = extentsToLoad[i];\n    const alreadyLoaded = loadedExtentsRtree.forEachInExtent(extentToLoad,\n      /**\n       * @param {{extent: module:ol/extent~Extent}} object Object.\n       * @return {boolean} Contains.\n       */\n      function(object) {\n        return containsExtent(object.extent, extentToLoad);\n      });\n    if (!alreadyLoaded) {\n      this.loader_.call(this, extentToLoad, resolution, projection);\n      loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n    }\n  }\n};\n\n\n/**\n * Remove an extent from the list of loaded extents.\n * @param {module:ol/extent~Extent} extent Extent.\n * @api\n */\nVectorSource.prototype.removeLoadedExtent = function(extent) {\n  const loadedExtentsRtree = this.loadedExtentsRtree_;\n  let obj;\n  loadedExtentsRtree.forEachInExtent(extent, function(object) {\n    if (equals(object.extent, extent)) {\n      obj = object;\n      return true;\n    }\n  });\n  if (obj) {\n    loadedExtentsRtree.remove(obj);\n  }\n};\n\n\n/**\n * Remove a single feature from the source.  If you want to remove all features\n * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n * instead.\n * @param {module:ol/Feature} feature Feature to remove.\n * @api\n */\nVectorSource.prototype.removeFeature = function(feature) {\n  const featureKey = getUid(feature).toString();\n  if (featureKey in this.nullGeometryFeatures_) {\n    delete this.nullGeometryFeatures_[featureKey];\n  } else {\n    if (this.featuresRtree_) {\n      this.featuresRtree_.remove(feature);\n    }\n  }\n  this.removeFeatureInternal(feature);\n  this.changed();\n};\n\n\n/**\n * Remove feature without firing a `change` event.\n * @param {module:ol/Feature} feature Feature.\n * @protected\n */\nVectorSource.prototype.removeFeatureInternal = function(feature) {\n  const featureKey = getUid(feature).toString();\n  this.featureChangeKeys_[featureKey].forEach(unlistenByKey);\n  delete this.featureChangeKeys_[featureKey];\n  const id = feature.getId();\n  if (id !== undefined) {\n    delete this.idIndex_[id.toString()];\n  } else {\n    delete this.undefIdIndex_[featureKey];\n  }\n  this.dispatchEvent(new VectorSourceEvent(\n    VectorEventType.REMOVEFEATURE, feature));\n};\n\n\n/**\n * Remove a feature from the id index.  Called internally when the feature id\n * may have changed.\n * @param {module:ol/Feature} feature The feature.\n * @return {boolean} Removed the feature from the index.\n * @private\n */\nVectorSource.prototype.removeFromIdIndex_ = function(feature) {\n  let removed = false;\n  for (const id in this.idIndex_) {\n    if (this.idIndex_[id] === feature) {\n      delete this.idIndex_[id];\n      removed = true;\n      break;\n    }\n  }\n  return removed;\n};\n\n\n/**\n * Set the new loader of the source. The next loadFeatures call will use the\n * new loader.\n * @param {module:ol/featureloader~FeatureLoader} loader The loader to set.\n * @api\n */\nVectorSource.prototype.setLoader = function(loader) {\n  this.loader_ = loader;\n};\n\nexport default VectorSource;\n","/**\n * @module ol/interaction/Draw\n */\nimport {inherits} from '../index.js';\nimport EventType from '../events/EventType.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MapBrowserPointerEvent from '../MapBrowserPointerEvent.js';\nimport {getChangeEventType} from '../Object.js';\nimport {squaredDistance as squaredCoordinateDistance} from '../coordinate.js';\nimport {listen} from '../events.js';\nimport Event from '../events/Event.js';\nimport {noModifierKeys, always, shiftKeyOnly} from '../events/condition.js';\nimport {boundingExtent, getBottomLeft, getBottomRight, getTopLeft, getTopRight} from '../extent.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport Circle from '../geom/Circle.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport {POINTER_TYPE} from '../pointer/MouseSource.js';\nimport Point from '../geom/Point.js';\nimport Polygon, {fromCircle, makeRegular} from '../geom/Polygon.js';\nimport PointerInteraction, {handleEvent as handlePointerEvent} from '../interaction/Pointer.js';\nimport InteractionProperty from '../interaction/Property.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport {createEditingStyle} from '../style/Style.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/geom/GeometryType} type Geometry type of\n * the geometries being drawn with this instance.\n * @property {number} [clickTolerance=6] The maximum distance in pixels between\n * \"down\" and \"up\" for a \"up\" event to be considered a \"click\" event and\n * actually add a point/vertex to the geometry being drawn.  The default of `6`\n * was chosen for the draw interaction to behave correctly on mouse as well as\n * on touch devices.\n * @property {module:ol/Collection.<module:ol/Feature>} [features]\n * Destination collection for the drawn features.\n * @property {module:ol/source/Vector} [source] Destination source for\n * the drawn features.\n * @property {number} [dragVertexDelay=500] Delay in milliseconds after pointerdown\n * before the current vertex can be dragged to its exact position.\n * @property {number} [snapTolerance=12] Pixel distance for snapping to the\n * drawing finish.\n * @property {boolean} [stopClick=false] Stop click, singleclick, and\n * doubleclick events from firing during drawing.\n * @property {number} [maxPoints] The number of points that can be drawn before\n * a polygon ring or line string is finished. By default there is no\n * restriction.\n * @property {number} [minPoints] The number of points that must be drawn\n * before a polygon ring or line string can be finished. Default is `3` for\n * polygon rings and `2` for line strings.\n * @property {module:ol/events/condition~Condition} [finishCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether the drawing can be finished.\n * @property {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction} [style]\n * Style for sketch features.\n * @property {module:ol/interaction/Draw~GeometryFunction} [geometryFunction]\n * Function that is called when a geometry's coordinates are updated.\n * @property {string} [geometryName] Geometry name to use for features created\n * by the draw interaction.\n * @property {module:ol/events/condition~Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default {@link module:ol/events/condition~noModifierKeys}, i.e. a click,\n * adds a vertex or deactivates freehand drawing.\n * @property {boolean} [freehand=false] Operate in freehand mode for lines,\n * polygons, and circles.  This makes the interaction always operate in freehand\n * mode and takes precedence over any `freehandCondition` option.\n * @property {module:ol/events/condition~Condition} [freehandCondition]\n * Condition that activates freehand drawing for lines and polygons. This\n * function takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\n * returns a boolean to indicate whether that event should be handled. The\n * default is {@link module:ol/events/condition~shiftKeyOnly}, meaning that the\n * Shift key activates freehand drawing.\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\n * overlay.\n */\n\n\n/**\n * Function that takes an array of coordinates and an optional existing geometry as\n * arguments, and returns a geometry. The optional existing geometry is the\n * geometry that is returned when the function is called without a second\n * argument.\n * @typedef {function(!Array.<module:ol/coordinate~Coordinate>, module:ol/geom/SimpleGeometry=):\n *     module:ol/geom/SimpleGeometry} GeometryFunction\n */\n\n\n/**\n * Draw mode.  This collapses multi-part geometry types with their single-part\n * cousins.\n * @enum {string}\n */\nconst Mode = {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  CIRCLE: 'Circle'\n};\n\n\n/**\n * @enum {string}\n */\nconst DrawEventType = {\n  /**\n   * Triggered upon feature draw start\n   * @event module:ol/interaction/Draw~DrawEvent#drawstart\n   * @api\n   */\n  DRAWSTART: 'drawstart',\n  /**\n   * Triggered upon feature draw end\n   * @event module:ol/interaction/Draw~DrawEvent#drawend\n   * @api\n   */\n  DRAWEND: 'drawend'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Draw~Draw} instances are\n * instances of this type.\n *\n * @constructor\n * @extends {module:ol/events/Event}\n * @param {module:ol/interaction/Draw~DrawEventType} type Type.\n * @param {module:ol/Feature} feature The feature drawn.\n */\nconst DrawEvent = function(type, feature) {\n\n  Event.call(this, type);\n\n  /**\n   * The feature being drawn.\n   * @type {module:ol/Feature}\n   * @api\n   */\n  this.feature = feature;\n\n};\n\ninherits(DrawEvent, Event);\n\n\n/**\n * @classdesc\n * Interaction for drawing feature geometries.\n *\n * @constructor\n * @extends {module:ol/interaction/Pointer}\n * @fires module:ol/interaction/Draw~DrawEvent\n * @param {module:ol/interaction/Draw~Options} options Options.\n * @api\n */\nconst Draw = function(options) {\n\n  PointerInteraction.call(this, {\n    handleDownEvent: handleDownEvent,\n    handleEvent: handleEvent,\n    handleUpEvent: handleUpEvent\n  });\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.shouldHandle_ = false;\n\n  /**\n   * @type {module:ol~Pixel}\n   * @private\n   */\n  this.downPx_ = null;\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.downTimeout_;\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.lastDragTime_;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.freehand_ = false;\n\n  /**\n   * Target source for drawn features.\n   * @type {module:ol/source/Vector}\n   * @private\n   */\n  this.source_ = options.source ? options.source : null;\n\n  /**\n   * Target collection for drawn features.\n   * @type {module:ol/Collection.<module:ol/Feature>}\n   * @private\n   */\n  this.features_ = options.features ? options.features : null;\n\n  /**\n   * Pixel distance for snapping.\n   * @type {number}\n   * @private\n   */\n  this.snapTolerance_ = options.snapTolerance ? options.snapTolerance : 12;\n\n  /**\n   * Geometry type.\n   * @type {module:ol/geom/GeometryType}\n   * @private\n   */\n  this.type_ = /** @type {module:ol/geom/GeometryType} */ (options.type);\n\n  /**\n   * Drawing mode (derived from geometry type.\n   * @type {module:ol/interaction/Draw~Mode}\n   * @private\n   */\n  this.mode_ = getMode(this.type_);\n\n  /**\n   * Stop click, singleclick, and doubleclick events from firing during drawing.\n   * Default is `false`.\n   * @type {boolean}\n   * @private\n   */\n  this.stopClick_ = !!options.stopClick;\n\n  /**\n   * The number of points that must be drawn before a polygon ring or line\n   * string can be finished.  The default is 3 for polygon rings and 2 for\n   * line strings.\n   * @type {number}\n   * @private\n   */\n  this.minPoints_ = options.minPoints ?\n    options.minPoints :\n    (this.mode_ === Mode.POLYGON ? 3 : 2);\n\n  /**\n   * The number of points that can be drawn before a polygon ring or line string\n   * is finished. The default is no restriction.\n   * @type {number}\n   * @private\n   */\n  this.maxPoints_ = options.maxPoints ? options.maxPoints : Infinity;\n\n  /**\n   * A function to decide if a potential finish coordinate is permissible\n   * @private\n   * @type {module:ol/events/condition~Condition}\n   */\n  this.finishCondition_ = options.finishCondition ? options.finishCondition : TRUE;\n\n  let geometryFunction = options.geometryFunction;\n  if (!geometryFunction) {\n    if (this.type_ === GeometryType.CIRCLE) {\n      /**\n       * @param {!Array.<module:ol/coordinate~Coordinate>} coordinates\n       *     The coordinates.\n       * @param {module:ol/geom/SimpleGeometry=} opt_geometry Optional geometry.\n       * @return {module:ol/geom/SimpleGeometry} A geometry.\n       */\n      geometryFunction = function(coordinates, opt_geometry) {\n        const circle = opt_geometry ? /** @type {module:ol/geom/Circle} */ (opt_geometry) :\n          new Circle([NaN, NaN]);\n        const squaredLength = squaredCoordinateDistance(\n          coordinates[0], coordinates[1]);\n        circle.setCenterAndRadius(coordinates[0], Math.sqrt(squaredLength));\n        return circle;\n      };\n    } else {\n      let Constructor;\n      const mode = this.mode_;\n      if (mode === Mode.POINT) {\n        Constructor = Point;\n      } else if (mode === Mode.LINE_STRING) {\n        Constructor = LineString;\n      } else if (mode === Mode.POLYGON) {\n        Constructor = Polygon;\n      }\n      /**\n       * @param {!Array.<module:ol/coordinate~Coordinate>} coordinates\n       *     The coordinates.\n       * @param {module:ol/geom/SimpleGeometry=} opt_geometry Optional geometry.\n       * @return {module:ol/geom/SimpleGeometry} A geometry.\n       */\n      geometryFunction = function(coordinates, opt_geometry) {\n        let geometry = opt_geometry;\n        if (geometry) {\n          if (mode === Mode.POLYGON) {\n            if (coordinates[0].length) {\n              // Add a closing coordinate to match the first\n              geometry.setCoordinates([coordinates[0].concat([coordinates[0][0]])]);\n            } else {\n              geometry.setCoordinates([]);\n            }\n          } else {\n            geometry.setCoordinates(coordinates);\n          }\n        } else {\n          geometry = new Constructor(coordinates);\n        }\n        return geometry;\n      };\n    }\n  }\n\n  /**\n   * @type {module:ol/interaction/Draw~GeometryFunction}\n   * @private\n   */\n  this.geometryFunction_ = geometryFunction;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.dragVertexDelay_ = options.dragVertexDelay !== undefined ? options.dragVertexDelay : 500;\n\n  /**\n   * Finish coordinate for the feature (first point for polygons, last point for\n   * linestrings).\n   * @type {module:ol/coordinate~Coordinate}\n   * @private\n   */\n  this.finishCoordinate_ = null;\n\n  /**\n   * Sketch feature.\n   * @type {module:ol/Feature}\n   * @private\n   */\n  this.sketchFeature_ = null;\n\n  /**\n   * Sketch point.\n   * @type {module:ol/Feature}\n   * @private\n   */\n  this.sketchPoint_ = null;\n\n  /**\n   * Sketch coordinates. Used when drawing a line or polygon.\n   * @type {module:ol/coordinate~Coordinate|Array.<module:ol/coordinate~Coordinate>|Array.<Array.<module:ol/coordinate~Coordinate>>}\n   * @private\n   */\n  this.sketchCoords_ = null;\n\n  /**\n   * Sketch line. Used when drawing polygon.\n   * @type {module:ol/Feature}\n   * @private\n   */\n  this.sketchLine_ = null;\n\n  /**\n   * Sketch line coordinates. Used when drawing a polygon or circle.\n   * @type {Array.<module:ol/coordinate~Coordinate>}\n   * @private\n   */\n  this.sketchLineCoords_ = null;\n\n  /**\n   * Squared tolerance for handling up events.  If the squared distance\n   * between a down and up event is greater than this tolerance, up events\n   * will not be handled.\n   * @type {number}\n   * @private\n   */\n  this.squaredClickTolerance_ = options.clickTolerance ?\n    options.clickTolerance * options.clickTolerance : 36;\n\n  /**\n   * Draw overlay where our sketch features are drawn.\n   * @type {module:ol/layer/Vector}\n   * @private\n   */\n  this.overlay_ = new VectorLayer({\n    source: new VectorSource({\n      useSpatialIndex: false,\n      wrapX: options.wrapX ? options.wrapX : false\n    }),\n    style: options.style ? options.style :\n      getDefaultStyleFunction(),\n    updateWhileInteracting: true\n  });\n\n  /**\n   * Name of the geometry attribute for newly created features.\n   * @type {string|undefined}\n   * @private\n   */\n  this.geometryName_ = options.geometryName;\n\n  /**\n   * @private\n   * @type {module:ol/events/condition~Condition}\n   */\n  this.condition_ = options.condition ? options.condition : noModifierKeys;\n\n  /**\n   * @private\n   * @type {module:ol/events/condition~Condition}\n   */\n  this.freehandCondition_;\n  if (options.freehand) {\n    this.freehandCondition_ = always;\n  } else {\n    this.freehandCondition_ = options.freehandCondition ?\n      options.freehandCondition : shiftKeyOnly;\n  }\n\n  listen(this,\n    getChangeEventType(InteractionProperty.ACTIVE),\n    this.updateState_, this);\n\n};\n\ninherits(Draw, PointerInteraction);\n\n\n/**\n * @return {module:ol/style/Style~StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  const styles = createEditingStyle();\n  return function(feature, resolution) {\n    return styles[feature.getGeometry().getType()];\n  };\n}\n\n\n/**\n * @inheritDoc\n */\nDraw.prototype.setMap = function(map) {\n  PointerInteraction.prototype.setMap.call(this, map);\n  this.updateState_();\n};\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} and may actually\n * draw or finish the drawing.\n * @param {module:ol/MapBrowserEvent} event Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {module:ol/interaction/Draw}\n * @api\n */\nexport function handleEvent(event) {\n  if (event.originalEvent.type === EventType.CONTEXTMENU) {\n    // Avoid context menu for long taps when drawing on mobile\n    event.preventDefault();\n  }\n  this.freehand_ = this.mode_ !== Mode.POINT && this.freehandCondition_(event);\n  let move = event.type === MapBrowserEventType.POINTERMOVE;\n  let pass = true;\n  if (this.lastDragTime_ && event.type === MapBrowserEventType.POINTERDRAG) {\n    const now = Date.now();\n    if (now - this.lastDragTime_ >= this.dragVertexDelay_) {\n      this.downPx_ = event.pixel;\n      this.shouldHandle_ = !this.freehand_;\n      move = true;\n    } else {\n      this.lastDragTime_ = undefined;\n    }\n    if (this.shouldHandle_ && this.downTimeout_) {\n      clearTimeout(this.downTimeout_);\n      this.downTimeout_ = undefined;\n    }\n  }\n  if (this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDRAG &&\n      this.sketchFeature_ !== null) {\n    this.addToDrawing_(event);\n    pass = false;\n  } else if (this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDOWN) {\n    pass = false;\n  } else if (move) {\n    pass = event.type === MapBrowserEventType.POINTERMOVE;\n    if (pass && this.freehand_) {\n      pass = this.handlePointerMove_(event);\n    } else if (event.pointerEvent.pointerType == POINTER_TYPE ||\n        (event.type === MapBrowserEventType.POINTERDRAG && !this.downTimeout_)) {\n      this.handlePointerMove_(event);\n    }\n  } else if (event.type === MapBrowserEventType.DBLCLICK) {\n    pass = false;\n  }\n\n  return handlePointerEvent.call(this, event) && pass;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} event Event.\n * @return {boolean} Start drag sequence?\n * @this {module:ol/interaction/Draw}\n */\nfunction handleDownEvent(event) {\n  this.shouldHandle_ = !this.freehand_;\n\n  if (this.freehand_) {\n    this.downPx_ = event.pixel;\n    if (!this.finishCoordinate_) {\n      this.startDrawing_(event);\n    }\n    return true;\n  } else if (this.condition_(event)) {\n    this.lastDragTime_ = Date.now();\n    this.downTimeout_ = setTimeout(function() {\n      this.handlePointerMove_(new MapBrowserPointerEvent(\n        MapBrowserEventType.POINTERMOVE, event.map, event.pointerEvent, event.frameState));\n    }.bind(this), this.dragVertexDelay_);\n    this.downPx_ = event.pixel;\n    return true;\n  } else {\n    return false;\n  }\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} event Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/Draw}\n */\nfunction handleUpEvent(event) {\n  let pass = true;\n\n  if (this.downTimeout_) {\n    clearTimeout(this.downTimeout_);\n    this.downTimeout_ = undefined;\n  }\n\n  this.handlePointerMove_(event);\n\n  const circleMode = this.mode_ === Mode.CIRCLE;\n\n  if (this.shouldHandle_) {\n    if (!this.finishCoordinate_) {\n      this.startDrawing_(event);\n      if (this.mode_ === Mode.POINT) {\n        this.finishDrawing();\n      }\n    } else if (this.freehand_ || circleMode) {\n      this.finishDrawing();\n    } else if (this.atFinish_(event)) {\n      if (this.finishCondition_(event)) {\n        this.finishDrawing();\n      }\n    } else {\n      this.addToDrawing_(event);\n    }\n    pass = false;\n  } else if (this.freehand_) {\n    this.finishCoordinate_ = null;\n    this.abortDrawing_();\n  }\n  if (!pass && this.stopClick_) {\n    event.stopPropagation();\n  }\n  return pass;\n}\n\n\n/**\n * Handle move events.\n * @param {module:ol/MapBrowserEvent} event A move event.\n * @return {boolean} Pass the event to other interactions.\n * @private\n */\nDraw.prototype.handlePointerMove_ = function(event) {\n  if (this.downPx_ &&\n      ((!this.freehand_ && this.shouldHandle_) ||\n      (this.freehand_ && !this.shouldHandle_))) {\n    const downPx = this.downPx_;\n    const clickPx = event.pixel;\n    const dx = downPx[0] - clickPx[0];\n    const dy = downPx[1] - clickPx[1];\n    const squaredDistance = dx * dx + dy * dy;\n    this.shouldHandle_ = this.freehand_ ?\n      squaredDistance > this.squaredClickTolerance_ :\n      squaredDistance <= this.squaredClickTolerance_;\n    if (!this.shouldHandle_) {\n      return true;\n    }\n  }\n\n  if (this.finishCoordinate_) {\n    this.modifyDrawing_(event);\n  } else {\n    this.createOrUpdateSketchPoint_(event);\n  }\n  return true;\n};\n\n\n/**\n * Determine if an event is within the snapping tolerance of the start coord.\n * @param {module:ol/MapBrowserEvent} event Event.\n * @return {boolean} The event is within the snapping tolerance of the start.\n * @private\n */\nDraw.prototype.atFinish_ = function(event) {\n  let at = false;\n  if (this.sketchFeature_) {\n    let potentiallyDone = false;\n    let potentiallyFinishCoordinates = [this.finishCoordinate_];\n    if (this.mode_ === Mode.LINE_STRING) {\n      potentiallyDone = this.sketchCoords_.length > this.minPoints_;\n    } else if (this.mode_ === Mode.POLYGON) {\n      potentiallyDone = this.sketchCoords_[0].length >\n          this.minPoints_;\n      potentiallyFinishCoordinates = [this.sketchCoords_[0][0],\n        this.sketchCoords_[0][this.sketchCoords_[0].length - 2]];\n    }\n    if (potentiallyDone) {\n      const map = event.map;\n      for (let i = 0, ii = potentiallyFinishCoordinates.length; i < ii; i++) {\n        const finishCoordinate = potentiallyFinishCoordinates[i];\n        const finishPixel = map.getPixelFromCoordinate(finishCoordinate);\n        const pixel = event.pixel;\n        const dx = pixel[0] - finishPixel[0];\n        const dy = pixel[1] - finishPixel[1];\n        const snapTolerance = this.freehand_ ? 1 : this.snapTolerance_;\n        at = Math.sqrt(dx * dx + dy * dy) <= snapTolerance;\n        if (at) {\n          this.finishCoordinate_ = finishCoordinate;\n          break;\n        }\n      }\n    }\n  }\n  return at;\n};\n\n\n/**\n * @param {module:ol/MapBrowserEvent} event Event.\n * @private\n */\nDraw.prototype.createOrUpdateSketchPoint_ = function(event) {\n  const coordinates = event.coordinate.slice();\n  if (!this.sketchPoint_) {\n    this.sketchPoint_ = new Feature(new Point(coordinates));\n    this.updateSketchFeatures_();\n  } else {\n    const sketchPointGeom = /** @type {module:ol/geom/Point} */ (this.sketchPoint_.getGeometry());\n    sketchPointGeom.setCoordinates(coordinates);\n  }\n};\n\n\n/**\n * Start the drawing.\n * @param {module:ol/MapBrowserEvent} event Event.\n * @private\n */\nDraw.prototype.startDrawing_ = function(event) {\n  const start = event.coordinate;\n  this.finishCoordinate_ = start;\n  if (this.mode_ === Mode.POINT) {\n    this.sketchCoords_ = start.slice();\n  } else if (this.mode_ === Mode.POLYGON) {\n    this.sketchCoords_ = [[start.slice(), start.slice()]];\n    this.sketchLineCoords_ = this.sketchCoords_[0];\n  } else {\n    this.sketchCoords_ = [start.slice(), start.slice()];\n  }\n  if (this.sketchLineCoords_) {\n    this.sketchLine_ = new Feature(\n      new LineString(this.sketchLineCoords_));\n  }\n  const geometry = this.geometryFunction_(this.sketchCoords_);\n  this.sketchFeature_ = new Feature();\n  if (this.geometryName_) {\n    this.sketchFeature_.setGeometryName(this.geometryName_);\n  }\n  this.sketchFeature_.setGeometry(geometry);\n  this.updateSketchFeatures_();\n  this.dispatchEvent(new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_));\n};\n\n\n/**\n * Modify the drawing.\n * @param {module:ol/MapBrowserEvent} event Event.\n * @private\n */\nDraw.prototype.modifyDrawing_ = function(event) {\n  let coordinate = event.coordinate;\n  const geometry = /** @type {module:ol/geom/SimpleGeometry} */ (this.sketchFeature_.getGeometry());\n  let coordinates, last;\n  if (this.mode_ === Mode.POINT) {\n    last = this.sketchCoords_;\n  } else if (this.mode_ === Mode.POLYGON) {\n    coordinates = this.sketchCoords_[0];\n    last = coordinates[coordinates.length - 1];\n    if (this.atFinish_(event)) {\n      // snap to finish\n      coordinate = this.finishCoordinate_.slice();\n    }\n  } else {\n    coordinates = this.sketchCoords_;\n    last = coordinates[coordinates.length - 1];\n  }\n  last[0] = coordinate[0];\n  last[1] = coordinate[1];\n  this.geometryFunction_(/** @type {!Array.<module:ol/coordinate~Coordinate>} */ (this.sketchCoords_), geometry);\n  if (this.sketchPoint_) {\n    const sketchPointGeom = /** @type {module:ol/geom/Point} */ (this.sketchPoint_.getGeometry());\n    sketchPointGeom.setCoordinates(coordinate);\n  }\n  let sketchLineGeom;\n  if (geometry instanceof Polygon &&\n      this.mode_ !== Mode.POLYGON) {\n    if (!this.sketchLine_) {\n      this.sketchLine_ = new Feature(new LineString(null));\n    }\n    const ring = geometry.getLinearRing(0);\n    sketchLineGeom = /** @type {module:ol/geom/LineString} */ (this.sketchLine_.getGeometry());\n    sketchLineGeom.setFlatCoordinates(\n      ring.getLayout(), ring.getFlatCoordinates());\n  } else if (this.sketchLineCoords_) {\n    sketchLineGeom = /** @type {module:ol/geom/LineString} */ (this.sketchLine_.getGeometry());\n    sketchLineGeom.setCoordinates(this.sketchLineCoords_);\n  }\n  this.updateSketchFeatures_();\n};\n\n\n/**\n * Add a new coordinate to the drawing.\n * @param {module:ol/MapBrowserEvent} event Event.\n * @private\n */\nDraw.prototype.addToDrawing_ = function(event) {\n  const coordinate = event.coordinate;\n  const geometry = /** @type {module:ol/geom/SimpleGeometry} */ (this.sketchFeature_.getGeometry());\n  let done;\n  let coordinates;\n  if (this.mode_ === Mode.LINE_STRING) {\n    this.finishCoordinate_ = coordinate.slice();\n    coordinates = this.sketchCoords_;\n    if (coordinates.length >= this.maxPoints_) {\n      if (this.freehand_) {\n        coordinates.pop();\n      } else {\n        done = true;\n      }\n    }\n    coordinates.push(coordinate.slice());\n    this.geometryFunction_(coordinates, geometry);\n  } else if (this.mode_ === Mode.POLYGON) {\n    coordinates = this.sketchCoords_[0];\n    if (coordinates.length >= this.maxPoints_) {\n      if (this.freehand_) {\n        coordinates.pop();\n      } else {\n        done = true;\n      }\n    }\n    coordinates.push(coordinate.slice());\n    if (done) {\n      this.finishCoordinate_ = coordinates[0];\n    }\n    this.geometryFunction_(this.sketchCoords_, geometry);\n  }\n  this.updateSketchFeatures_();\n  if (done) {\n    this.finishDrawing();\n  }\n};\n\n\n/**\n * Remove last point of the feature currently being drawn.\n * @api\n */\nDraw.prototype.removeLastPoint = function() {\n  if (!this.sketchFeature_) {\n    return;\n  }\n  const geometry = /** @type {module:ol/geom/SimpleGeometry} */ (this.sketchFeature_.getGeometry());\n  let coordinates, sketchLineGeom;\n  if (this.mode_ === Mode.LINE_STRING) {\n    coordinates = this.sketchCoords_;\n    coordinates.splice(-2, 1);\n    this.geometryFunction_(coordinates, geometry);\n    if (coordinates.length >= 2) {\n      this.finishCoordinate_ = coordinates[coordinates.length - 2].slice();\n    }\n  } else if (this.mode_ === Mode.POLYGON) {\n    coordinates = this.sketchCoords_[0];\n    coordinates.splice(-2, 1);\n    sketchLineGeom = /** @type {module:ol/geom/LineString} */ (this.sketchLine_.getGeometry());\n    sketchLineGeom.setCoordinates(coordinates);\n    this.geometryFunction_(this.sketchCoords_, geometry);\n  }\n\n  if (coordinates.length === 0) {\n    this.finishCoordinate_ = null;\n  }\n\n  this.updateSketchFeatures_();\n};\n\n\n/**\n * Stop drawing and add the sketch feature to the target layer.\n * The {@link module:ol/interaction/Draw~DrawEventType.DRAWEND} event is\n * dispatched before inserting the feature.\n * @api\n */\nDraw.prototype.finishDrawing = function() {\n  const sketchFeature = this.abortDrawing_();\n  if (!sketchFeature) {\n    return;\n  }\n  let coordinates = this.sketchCoords_;\n  const geometry = /** @type {module:ol/geom/SimpleGeometry} */ (sketchFeature.getGeometry());\n  if (this.mode_ === Mode.LINE_STRING) {\n    // remove the redundant last point\n    coordinates.pop();\n    this.geometryFunction_(coordinates, geometry);\n  } else if (this.mode_ === Mode.POLYGON) {\n    // remove the redundant last point in ring\n    coordinates[0].pop();\n    this.geometryFunction_(coordinates, geometry);\n    coordinates = geometry.getCoordinates();\n  }\n\n  // cast multi-part geometries\n  if (this.type_ === GeometryType.MULTI_POINT) {\n    sketchFeature.setGeometry(new MultiPoint([coordinates]));\n  } else if (this.type_ === GeometryType.MULTI_LINE_STRING) {\n    sketchFeature.setGeometry(new MultiLineString([coordinates]));\n  } else if (this.type_ === GeometryType.MULTI_POLYGON) {\n    sketchFeature.setGeometry(new MultiPolygon([coordinates]));\n  }\n\n  // First dispatch event to allow full set up of feature\n  this.dispatchEvent(new DrawEvent(DrawEventType.DRAWEND, sketchFeature));\n\n  // Then insert feature\n  if (this.features_) {\n    this.features_.push(sketchFeature);\n  }\n  if (this.source_) {\n    this.source_.addFeature(sketchFeature);\n  }\n};\n\n\n/**\n * Stop drawing without adding the sketch feature to the target layer.\n * @return {module:ol/Feature} The sketch feature (or null if none).\n * @private\n */\nDraw.prototype.abortDrawing_ = function() {\n  this.finishCoordinate_ = null;\n  const sketchFeature = this.sketchFeature_;\n  if (sketchFeature) {\n    this.sketchFeature_ = null;\n    this.sketchPoint_ = null;\n    this.sketchLine_ = null;\n    this.overlay_.getSource().clear(true);\n  }\n  return sketchFeature;\n};\n\n\n/**\n * Extend an existing geometry by adding additional points. This only works\n * on features with `LineString` geometries, where the interaction will\n * extend lines by adding points to the end of the coordinates array.\n * @param {!module:ol/Feature} feature Feature to be extended.\n * @api\n */\nDraw.prototype.extend = function(feature) {\n  const geometry = feature.getGeometry();\n  const lineString = /** @type {module:ol/geom/LineString} */ (geometry);\n  this.sketchFeature_ = feature;\n  this.sketchCoords_ = lineString.getCoordinates();\n  const last = this.sketchCoords_[this.sketchCoords_.length - 1];\n  this.finishCoordinate_ = last.slice();\n  this.sketchCoords_.push(last.slice());\n  this.updateSketchFeatures_();\n  this.dispatchEvent(new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_));\n};\n\n\n/**\n * @inheritDoc\n */\nDraw.prototype.shouldStopEvent = FALSE;\n\n\n/**\n * Redraw the sketch features.\n * @private\n */\nDraw.prototype.updateSketchFeatures_ = function() {\n  const sketchFeatures = [];\n  if (this.sketchFeature_) {\n    sketchFeatures.push(this.sketchFeature_);\n  }\n  if (this.sketchLine_) {\n    sketchFeatures.push(this.sketchLine_);\n  }\n  if (this.sketchPoint_) {\n    sketchFeatures.push(this.sketchPoint_);\n  }\n  const overlaySource = this.overlay_.getSource();\n  overlaySource.clear(true);\n  overlaySource.addFeatures(sketchFeatures);\n};\n\n\n/**\n * @private\n */\nDraw.prototype.updateState_ = function() {\n  const map = this.getMap();\n  const active = this.getActive();\n  if (!map || !active) {\n    this.abortDrawing_();\n  }\n  this.overlay_.setMap(active ? map : null);\n};\n\n\n/**\n * Create a `geometryFunction` for `type: 'Circle'` that will create a regular\n * polygon with a user specified number of sides and start angle instead of an\n * `module:ol/geom/Circle~Circle` geometry.\n * @param {number=} opt_sides Number of sides of the regular polygon. Default is\n *     32.\n * @param {number=} opt_angle Angle of the first point in radians. 0 means East.\n *     Default is the angle defined by the heading from the center of the\n *     regular polygon to the current pointer position.\n * @return {module:ol/interaction/Draw~GeometryFunction} Function that draws a\n *     polygon.\n * @api\n */\nexport function createRegularPolygon(opt_sides, opt_angle) {\n  return function(coordinates, opt_geometry) {\n    const center = coordinates[0];\n    const end = coordinates[1];\n    const radius = Math.sqrt(\n      squaredCoordinateDistance(center, end));\n    const geometry = opt_geometry ? /** @type {module:ol/geom/Polygon} */ (opt_geometry) :\n      fromCircle(new Circle(center), opt_sides);\n    const angle = opt_angle ? opt_angle :\n      Math.atan((end[1] - center[1]) / (end[0] - center[0]));\n    makeRegular(geometry, center, radius, angle);\n    return geometry;\n  };\n}\n\n\n/**\n * Create a `geometryFunction` that will create a box-shaped polygon (aligned\n * with the coordinate system axes).  Use this with the draw interaction and\n * `type: 'Circle'` to return a box instead of a circle geometry.\n * @return {module:ol/interaction/Draw~GeometryFunction} Function that draws a box-shaped polygon.\n * @api\n */\nexport function createBox() {\n  return (\n    function(coordinates, opt_geometry) {\n      const extent = boundingExtent(coordinates);\n      const geometry = opt_geometry || new Polygon(null);\n      geometry.setCoordinates([[\n        getBottomLeft(extent),\n        getBottomRight(extent),\n        getTopRight(extent),\n        getTopLeft(extent),\n        getBottomLeft(extent)\n      ]]);\n      return geometry;\n    }\n  );\n}\n\n\n/**\n * Get the drawing mode.  The mode for mult-part geometries is the same as for\n * their single-part cousins.\n * @param {module:ol/geom/GeometryType} type Geometry type.\n * @return {module:ol/interaction/Draw~Mode} Drawing mode.\n */\nfunction getMode(type) {\n  let mode;\n  if (type === GeometryType.POINT ||\n      type === GeometryType.MULTI_POINT) {\n    mode = Mode.POINT;\n  } else if (type === GeometryType.LINE_STRING ||\n      type === GeometryType.MULTI_LINE_STRING) {\n    mode = Mode.LINE_STRING;\n  } else if (type === GeometryType.POLYGON ||\n      type === GeometryType.MULTI_POLYGON) {\n    mode = Mode.POLYGON;\n  } else if (type === GeometryType.CIRCLE) {\n    mode = Mode.CIRCLE;\n  }\n  return (\n    /** @type {!module:ol/interaction/Draw~Mode} */ (mode)\n  );\n}\n\n\nexport default Draw;\n","/**\n * @module ol/interaction/Extent\n */\nimport {inherits} from '../index.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MapBrowserPointerEvent from '../MapBrowserPointerEvent.js';\nimport {squaredDistanceToSegment, closestOnSegment, distance as coordinateDistance, squaredDistance as squaredCoordinateDistance} from '../coordinate.js';\nimport Event from '../events/Event.js';\nimport {boundingExtent, getArea} from '../extent.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Point from '../geom/Point.js';\nimport {fromExtent as polygonFromExtent} from '../geom/Polygon.js';\nimport PointerInteraction, {handleEvent as handlePointerEvent} from '../interaction/Pointer.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport {createEditingStyle} from '../style/Style.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/extent~Extent} [extent] Initial extent. Defaults to no\n * initial extent.\n * @property {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction} [boxStyle]\n * Style for the drawn extent box. Defaults to\n * {@link module:ol/style/Style~createEditing()['Polygon']}\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the\n * pointer close enough to a segment or vertex for editing.\n * @property {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction} [pointerStyle]\n * Style for the cursor used to draw the extent. Defaults to\n * {@link module:ol/style/Style~createEditing()['Point']}\n * @property {boolean} [wrapX=false] Wrap the drawn extent across multiple maps\n * in the X direction? Only affects visuals, not functionality.\n */\n\n\n/**\n * @enum {string}\n */\nconst ExtentEventType = {\n  /**\n   * Triggered after the extent is changed\n   * @event module:ol/interaction/Extent~ExtentEventType#extentchanged\n   * @api\n   */\n  EXTENTCHANGED: 'extentchanged'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Extent~Extent} instances are\n * instances of this type.\n *\n * @constructor\n * @param {module:ol/extent~Extent} extent the new extent\n * @extends {module:ol/events/Event}\n */\nconst ExtentInteractionEvent = function(extent) {\n  Event.call(this, ExtentEventType.EXTENTCHANGED);\n\n  /**\n   * The current extent.\n   * @type {module:ol/extent~Extent}\n   * @api\n   */\n  this.extent = extent;\n\n};\ninherits(ExtentInteractionEvent, Event);\n\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map.\n * Once drawn, the vector box can be modified by dragging its vertices or edges.\n * This interaction is only supported for mouse devices.\n *\n * @constructor\n * @extends {module:ol/interaction/Pointer}\n * @fires module:ol/interaction/Extent~Event\n * @param {module:ol/interaction/Extent~Options=} opt_options Options.\n * @api\n */\nconst ExtentInteraction = function(opt_options) {\n\n  const options = opt_options || {};\n\n  /**\n   * Extent of the drawn box\n   * @type {module:ol/extent~Extent}\n   * @private\n   */\n  this.extent_ = null;\n\n  /**\n   * Handler for pointer move events\n   * @type {function (module:ol/coordinate~Coordinate): module:ol/extent~Extent|null}\n   * @private\n   */\n  this.pointerHandler_ = null;\n\n  /**\n   * Pixel threshold to snap to extent\n   * @type {number}\n   * @private\n   */\n  this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n    options.pixelTolerance : 10;\n\n  /**\n   * Is the pointer snapped to an extent vertex\n   * @type {boolean}\n   * @private\n   */\n  this.snappedToVertex_ = false;\n\n  /**\n   * Feature for displaying the visible extent\n   * @type {module:ol/Feature}\n   * @private\n   */\n  this.extentFeature_ = null;\n\n  /**\n   * Feature for displaying the visible pointer\n   * @type {module:ol/Feature}\n   * @private\n   */\n  this.vertexFeature_ = null;\n\n  if (!opt_options) {\n    opt_options = {};\n  }\n\n  PointerInteraction.call(this, {\n    handleDownEvent: handleDownEvent,\n    handleDragEvent: handleDragEvent,\n    handleEvent: handleEvent,\n    handleUpEvent: handleUpEvent\n  });\n\n  /**\n   * Layer for the extentFeature\n   * @type {module:ol/layer/Vector}\n   * @private\n   */\n  this.extentOverlay_ = new VectorLayer({\n    source: new VectorSource({\n      useSpatialIndex: false,\n      wrapX: !!opt_options.wrapX\n    }),\n    style: opt_options.boxStyle ? opt_options.boxStyle : getDefaultExtentStyleFunction(),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n  /**\n   * Layer for the vertexFeature\n   * @type {module:ol/layer/Vector}\n   * @private\n   */\n  this.vertexOverlay_ = new VectorLayer({\n    source: new VectorSource({\n      useSpatialIndex: false,\n      wrapX: !!opt_options.wrapX\n    }),\n    style: opt_options.pointerStyle ? opt_options.pointerStyle : getDefaultPointerStyleFunction(),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n  if (opt_options.extent) {\n    this.setExtent(opt_options.extent);\n  }\n};\n\ninherits(ExtentInteraction, PointerInteraction);\n\n/**\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Event.\n * @return {boolean} Propagate event?\n * @this {module:ol/interaction/Extent~Extent}\n */\nfunction handleEvent(mapBrowserEvent) {\n  if (!(mapBrowserEvent instanceof MapBrowserPointerEvent)) {\n    return true;\n  }\n  //display pointer (if not dragging)\n  if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE && !this.handlingDownUpSequence) {\n    this.handlePointerMove_(mapBrowserEvent);\n  }\n  //call pointer to determine up/down/drag\n  handlePointerEvent.call(this, mapBrowserEvent);\n  //return false to stop propagation\n  return false;\n}\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Event handled?\n * @this {module:ol/interaction/Extent~Extent}\n */\nfunction handleDownEvent(mapBrowserEvent) {\n  const pixel = mapBrowserEvent.pixel;\n  const map = mapBrowserEvent.map;\n\n  const extent = this.getExtent();\n  let vertex = this.snapToVertex_(pixel, map);\n\n  //find the extent corner opposite the passed corner\n  const getOpposingPoint = function(point) {\n    let x_ = null;\n    let y_ = null;\n    if (point[0] == extent[0]) {\n      x_ = extent[2];\n    } else if (point[0] == extent[2]) {\n      x_ = extent[0];\n    }\n    if (point[1] == extent[1]) {\n      y_ = extent[3];\n    } else if (point[1] == extent[3]) {\n      y_ = extent[1];\n    }\n    if (x_ !== null && y_ !== null) {\n      return [x_, y_];\n    }\n    return null;\n  };\n  if (vertex && extent) {\n    const x = (vertex[0] == extent[0] || vertex[0] == extent[2]) ? vertex[0] : null;\n    const y = (vertex[1] == extent[1] || vertex[1] == extent[3]) ? vertex[1] : null;\n\n    //snap to point\n    if (x !== null && y !== null) {\n      this.pointerHandler_ = getPointHandler(getOpposingPoint(vertex));\n    //snap to edge\n    } else if (x !== null) {\n      this.pointerHandler_ = getEdgeHandler(\n        getOpposingPoint([x, extent[1]]),\n        getOpposingPoint([x, extent[3]])\n      );\n    } else if (y !== null) {\n      this.pointerHandler_ = getEdgeHandler(\n        getOpposingPoint([extent[0], y]),\n        getOpposingPoint([extent[2], y])\n      );\n    }\n  //no snap - new bbox\n  } else {\n    vertex = map.getCoordinateFromPixel(pixel);\n    this.setExtent([vertex[0], vertex[1], vertex[0], vertex[1]]);\n    this.pointerHandler_ = getPointHandler(vertex);\n  }\n  return true; //event handled; start downup sequence\n}\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Event handled?\n * @this {module:ol/interaction/Extent~Extent}\n */\nfunction handleDragEvent(mapBrowserEvent) {\n  if (this.pointerHandler_) {\n    const pixelCoordinate = mapBrowserEvent.coordinate;\n    this.setExtent(this.pointerHandler_(pixelCoordinate));\n    this.createOrUpdatePointerFeature_(pixelCoordinate);\n  }\n  return true;\n}\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/Extent~Extent}\n */\nfunction handleUpEvent(mapBrowserEvent) {\n  this.pointerHandler_ = null;\n  //If bbox is zero area, set to null;\n  const extent = this.getExtent();\n  if (!extent || getArea(extent) === 0) {\n    this.setExtent(null);\n  }\n  return false; //Stop handling downup sequence\n}\n\n/**\n * Returns the default style for the drawn bbox\n *\n * @return {module:ol/style/Style~StyleFunction} Default Extent style\n */\nfunction getDefaultExtentStyleFunction() {\n  const style = createEditingStyle();\n  return function(feature, resolution) {\n    return style[GeometryType.POLYGON];\n  };\n}\n\n/**\n * Returns the default style for the pointer\n *\n * @return {module:ol/style/Style~StyleFunction} Default pointer style\n */\nfunction getDefaultPointerStyleFunction() {\n  const style = createEditingStyle();\n  return function(feature, resolution) {\n    return style[GeometryType.POINT];\n  };\n}\n\n/**\n * @param {module:ol/coordinate~Coordinate} fixedPoint corner that will be unchanged in the new extent\n * @returns {function (module:ol/coordinate~Coordinate): module:ol/extent~Extent} event handler\n */\nfunction getPointHandler(fixedPoint) {\n  return function(point) {\n    return boundingExtent([fixedPoint, point]);\n  };\n}\n\n/**\n * @param {module:ol/coordinate~Coordinate} fixedP1 first corner that will be unchanged in the new extent\n * @param {module:ol/coordinate~Coordinate} fixedP2 second corner that will be unchanged in the new extent\n * @returns {function (module:ol/coordinate~Coordinate): module:ol/extent~Extent|null} event handler\n */\nfunction getEdgeHandler(fixedP1, fixedP2) {\n  if (fixedP1[0] == fixedP2[0]) {\n    return function(point) {\n      return boundingExtent([fixedP1, [point[0], fixedP2[1]]]);\n    };\n  } else if (fixedP1[1] == fixedP2[1]) {\n    return function(point) {\n      return boundingExtent([fixedP1, [fixedP2[0], point[1]]]);\n    };\n  } else {\n    return null;\n  }\n}\n\n/**\n * @param {module:ol/extent~Extent} extent extent\n * @returns {Array<Array<module:ol/coordinate~Coordinate>>} extent line segments\n */\nfunction getSegments(extent) {\n  return [\n    [[extent[0], extent[1]], [extent[0], extent[3]]],\n    [[extent[0], extent[3]], [extent[2], extent[3]]],\n    [[extent[2], extent[3]], [extent[2], extent[1]]],\n    [[extent[2], extent[1]], [extent[0], extent[1]]]\n  ];\n}\n\n/**\n * @param {module:ol~Pixel} pixel cursor location\n * @param {module:ol/PluggableMap} map map\n * @returns {module:ol/coordinate~Coordinate|null} snapped vertex on extent\n * @private\n */\nExtentInteraction.prototype.snapToVertex_ = function(pixel, map) {\n  const pixelCoordinate = map.getCoordinateFromPixel(pixel);\n  const sortByDistance = function(a, b) {\n    return squaredDistanceToSegment(pixelCoordinate, a) -\n        squaredDistanceToSegment(pixelCoordinate, b);\n  };\n  const extent = this.getExtent();\n  if (extent) {\n    //convert extents to line segments and find the segment closest to pixelCoordinate\n    const segments = getSegments(extent);\n    segments.sort(sortByDistance);\n    const closestSegment = segments[0];\n\n    let vertex = (closestOnSegment(pixelCoordinate,\n      closestSegment));\n    const vertexPixel = map.getPixelFromCoordinate(vertex);\n\n    //if the distance is within tolerance, snap to the segment\n    if (coordinateDistance(pixel, vertexPixel) <= this.pixelTolerance_) {\n      //test if we should further snap to a vertex\n      const pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n      const pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n      const squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n      const squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n      const dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n      this.snappedToVertex_ = dist <= this.pixelTolerance_;\n      if (this.snappedToVertex_) {\n        vertex = squaredDist1 > squaredDist2 ?\n          closestSegment[1] : closestSegment[0];\n      }\n      return vertex;\n    }\n  }\n  return null;\n};\n\n/**\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent pointer move event\n * @private\n */\nExtentInteraction.prototype.handlePointerMove_ = function(mapBrowserEvent) {\n  const pixel = mapBrowserEvent.pixel;\n  const map = mapBrowserEvent.map;\n\n  let vertex = this.snapToVertex_(pixel, map);\n  if (!vertex) {\n    vertex = map.getCoordinateFromPixel(pixel);\n  }\n  this.createOrUpdatePointerFeature_(vertex);\n};\n\n/**\n * @param {module:ol/extent~Extent} extent extent\n * @returns {module:ol/Feature} extent as featrue\n * @private\n */\nExtentInteraction.prototype.createOrUpdateExtentFeature_ = function(extent) {\n  let extentFeature = this.extentFeature_;\n\n  if (!extentFeature) {\n    if (!extent) {\n      extentFeature = new Feature({});\n    } else {\n      extentFeature = new Feature(polygonFromExtent(extent));\n    }\n    this.extentFeature_ = extentFeature;\n    this.extentOverlay_.getSource().addFeature(extentFeature);\n  } else {\n    if (!extent) {\n      extentFeature.setGeometry(undefined);\n    } else {\n      extentFeature.setGeometry(polygonFromExtent(extent));\n    }\n  }\n  return extentFeature;\n};\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} vertex location of feature\n * @returns {module:ol/Feature} vertex as feature\n * @private\n */\nExtentInteraction.prototype.createOrUpdatePointerFeature_ = function(vertex) {\n  let vertexFeature = this.vertexFeature_;\n  if (!vertexFeature) {\n    vertexFeature = new Feature(new Point(vertex));\n    this.vertexFeature_ = vertexFeature;\n    this.vertexOverlay_.getSource().addFeature(vertexFeature);\n  } else {\n    const geometry = /** @type {module:ol/geom/Point} */ (vertexFeature.getGeometry());\n    geometry.setCoordinates(vertex);\n  }\n  return vertexFeature;\n};\n\n\n/**\n * @inheritDoc\n */\nExtentInteraction.prototype.setMap = function(map) {\n  this.extentOverlay_.setMap(map);\n  this.vertexOverlay_.setMap(map);\n  PointerInteraction.prototype.setMap.call(this, map);\n};\n\n/**\n * Returns the current drawn extent in the view projection\n *\n * @return {module:ol/extent~Extent} Drawn extent in the view projection.\n * @api\n */\nExtentInteraction.prototype.getExtent = function() {\n  return this.extent_;\n};\n\n/**\n * Manually sets the drawn extent, using the view projection.\n *\n * @param {module:ol/extent~Extent} extent Extent\n * @api\n */\nExtentInteraction.prototype.setExtent = function(extent) {\n  //Null extent means no bbox\n  this.extent_ = extent ? extent : null;\n  this.createOrUpdateExtentFeature_(extent);\n  this.dispatchEvent(new ExtentInteractionEvent(this.extent_));\n};\n\n\nexport default ExtentInteraction;\n","/**\n * @module ol/interaction/Modify\n */\nimport {getUid, inherits} from '../index.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MapBrowserPointerEvent from '../MapBrowserPointerEvent.js';\nimport {equals} from '../array.js';\nimport {equals as coordinatesEqual, distance as coordinateDistance, squaredDistance as squaredCoordinateDistance, squaredDistanceToSegment, closestOnSegment} from '../coordinate.js';\nimport {listen, unlisten} from '../events.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport {always, primaryAction, altKeyOnly, singleClick} from '../events/condition.js';\nimport {boundingExtent, buffer, createOrUpdateFromCoordinate} from '../extent.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Point from '../geom/Point.js';\nimport PointerInteraction, {handleEvent as handlePointerEvent} from '../interaction/Pointer.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport RBush from '../structs/RBush.js';\nimport {createEditingStyle} from '../style/Style.js';\n\n\n/**\n * @enum {string}\n */\nconst ModifyEventType = {\n  /**\n   * Triggered upon feature modification start\n   * @event ModifyEvent#modifystart\n   * @api\n   */\n  MODIFYSTART: 'modifystart',\n  /**\n   * Triggered upon feature modification end\n   * @event ModifyEvent#modifyend\n   * @api\n   */\n  MODIFYEND: 'modifyend'\n};\n\n\n/**\n * @typedef {Object} SegmentData\n * @property {Array.<number>} [depth]\n * @property {module:ol/Feature} feature\n * @property {module:ol/geom/SimpleGeometry} geometry\n * @property {number} index\n * @property {Array.<module:ol/extent~Extent>} segment\n * @property {Array.<module:ol/interaction/Modify~SegmentData>} [featureSegments]\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/events/condition~Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event will be considered to add or move a\n * vertex to the sketch. Default is\n * {@link module:ol/events/condition~primaryAction}.\n * @property {module:ol/events/condition~Condition} [deleteCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. By default,\n * {@link module:ol/events/condition~singleClick} with\n * {@link module:ol/events/condition~altKeyOnly} results in a vertex deletion.\n * @property {module:ol/events/condition~Condition} [insertVertexCondition] A\n * function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\n * returns a boolean to indicate whether a new vertex can be added to the sketch\n * features. Default is {@link module:ol/events/condition~always}.\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the\n * pointer close enough to a segment or vertex for editing.\n * @property {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction} [style]\n * Style used for the features being modified. By default the default edit\n * style is used (see {@link module:ol/style}).\n * @property {module:ol/source/Vector} [source] The vector source with\n * features to modify.  If a vector source is not provided, a feature collection\n * must be provided with the features option.\n * @property {module:ol/Collection.<module:ol/Feature>} [features]\n * The features the interaction works on.  If a feature collection is not\n * provided, a vector source must be provided with the source option.\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\n * overlay.\n */\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Modify~Modify} instances are\n * instances of this type.\n *\n * @constructor\n * @extends {module:ol/events/Event}\n * @param {ModifyEventType} type Type.\n * @param {module:ol/Collection.<module:ol/Feature>} features\n * The features modified.\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserPointerEvent\n * Associated {@link module:ol/MapBrowserPointerEvent}.\n */\nexport const ModifyEvent = function(type, features, mapBrowserPointerEvent) {\n\n  Event.call(this, type);\n\n  /**\n   * The features being modified.\n   * @type {module:ol/Collection.<module:ol/Feature>}\n   * @api\n   */\n  this.features = features;\n\n  /**\n   * Associated {@link module:ol/MapBrowserEvent}.\n   * @type {module:ol/MapBrowserEvent}\n   * @api\n   */\n  this.mapBrowserEvent = mapBrowserPointerEvent;\n};\n\ninherits(ModifyEvent, Event);\n\n\n/**\n * @classdesc\n * Interaction for modifying feature geometries.  To modify features that have\n * been added to an existing source, construct the modify interaction with the\n * `source` option.  If you want to modify features in a collection (for example,\n * the collection used by a select interaction), construct the interaction with\n * the `features` option.  The interaction must be constructed with either a\n * `source` or `features` option.\n *\n * By default, the interaction will allow deletion of vertices when the `alt`\n * key is pressed.  To configure the interaction with a different condition\n * for deletion, use the `deleteCondition` option.\n *\n * @constructor\n * @extends {module:ol/interaction/Pointer}\n * @param {module:ol/interaction/Modify~Options} options Options.\n * @fires module:ol/interaction/Modify~ModifyEvent\n * @api\n */\nconst Modify = function(options) {\n\n  PointerInteraction.call(this, {\n    handleDownEvent: handleDownEvent,\n    handleDragEvent: handleDragEvent,\n    handleEvent: handleEvent,\n    handleUpEvent: handleUpEvent\n  });\n\n  /**\n   * @private\n   * @type {module:ol/events/condition~Condition}\n   */\n  this.condition_ = options.condition ? options.condition : primaryAction;\n\n\n  /**\n   * @private\n   * @param {module:ol/MapBrowserEvent} mapBrowserEvent Browser event.\n   * @return {boolean} Combined condition result.\n   */\n  this.defaultDeleteCondition_ = function(mapBrowserEvent) {\n    return altKeyOnly(mapBrowserEvent) && singleClick(mapBrowserEvent);\n  };\n\n  /**\n   * @type {module:ol/events/condition~Condition}\n   * @private\n   */\n  this.deleteCondition_ = options.deleteCondition ?\n    options.deleteCondition : this.defaultDeleteCondition_;\n\n  /**\n   * @type {module:ol/events/condition~Condition}\n   * @private\n   */\n  this.insertVertexCondition_ = options.insertVertexCondition ?\n    options.insertVertexCondition : always;\n\n  /**\n   * Editing vertex.\n   * @type {module:ol/Feature}\n   * @private\n   */\n  this.vertexFeature_ = null;\n\n  /**\n   * Segments intersecting {@link this.vertexFeature_} by segment uid.\n   * @type {Object.<string, boolean>}\n   * @private\n   */\n  this.vertexSegments_ = null;\n\n  /**\n   * @type {module:ol~Pixel}\n   * @private\n   */\n  this.lastPixel_ = [0, 0];\n\n  /**\n   * Tracks if the next `singleclick` event should be ignored to prevent\n   * accidental deletion right after vertex creation.\n   * @type {boolean}\n   * @private\n   */\n  this.ignoreNextSingleClick_ = false;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.modified_ = false;\n\n  /**\n   * Segment RTree for each layer\n   * @type {module:ol/structs/RBush.<module:ol/interaction/Modify~SegmentData>}\n   * @private\n   */\n  this.rBush_ = new RBush();\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n    options.pixelTolerance : 10;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.snappedToVertex_ = false;\n\n  /**\n   * Indicate whether the interaction is currently changing a feature's\n   * coordinates.\n   * @type {boolean}\n   * @private\n   */\n  this.changingFeature_ = false;\n\n  /**\n   * @type {Array}\n   * @private\n   */\n  this.dragSegments_ = [];\n\n  /**\n   * Draw overlay where sketch features are drawn.\n   * @type {module:ol/layer/Vector}\n   * @private\n   */\n  this.overlay_ = new VectorLayer({\n    source: new VectorSource({\n      useSpatialIndex: false,\n      wrapX: !!options.wrapX\n    }),\n    style: options.style ? options.style :\n      getDefaultStyleFunction(),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n  /**\n   * @const\n   * @private\n   * @type {!Object.<string, function(module:ol/Feature, module:ol/geom/Geometry)>}\n   */\n  this.SEGMENT_WRITERS_ = {\n    'Point': this.writePointGeometry_,\n    'LineString': this.writeLineStringGeometry_,\n    'LinearRing': this.writeLineStringGeometry_,\n    'Polygon': this.writePolygonGeometry_,\n    'MultiPoint': this.writeMultiPointGeometry_,\n    'MultiLineString': this.writeMultiLineStringGeometry_,\n    'MultiPolygon': this.writeMultiPolygonGeometry_,\n    'Circle': this.writeCircleGeometry_,\n    'GeometryCollection': this.writeGeometryCollectionGeometry_\n  };\n\n\n  /**\n   * @type {module:ol/source/Vector}\n   * @private\n   */\n  this.source_ = null;\n\n  let features;\n  if (options.source) {\n    this.source_ = options.source;\n    features = new Collection(this.source_.getFeatures());\n    listen(this.source_, VectorEventType.ADDFEATURE,\n      this.handleSourceAdd_, this);\n    listen(this.source_, VectorEventType.REMOVEFEATURE,\n      this.handleSourceRemove_, this);\n  } else {\n    features = options.features;\n  }\n  if (!features) {\n    throw new Error('The modify interaction requires features or a source');\n  }\n\n  /**\n   * @type {module:ol/Collection.<module:ol/Feature>}\n   * @private\n   */\n  this.features_ = features;\n\n  this.features_.forEach(this.addFeature_.bind(this));\n  listen(this.features_, CollectionEventType.ADD,\n    this.handleFeatureAdd_, this);\n  listen(this.features_, CollectionEventType.REMOVE,\n    this.handleFeatureRemove_, this);\n\n  /**\n   * @type {module:ol/MapBrowserPointerEvent}\n   * @private\n   */\n  this.lastPointerEvent_ = null;\n\n};\n\ninherits(Modify, PointerInteraction);\n\n\n/**\n * The segment index assigned to a circle's center when\n * breaking up a circle into ModifySegmentDataType segments.\n * @type {number}\n */\nconst CIRCLE_CENTER_INDEX = 0;\n\n/**\n * The segment index assigned to a circle's circumference when\n * breaking up a circle into ModifySegmentDataType segments.\n * @type {number}\n */\nconst CIRCLE_CIRCUMFERENCE_INDEX = 1;\n\n\n/**\n * @param {module:ol/Feature} feature Feature.\n * @private\n */\nModify.prototype.addFeature_ = function(feature) {\n  const geometry = feature.getGeometry();\n  if (geometry && geometry.getType() in this.SEGMENT_WRITERS_) {\n    this.SEGMENT_WRITERS_[geometry.getType()].call(this, feature, geometry);\n  }\n  const map = this.getMap();\n  if (map && map.isRendered() && this.getActive()) {\n    this.handlePointerAtPixel_(this.lastPixel_, map);\n  }\n  listen(feature, EventType.CHANGE,\n    this.handleFeatureChange_, this);\n};\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} evt Map browser event\n * @private\n */\nModify.prototype.willModifyFeatures_ = function(evt) {\n  if (!this.modified_) {\n    this.modified_ = true;\n    this.dispatchEvent(new ModifyEvent(\n      ModifyEventType.MODIFYSTART, this.features_, evt));\n  }\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature.\n * @private\n */\nModify.prototype.removeFeature_ = function(feature) {\n  this.removeFeatureSegmentData_(feature);\n  // Remove the vertex feature if the collection of canditate features\n  // is empty.\n  if (this.vertexFeature_ && this.features_.getLength() === 0) {\n    this.overlay_.getSource().removeFeature(this.vertexFeature_);\n    this.vertexFeature_ = null;\n  }\n  unlisten(feature, EventType.CHANGE,\n    this.handleFeatureChange_, this);\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature.\n * @private\n */\nModify.prototype.removeFeatureSegmentData_ = function(feature) {\n  const rBush = this.rBush_;\n  const /** @type {Array.<module:ol/interaction/Modify~SegmentData>} */ nodesToRemove = [];\n  rBush.forEach(\n    /**\n     * @param {module:ol/interaction/Modify~SegmentData} node RTree node.\n     */\n    function(node) {\n      if (feature === node.feature) {\n        nodesToRemove.push(node);\n      }\n    });\n  for (let i = nodesToRemove.length - 1; i >= 0; --i) {\n    rBush.remove(nodesToRemove[i]);\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nModify.prototype.setActive = function(active) {\n  if (this.vertexFeature_ && !active) {\n    this.overlay_.getSource().removeFeature(this.vertexFeature_);\n    this.vertexFeature_ = null;\n  }\n  PointerInteraction.prototype.setActive.call(this, active);\n};\n\n\n/**\n * @inheritDoc\n */\nModify.prototype.setMap = function(map) {\n  this.overlay_.setMap(map);\n  PointerInteraction.prototype.setMap.call(this, map);\n};\n\n\n/**\n * @param {module:ol/source/Vector~VectorSourceEvent} event Event.\n * @private\n */\nModify.prototype.handleSourceAdd_ = function(event) {\n  if (event.feature) {\n    this.features_.push(event.feature);\n  }\n};\n\n\n/**\n * @param {module:ol/source/Vector~VectorSourceEvent} event Event.\n * @private\n */\nModify.prototype.handleSourceRemove_ = function(event) {\n  if (event.feature) {\n    this.features_.remove(event.feature);\n  }\n};\n\n\n/**\n * @param {module:ol/Collection~CollectionEvent} evt Event.\n * @private\n */\nModify.prototype.handleFeatureAdd_ = function(evt) {\n  this.addFeature_(/** @type {module:ol/Feature} */ (evt.element));\n};\n\n\n/**\n * @param {module:ol/events/Event} evt Event.\n * @private\n */\nModify.prototype.handleFeatureChange_ = function(evt) {\n  if (!this.changingFeature_) {\n    const feature = /** @type {module:ol/Feature} */ (evt.target);\n    this.removeFeature_(feature);\n    this.addFeature_(feature);\n  }\n};\n\n\n/**\n * @param {module:ol/Collection~CollectionEvent} evt Event.\n * @private\n */\nModify.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {module:ol/Feature} */ (evt.element);\n  this.removeFeature_(feature);\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature\n * @param {module:ol/geom/Point} geometry Geometry.\n * @private\n */\nModify.prototype.writePointGeometry_ = function(feature, geometry) {\n  const coordinates = geometry.getCoordinates();\n  const segmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n    feature: feature,\n    geometry: geometry,\n    segment: [coordinates, coordinates]\n  });\n  this.rBush_.insert(geometry.getExtent(), segmentData);\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature\n * @param {module:ol/geom/MultiPoint} geometry Geometry.\n * @private\n */\nModify.prototype.writeMultiPointGeometry_ = function(feature, geometry) {\n  const points = geometry.getCoordinates();\n  for (let i = 0, ii = points.length; i < ii; ++i) {\n    const coordinates = points[i];\n    const segmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n      feature: feature,\n      geometry: geometry,\n      depth: [i],\n      index: i,\n      segment: [coordinates, coordinates]\n    });\n    this.rBush_.insert(geometry.getExtent(), segmentData);\n  }\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature\n * @param {module:ol/geom/LineString} geometry Geometry.\n * @private\n */\nModify.prototype.writeLineStringGeometry_ = function(feature, geometry) {\n  const coordinates = geometry.getCoordinates();\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const segment = coordinates.slice(i, i + 2);\n    const segmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n      feature: feature,\n      geometry: geometry,\n      index: i,\n      segment: segment\n    });\n    this.rBush_.insert(boundingExtent(segment), segmentData);\n  }\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature\n * @param {module:ol/geom/MultiLineString} geometry Geometry.\n * @private\n */\nModify.prototype.writeMultiLineStringGeometry_ = function(feature, geometry) {\n  const lines = geometry.getCoordinates();\n  for (let j = 0, jj = lines.length; j < jj; ++j) {\n    const coordinates = lines[j];\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n      const segmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n        feature: feature,\n        geometry: geometry,\n        depth: [j],\n        index: i,\n        segment: segment\n      });\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature\n * @param {module:ol/geom/Polygon} geometry Geometry.\n * @private\n */\nModify.prototype.writePolygonGeometry_ = function(feature, geometry) {\n  const rings = geometry.getCoordinates();\n  for (let j = 0, jj = rings.length; j < jj; ++j) {\n    const coordinates = rings[j];\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n      const segmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n        feature: feature,\n        geometry: geometry,\n        depth: [j],\n        index: i,\n        segment: segment\n      });\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature\n * @param {module:ol/geom/MultiPolygon} geometry Geometry.\n * @private\n */\nModify.prototype.writeMultiPolygonGeometry_ = function(feature, geometry) {\n  const polygons = geometry.getCoordinates();\n  for (let k = 0, kk = polygons.length; k < kk; ++k) {\n    const rings = polygons[k];\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      const coordinates = rings[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        const segment = coordinates.slice(i, i + 2);\n        const segmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n          feature: feature,\n          geometry: geometry,\n          depth: [j, k],\n          index: i,\n          segment: segment\n        });\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n};\n\n\n/**\n * We convert a circle into two segments.  The segment at index\n * {@link CIRCLE_CENTER_INDEX} is the\n * circle's center (a point).  The segment at index\n * {@link CIRCLE_CIRCUMFERENCE_INDEX} is\n * the circumference, and is not a line segment.\n *\n * @param {module:ol/Feature} feature Feature.\n * @param {module:ol/geom/Circle} geometry Geometry.\n * @private\n */\nModify.prototype.writeCircleGeometry_ = function(feature, geometry) {\n  const coordinates = geometry.getCenter();\n  const centerSegmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n    feature: feature,\n    geometry: geometry,\n    index: CIRCLE_CENTER_INDEX,\n    segment: [coordinates, coordinates]\n  });\n  const circumferenceSegmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n    feature: feature,\n    geometry: geometry,\n    index: CIRCLE_CIRCUMFERENCE_INDEX,\n    segment: [coordinates, coordinates]\n  });\n  const featureSegments = [centerSegmentData, circumferenceSegmentData];\n  centerSegmentData.featureSegments = circumferenceSegmentData.featureSegments = featureSegments;\n  this.rBush_.insert(createOrUpdateFromCoordinate(coordinates), centerSegmentData);\n  this.rBush_.insert(geometry.getExtent(), circumferenceSegmentData);\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature\n * @param {module:ol/geom/GeometryCollection} geometry Geometry.\n * @private\n */\nModify.prototype.writeGeometryCollectionGeometry_ = function(feature, geometry) {\n  const geometries = geometry.getGeometriesArray();\n  for (let i = 0; i < geometries.length; ++i) {\n    this.SEGMENT_WRITERS_[geometries[i].getType()].call(this, feature, geometries[i]);\n  }\n};\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} coordinates Coordinates.\n * @return {module:ol/Feature} Vertex feature.\n * @private\n */\nModify.prototype.createOrUpdateVertexFeature_ = function(coordinates) {\n  let vertexFeature = this.vertexFeature_;\n  if (!vertexFeature) {\n    vertexFeature = new Feature(new Point(coordinates));\n    this.vertexFeature_ = vertexFeature;\n    this.overlay_.getSource().addFeature(vertexFeature);\n  } else {\n    const geometry = /** @type {module:ol/geom/Point} */ (vertexFeature.getGeometry());\n    geometry.setCoordinates(coordinates);\n  }\n  return vertexFeature;\n};\n\n\n/**\n * @param {module:ol/interaction/Modify~SegmentData} a The first segment data.\n * @param {module:ol/interaction/Modify~SegmentData} b The second segment data.\n * @return {number} The difference in indexes.\n */\nfunction compareIndexes(a, b) {\n  return a.index - b.index;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} evt Event.\n * @return {boolean} Start drag sequence?\n * @this {module:ol/interaction/Modify}\n */\nfunction handleDownEvent(evt) {\n  if (!this.condition_(evt)) {\n    return false;\n  }\n  this.handlePointerAtPixel_(evt.pixel, evt.map);\n  const pixelCoordinate = evt.map.getCoordinateFromPixel(evt.pixel);\n  this.dragSegments_.length = 0;\n  this.modified_ = false;\n  const vertexFeature = this.vertexFeature_;\n  if (vertexFeature) {\n    const insertVertices = [];\n    const geometry = /** @type {module:ol/geom/Point} */ (vertexFeature.getGeometry());\n    const vertex = geometry.getCoordinates();\n    const vertexExtent = boundingExtent([vertex]);\n    const segmentDataMatches = this.rBush_.getInExtent(vertexExtent);\n    const componentSegments = {};\n    segmentDataMatches.sort(compareIndexes);\n    for (let i = 0, ii = segmentDataMatches.length; i < ii; ++i) {\n      const segmentDataMatch = segmentDataMatches[i];\n      const segment = segmentDataMatch.segment;\n      let uid = getUid(segmentDataMatch.feature);\n      const depth = segmentDataMatch.depth;\n      if (depth) {\n        uid += '-' + depth.join('-'); // separate feature components\n      }\n      if (!componentSegments[uid]) {\n        componentSegments[uid] = new Array(2);\n      }\n      if (segmentDataMatch.geometry.getType() === GeometryType.CIRCLE &&\n      segmentDataMatch.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n\n        const closestVertex = closestOnSegmentData(pixelCoordinate, segmentDataMatch);\n        if (coordinatesEqual(closestVertex, vertex) && !componentSegments[uid][0]) {\n          this.dragSegments_.push([segmentDataMatch, 0]);\n          componentSegments[uid][0] = segmentDataMatch;\n        }\n      } else if (coordinatesEqual(segment[0], vertex) &&\n          !componentSegments[uid][0]) {\n        this.dragSegments_.push([segmentDataMatch, 0]);\n        componentSegments[uid][0] = segmentDataMatch;\n      } else if (coordinatesEqual(segment[1], vertex) &&\n          !componentSegments[uid][1]) {\n\n        // prevent dragging closed linestrings by the connecting node\n        if ((segmentDataMatch.geometry.getType() ===\n            GeometryType.LINE_STRING ||\n            segmentDataMatch.geometry.getType() ===\n            GeometryType.MULTI_LINE_STRING) &&\n            componentSegments[uid][0] &&\n            componentSegments[uid][0].index === 0) {\n          continue;\n        }\n\n        this.dragSegments_.push([segmentDataMatch, 1]);\n        componentSegments[uid][1] = segmentDataMatch;\n      } else if (this.insertVertexCondition_(evt) && getUid(segment) in this.vertexSegments_ &&\n          (!componentSegments[uid][0] && !componentSegments[uid][1])) {\n        insertVertices.push([segmentDataMatch, vertex]);\n      }\n    }\n    if (insertVertices.length) {\n      this.willModifyFeatures_(evt);\n    }\n    for (let j = insertVertices.length - 1; j >= 0; --j) {\n      this.insertVertex_.apply(this, insertVertices[j]);\n    }\n  }\n  return !!this.vertexFeature_;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} evt Event.\n * @this {module:ol/interaction/Modify}\n */\nfunction handleDragEvent(evt) {\n  this.ignoreNextSingleClick_ = false;\n  this.willModifyFeatures_(evt);\n\n  const vertex = evt.coordinate;\n  for (let i = 0, ii = this.dragSegments_.length; i < ii; ++i) {\n    const dragSegment = this.dragSegments_[i];\n    const segmentData = dragSegment[0];\n    const depth = segmentData.depth;\n    const geometry = segmentData.geometry;\n    let coordinates;\n    const segment = segmentData.segment;\n    const index = dragSegment[1];\n\n    while (vertex.length < geometry.getStride()) {\n      vertex.push(segment[index][vertex.length]);\n    }\n\n    switch (geometry.getType()) {\n      case GeometryType.POINT:\n        coordinates = vertex;\n        segment[0] = segment[1] = vertex;\n        break;\n      case GeometryType.MULTI_POINT:\n        coordinates = geometry.getCoordinates();\n        coordinates[segmentData.index] = vertex;\n        segment[0] = segment[1] = vertex;\n        break;\n      case GeometryType.LINE_STRING:\n        coordinates = geometry.getCoordinates();\n        coordinates[segmentData.index + index] = vertex;\n        segment[index] = vertex;\n        break;\n      case GeometryType.MULTI_LINE_STRING:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[0]][segmentData.index + index] = vertex;\n        segment[index] = vertex;\n        break;\n      case GeometryType.POLYGON:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[0]][segmentData.index + index] = vertex;\n        segment[index] = vertex;\n        break;\n      case GeometryType.MULTI_POLYGON:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[1]][depth[0]][segmentData.index + index] = vertex;\n        segment[index] = vertex;\n        break;\n      case GeometryType.CIRCLE:\n        segment[0] = segment[1] = vertex;\n        if (segmentData.index === CIRCLE_CENTER_INDEX) {\n          this.changingFeature_ = true;\n          geometry.setCenter(vertex);\n          this.changingFeature_ = false;\n        } else { // We're dragging the circle's circumference:\n          this.changingFeature_ = true;\n          geometry.setRadius(coordinateDistance(geometry.getCenter(), vertex));\n          this.changingFeature_ = false;\n        }\n        break;\n      default:\n        // pass\n    }\n\n    if (coordinates) {\n      this.setGeometryCoordinates_(geometry, coordinates);\n    }\n  }\n  this.createOrUpdateVertexFeature_(vertex);\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} evt Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/Modify}\n */\nfunction handleUpEvent(evt) {\n  for (let i = this.dragSegments_.length - 1; i >= 0; --i) {\n    const segmentData = this.dragSegments_[i][0];\n    const geometry = segmentData.geometry;\n    if (geometry.getType() === GeometryType.CIRCLE) {\n      // Update a circle object in the R* bush:\n      const coordinates = geometry.getCenter();\n      const centerSegmentData = segmentData.featureSegments[0];\n      const circumferenceSegmentData = segmentData.featureSegments[1];\n      centerSegmentData.segment[0] = centerSegmentData.segment[1] = coordinates;\n      circumferenceSegmentData.segment[0] = circumferenceSegmentData.segment[1] = coordinates;\n      this.rBush_.update(createOrUpdateFromCoordinate(coordinates), centerSegmentData);\n      this.rBush_.update(geometry.getExtent(), circumferenceSegmentData);\n    } else {\n      this.rBush_.update(boundingExtent(segmentData.segment), segmentData);\n    }\n  }\n  if (this.modified_) {\n    this.dispatchEvent(new ModifyEvent(ModifyEventType.MODIFYEND, this.features_, evt));\n    this.modified_ = false;\n  }\n  return false;\n}\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} and may modify the\n * geometry.\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {module:ol/interaction/Modify}\n */\nfunction handleEvent(mapBrowserEvent) {\n  if (!(mapBrowserEvent instanceof MapBrowserPointerEvent)) {\n    return true;\n  }\n  this.lastPointerEvent_ = mapBrowserEvent;\n\n  let handled;\n  if (!mapBrowserEvent.map.getView().getInteracting() &&\n      mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE &&\n      !this.handlingDownUpSequence) {\n    this.handlePointerMove_(mapBrowserEvent);\n  }\n  if (this.vertexFeature_ && this.deleteCondition_(mapBrowserEvent)) {\n    if (mapBrowserEvent.type != MapBrowserEventType.SINGLECLICK || !this.ignoreNextSingleClick_) {\n      handled = this.removePoint();\n    } else {\n      handled = true;\n    }\n  }\n\n  if (mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK) {\n    this.ignoreNextSingleClick_ = false;\n  }\n\n  return handlePointerEvent.call(this, mapBrowserEvent) && !handled;\n}\n\n\n/**\n * @param {module:ol/MapBrowserEvent} evt Event.\n * @private\n */\nModify.prototype.handlePointerMove_ = function(evt) {\n  this.lastPixel_ = evt.pixel;\n  this.handlePointerAtPixel_(evt.pixel, evt.map);\n};\n\n\n/**\n * @param {module:ol~Pixel} pixel Pixel\n * @param {module:ol/PluggableMap} map Map.\n * @private\n */\nModify.prototype.handlePointerAtPixel_ = function(pixel, map) {\n  const pixelCoordinate = map.getCoordinateFromPixel(pixel);\n  const sortByDistance = function(a, b) {\n    return pointDistanceToSegmentDataSquared(pixelCoordinate, a) -\n        pointDistanceToSegmentDataSquared(pixelCoordinate, b);\n  };\n\n  const box = buffer(createOrUpdateFromCoordinate(pixelCoordinate),\n    map.getView().getResolution() * this.pixelTolerance_);\n\n  const rBush = this.rBush_;\n  const nodes = rBush.getInExtent(box);\n  if (nodes.length > 0) {\n    nodes.sort(sortByDistance);\n    const node = nodes[0];\n    const closestSegment = node.segment;\n    let vertex = closestOnSegmentData(pixelCoordinate, node);\n    const vertexPixel = map.getPixelFromCoordinate(vertex);\n    let dist = coordinateDistance(pixel, vertexPixel);\n    if (dist <= this.pixelTolerance_) {\n      const vertexSegments = {};\n\n      if (node.geometry.getType() === GeometryType.CIRCLE &&\n      node.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n\n        this.snappedToVertex_ = true;\n        this.createOrUpdateVertexFeature_(vertex);\n      } else {\n        const pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n        const pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n        const squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n        const squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n        dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n        this.snappedToVertex_ = dist <= this.pixelTolerance_;\n        if (this.snappedToVertex_) {\n          vertex = squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\n        }\n        this.createOrUpdateVertexFeature_(vertex);\n        for (let i = 1, ii = nodes.length; i < ii; ++i) {\n          const segment = nodes[i].segment;\n          if ((coordinatesEqual(closestSegment[0], segment[0]) &&\n              coordinatesEqual(closestSegment[1], segment[1]) ||\n              (coordinatesEqual(closestSegment[0], segment[1]) &&\n              coordinatesEqual(closestSegment[1], segment[0])))) {\n            vertexSegments[getUid(segment)] = true;\n          } else {\n            break;\n          }\n        }\n      }\n\n      vertexSegments[getUid(closestSegment)] = true;\n      this.vertexSegments_ = vertexSegments;\n      return;\n    }\n  }\n  if (this.vertexFeature_) {\n    this.overlay_.getSource().removeFeature(this.vertexFeature_);\n    this.vertexFeature_ = null;\n  }\n};\n\n\n/**\n * Returns the distance from a point to a line segment.\n *\n * @param {module:ol/coordinate~Coordinate} pointCoordinates The coordinates of the point from\n *        which to calculate the distance.\n * @param {module:ol/interaction/Modify~SegmentData} segmentData The object describing the line\n *        segment we are calculating the distance to.\n * @return {number} The square of the distance between a point and a line segment.\n */\nfunction pointDistanceToSegmentDataSquared(pointCoordinates, segmentData) {\n  const geometry = segmentData.geometry;\n\n  if (geometry.getType() === GeometryType.CIRCLE) {\n    const circleGeometry = /** @type {module:ol/geom/Circle} */ (geometry);\n\n    if (segmentData.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n      const distanceToCenterSquared =\n            squaredCoordinateDistance(circleGeometry.getCenter(), pointCoordinates);\n      const distanceToCircumference =\n            Math.sqrt(distanceToCenterSquared) - circleGeometry.getRadius();\n      return distanceToCircumference * distanceToCircumference;\n    }\n  }\n  return squaredDistanceToSegment(pointCoordinates, segmentData.segment);\n}\n\n/**\n * Returns the point closest to a given line segment.\n *\n * @param {module:ol/coordinate~Coordinate} pointCoordinates The point to which a closest point\n *        should be found.\n * @param {module:ol/interaction/Modify~SegmentData} segmentData The object describing the line\n *        segment which should contain the closest point.\n * @return {module:ol/coordinate~Coordinate} The point closest to the specified line segment.\n */\nfunction closestOnSegmentData(pointCoordinates, segmentData) {\n  const geometry = segmentData.geometry;\n\n  if (geometry.getType() === GeometryType.CIRCLE &&\n  segmentData.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n    return geometry.getClosestPoint(pointCoordinates);\n  }\n  return closestOnSegment(pointCoordinates, segmentData.segment);\n}\n\n\n/**\n * @param {module:ol/interaction/Modify~SegmentData} segmentData Segment data.\n * @param {module:ol/coordinate~Coordinate} vertex Vertex.\n * @private\n */\nModify.prototype.insertVertex_ = function(segmentData, vertex) {\n  const segment = segmentData.segment;\n  const feature = segmentData.feature;\n  const geometry = segmentData.geometry;\n  const depth = segmentData.depth;\n  const index = /** @type {number} */ (segmentData.index);\n  let coordinates;\n\n  while (vertex.length < geometry.getStride()) {\n    vertex.push(0);\n  }\n\n  switch (geometry.getType()) {\n    case GeometryType.MULTI_LINE_STRING:\n      coordinates = geometry.getCoordinates();\n      coordinates[depth[0]].splice(index + 1, 0, vertex);\n      break;\n    case GeometryType.POLYGON:\n      coordinates = geometry.getCoordinates();\n      coordinates[depth[0]].splice(index + 1, 0, vertex);\n      break;\n    case GeometryType.MULTI_POLYGON:\n      coordinates = geometry.getCoordinates();\n      coordinates[depth[1]][depth[0]].splice(index + 1, 0, vertex);\n      break;\n    case GeometryType.LINE_STRING:\n      coordinates = geometry.getCoordinates();\n      coordinates.splice(index + 1, 0, vertex);\n      break;\n    default:\n      return;\n  }\n\n  this.setGeometryCoordinates_(geometry, coordinates);\n  const rTree = this.rBush_;\n  rTree.remove(segmentData);\n  this.updateSegmentIndices_(geometry, index, depth, 1);\n  const newSegmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n    segment: [segment[0], vertex],\n    feature: feature,\n    geometry: geometry,\n    depth: depth,\n    index: index\n  });\n  rTree.insert(boundingExtent(newSegmentData.segment),\n    newSegmentData);\n  this.dragSegments_.push([newSegmentData, 1]);\n\n  const newSegmentData2 = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n    segment: [vertex, segment[1]],\n    feature: feature,\n    geometry: geometry,\n    depth: depth,\n    index: index + 1\n  });\n  rTree.insert(boundingExtent(newSegmentData2.segment), newSegmentData2);\n  this.dragSegments_.push([newSegmentData2, 0]);\n  this.ignoreNextSingleClick_ = true;\n};\n\n/**\n * Removes the vertex currently being pointed.\n * @return {boolean} True when a vertex was removed.\n * @api\n */\nModify.prototype.removePoint = function() {\n  if (this.lastPointerEvent_ && this.lastPointerEvent_.type != MapBrowserEventType.POINTERDRAG) {\n    const evt = this.lastPointerEvent_;\n    this.willModifyFeatures_(evt);\n    this.removeVertex_();\n    this.dispatchEvent(new ModifyEvent(ModifyEventType.MODIFYEND, this.features_, evt));\n    this.modified_ = false;\n    return true;\n  }\n  return false;\n};\n\n/**\n * Removes a vertex from all matching features.\n * @return {boolean} True when a vertex was removed.\n * @private\n */\nModify.prototype.removeVertex_ = function() {\n  const dragSegments = this.dragSegments_;\n  const segmentsByFeature = {};\n  let deleted = false;\n  let component, coordinates, dragSegment, geometry, i, index, left;\n  let newIndex, right, segmentData, uid;\n  for (i = dragSegments.length - 1; i >= 0; --i) {\n    dragSegment = dragSegments[i];\n    segmentData = dragSegment[0];\n    uid = getUid(segmentData.feature);\n    if (segmentData.depth) {\n      // separate feature components\n      uid += '-' + segmentData.depth.join('-');\n    }\n    if (!(uid in segmentsByFeature)) {\n      segmentsByFeature[uid] = {};\n    }\n    if (dragSegment[1] === 0) {\n      segmentsByFeature[uid].right = segmentData;\n      segmentsByFeature[uid].index = segmentData.index;\n    } else if (dragSegment[1] == 1) {\n      segmentsByFeature[uid].left = segmentData;\n      segmentsByFeature[uid].index = segmentData.index + 1;\n    }\n\n  }\n  for (uid in segmentsByFeature) {\n    right = segmentsByFeature[uid].right;\n    left = segmentsByFeature[uid].left;\n    index = segmentsByFeature[uid].index;\n    newIndex = index - 1;\n    if (left !== undefined) {\n      segmentData = left;\n    } else {\n      segmentData = right;\n    }\n    if (newIndex < 0) {\n      newIndex = 0;\n    }\n    geometry = segmentData.geometry;\n    coordinates = geometry.getCoordinates();\n    component = coordinates;\n    deleted = false;\n    switch (geometry.getType()) {\n      case GeometryType.MULTI_LINE_STRING:\n        if (coordinates[segmentData.depth[0]].length > 2) {\n          coordinates[segmentData.depth[0]].splice(index, 1);\n          deleted = true;\n        }\n        break;\n      case GeometryType.LINE_STRING:\n        if (coordinates.length > 2) {\n          coordinates.splice(index, 1);\n          deleted = true;\n        }\n        break;\n      case GeometryType.MULTI_POLYGON:\n        component = component[segmentData.depth[1]];\n        /* falls through */\n      case GeometryType.POLYGON:\n        component = component[segmentData.depth[0]];\n        if (component.length > 4) {\n          if (index == component.length - 1) {\n            index = 0;\n          }\n          component.splice(index, 1);\n          deleted = true;\n          if (index === 0) {\n            // close the ring again\n            component.pop();\n            component.push(component[0]);\n            newIndex = component.length - 1;\n          }\n        }\n        break;\n      default:\n        // pass\n    }\n\n    if (deleted) {\n      this.setGeometryCoordinates_(geometry, coordinates);\n      const segments = [];\n      if (left !== undefined) {\n        this.rBush_.remove(left);\n        segments.push(left.segment[0]);\n      }\n      if (right !== undefined) {\n        this.rBush_.remove(right);\n        segments.push(right.segment[1]);\n      }\n      if (left !== undefined && right !== undefined) {\n        const newSegmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n          depth: segmentData.depth,\n          feature: segmentData.feature,\n          geometry: segmentData.geometry,\n          index: newIndex,\n          segment: segments\n        });\n        this.rBush_.insert(boundingExtent(newSegmentData.segment),\n          newSegmentData);\n      }\n      this.updateSegmentIndices_(geometry, index, segmentData.depth, -1);\n      if (this.vertexFeature_) {\n        this.overlay_.getSource().removeFeature(this.vertexFeature_);\n        this.vertexFeature_ = null;\n      }\n      dragSegments.length = 0;\n    }\n\n  }\n  return deleted;\n};\n\n\n/**\n * @param {module:ol/geom/SimpleGeometry} geometry Geometry.\n * @param {Array} coordinates Coordinates.\n * @private\n */\nModify.prototype.setGeometryCoordinates_ = function(geometry, coordinates) {\n  this.changingFeature_ = true;\n  geometry.setCoordinates(coordinates);\n  this.changingFeature_ = false;\n};\n\n\n/**\n * @param {module:ol/geom/SimpleGeometry} geometry Geometry.\n * @param {number} index Index.\n * @param {Array.<number>|undefined} depth Depth.\n * @param {number} delta Delta (1 or -1).\n * @private\n */\nModify.prototype.updateSegmentIndices_ = function(\n  geometry, index, depth, delta) {\n  this.rBush_.forEachInExtent(geometry.getExtent(), function(segmentDataMatch) {\n    if (segmentDataMatch.geometry === geometry &&\n        (depth === undefined || segmentDataMatch.depth === undefined ||\n        equals(segmentDataMatch.depth, depth)) &&\n        segmentDataMatch.index > index) {\n      segmentDataMatch.index += delta;\n    }\n  });\n};\n\n\n/**\n * @return {module:ol/style/Style~StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  const style = createEditingStyle();\n  return function(feature, resolution) {\n    return style[GeometryType.POINT];\n  };\n}\n\n\nexport default Modify;\n","/**\n * @module ol/interaction/Select\n */\nimport {getUid, inherits} from '../index.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport {extend, includes} from '../array.js';\nimport {listen} from '../events.js';\nimport Event from '../events/Event.js';\nimport {singleClick, never, shiftKeyOnly, pointerMove} from '../events/condition.js';\nimport {TRUE} from '../functions.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Interaction from '../interaction/Interaction.js';\nimport VectorLayer from '../layer/Vector.js';\nimport {clear} from '../obj.js';\nimport VectorSource from '../source/Vector.js';\nimport {createEditingStyle} from '../style/Style.js';\n\n\n/**\n * @enum {string}\n */\nconst SelectEventType = {\n  /**\n   * Triggered when feature(s) has been (de)selected.\n   * @event SelectEvent#select\n   * @api\n   */\n  SELECT: 'select'\n};\n\n\n/**\n * A function that takes an {@link module:ol/Feature} or\n * {@link module:ol/render/Feature} and an\n * {@link module:ol/layer/Layer} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @typedef {function((module:ol/Feature|module:ol/render/Feature), module:ol/layer/Layer):\n *     boolean} FilterFunction\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/events/condition~Condition} [addCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition~never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {module:ol/events/condition~Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is the event\n * for the selected features as a whole. By default, this is\n * {@link module:ol/events/condition~singleClick}. Clicking on a feature selects that\n * feature and removes any that were in the selection. Clicking outside any\n * feature removes all from the selection.\n * See `toggle`, `add`, `remove` options for adding/removing extra features to/\n * from the selection.\n * @property {Array.<module:ol/layer/Layer>|function(module:ol/layer/Layer): boolean} [layers]\n * A list of layers from which features should be selected. Alternatively, a\n * filter function can be provided. The function will be called for each layer\n * in the map and should return `true` for layers that you want to be\n * selectable. If the option is absent, all visible layers will be considered\n * selectable.\n * @property {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction} [style]\n * Style for the selected features. By default the default edit style is used\n * (see {@link module:ol/style}).\n * @property {module:ol/events/condition~Condition} [removeCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition~never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {module:ol/events/condition~Condition} [toggleCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is in addition\n * to the `condition` event. By default,\n * {@link module:ol/events/condition~shiftKeyOnly}, i.e. pressing `shift` as\n * well as the `condition` event, adds that feature to the current selection if\n * it is not currently selected, and removes it if it is. See `add` and `remove`\n * if you want to use different events instead of a toggle.\n * @property {boolean} [multi=false] A boolean that determines if the default\n * behaviour should select only single features or all (overlapping) features at\n * the clicked map position. The default of `false` means single select.\n * @property {module:ol/Collection.<module:ol/Feature>} [features]\n * Collection where the interaction will place selected features. Optional. If\n * not set the interaction will create a collection. In any case the collection\n * used by the interaction is returned by\n * {@link module:ol/interaction/Select~Select#getFeatures}.\n * @property {module:ol/interaction/Select~FilterFunction} [filter] A function\n * that takes an {@link module:ol/Feature} and an\n * {@link module:ol/layer/Layer} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @property {boolean} [wrapX=true] Wrap the world horizontally on the selection\n * overlay.\n * @property {number} [hitTolerance=0] Hit-detection tolerance. Pixels inside\n * the radius around the given position will be checked for features. This only\n * works for the canvas renderer and not for WebGL.\n */\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Select~Select} instances are instances of\n * this type.\n *\n * @param {SelectEventType} type The event type.\n * @param {Array.<module:ol/Feature>} selected Selected features.\n * @param {Array.<module:ol/Feature>} deselected Deselected features.\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Associated\n *     {@link module:ol/MapBrowserEvent}.\n * @extends {module:ol/events/Event}\n * @constructor\n */\nconst SelectEvent = function(type, selected, deselected, mapBrowserEvent) {\n  Event.call(this, type);\n\n  /**\n   * Selected features array.\n   * @type {Array.<module:ol/Feature>}\n   * @api\n   */\n  this.selected = selected;\n\n  /**\n   * Deselected features array.\n   * @type {Array.<module:ol/Feature>}\n   * @api\n   */\n  this.deselected = deselected;\n\n  /**\n   * Associated {@link module:ol/MapBrowserEvent}.\n   * @type {module:ol/MapBrowserEvent}\n   * @api\n   */\n  this.mapBrowserEvent = mapBrowserEvent;\n};\n\ninherits(SelectEvent, Event);\n\n\n/**\n * @classdesc\n * Interaction for selecting vector features. By default, selected features are\n * styled differently, so this interaction can be used for visual highlighting,\n * as well as selecting features for other actions, such as modification or\n * output. There are three ways of controlling which features are selected:\n * using the browser event as defined by the `condition` and optionally the\n * `toggle`, `add`/`remove`, and `multi` options; a `layers` filter; and a\n * further feature filter using the `filter` option.\n *\n * Selected features are added to an internal unmanaged layer.\n *\n * @constructor\n * @extends {module:ol/interaction/Interaction}\n * @param {module:ol/interaction/Select~Options=} opt_options Options.\n * @fires SelectEvent\n * @api\n */\nconst Select = function(opt_options) {\n\n  Interaction.call(this, {\n    handleEvent: handleEvent\n  });\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @private\n   * @type {module:ol/events/condition~Condition}\n   */\n  this.condition_ = options.condition ? options.condition : singleClick;\n\n  /**\n   * @private\n   * @type {module:ol/events/condition~Condition}\n   */\n  this.addCondition_ = options.addCondition ? options.addCondition : never;\n\n  /**\n   * @private\n   * @type {module:ol/events/condition~Condition}\n   */\n  this.removeCondition_ = options.removeCondition ? options.removeCondition : never;\n\n  /**\n   * @private\n   * @type {module:ol/events/condition~Condition}\n   */\n  this.toggleCondition_ = options.toggleCondition ? options.toggleCondition : shiftKeyOnly;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.multi_ = options.multi ? options.multi : false;\n\n  /**\n   * @private\n   * @type {module:ol/interaction/Select~FilterFunction}\n   */\n  this.filter_ = options.filter ? options.filter : TRUE;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\n\n  const featureOverlay = new VectorLayer({\n    source: new VectorSource({\n      useSpatialIndex: false,\n      features: options.features,\n      wrapX: options.wrapX\n    }),\n    style: options.style ? options.style :\n      getDefaultStyleFunction(),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n  /**\n   * @private\n   * @type {module:ol/layer/Vector}\n   */\n  this.featureOverlay_ = featureOverlay;\n\n  /** @type {function(module:ol/layer/Layer): boolean} */\n  let layerFilter;\n  if (options.layers) {\n    if (typeof options.layers === 'function') {\n      layerFilter = options.layers;\n    } else {\n      const layers = options.layers;\n      layerFilter = function(layer) {\n        return includes(layers, layer);\n      };\n    }\n  } else {\n    layerFilter = TRUE;\n  }\n\n  /**\n   * @private\n   * @type {function(module:ol/layer/Layer): boolean}\n   */\n  this.layerFilter_ = layerFilter;\n\n  /**\n   * An association between selected feature (key)\n   * and layer (value)\n   * @private\n   * @type {Object.<number, module:ol/layer/Layer>}\n   */\n  this.featureLayerAssociation_ = {};\n\n  const features = this.featureOverlay_.getSource().getFeaturesCollection();\n  listen(features, CollectionEventType.ADD,\n    this.addFeature_, this);\n  listen(features, CollectionEventType.REMOVE,\n    this.removeFeature_, this);\n\n};\n\ninherits(Select, Interaction);\n\n\n/**\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n * @param {module:ol/layer/Layer} layer Layer.\n * @private\n */\nSelect.prototype.addFeatureLayerAssociation_ = function(feature, layer) {\n  const key = getUid(feature);\n  this.featureLayerAssociation_[key] = layer;\n};\n\n\n/**\n * Get the selected features.\n * @return {module:ol/Collection.<module:ol/Feature>} Features collection.\n * @api\n */\nSelect.prototype.getFeatures = function() {\n  return this.featureOverlay_.getSource().getFeaturesCollection();\n};\n\n\n/**\n * Returns the Hit-detection tolerance.\n * @returns {number} Hit tolerance in pixels.\n * @api\n */\nSelect.prototype.getHitTolerance = function() {\n  return this.hitTolerance_;\n};\n\n\n/**\n * Returns the associated {@link module:ol/layer/Vector~Vector vectorlayer} of\n * the (last) selected feature. Note that this will not work with any\n * programmatic method like pushing features to\n * {@link module:ol/interaction/Select~Select#getFeatures collection}.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature\n * @return {module:ol/layer/Vector} Layer.\n * @api\n */\nSelect.prototype.getLayer = function(feature) {\n  const key = getUid(feature);\n  return (\n    /** @type {module:ol/layer/Vector} */ (this.featureLayerAssociation_[key])\n  );\n};\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} and may change the\n * selected state of features.\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {module:ol/interaction/Select}\n */\nfunction handleEvent(mapBrowserEvent) {\n  if (!this.condition_(mapBrowserEvent)) {\n    return true;\n  }\n  const add = this.addCondition_(mapBrowserEvent);\n  const remove = this.removeCondition_(mapBrowserEvent);\n  const toggle = this.toggleCondition_(mapBrowserEvent);\n  const set = !add && !remove && !toggle;\n  const map = mapBrowserEvent.map;\n  const features = this.featureOverlay_.getSource().getFeaturesCollection();\n  const deselected = [];\n  const selected = [];\n  if (set) {\n    // Replace the currently selected feature(s) with the feature(s) at the\n    // pixel, or clear the selected feature(s) if there is no feature at\n    // the pixel.\n    clear(this.featureLayerAssociation_);\n    map.forEachFeatureAtPixel(mapBrowserEvent.pixel,\n      (\n        /**\n         * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n         * @param {module:ol/layer/Layer} layer Layer.\n         * @return {boolean|undefined} Continue to iterate over the features.\n         */\n        function(feature, layer) {\n          if (this.filter_(feature, layer)) {\n            selected.push(feature);\n            this.addFeatureLayerAssociation_(feature, layer);\n            return !this.multi_;\n          }\n        }).bind(this), {\n        layerFilter: this.layerFilter_,\n        hitTolerance: this.hitTolerance_\n      });\n    for (let i = features.getLength() - 1; i >= 0; --i) {\n      const feature = features.item(i);\n      const index = selected.indexOf(feature);\n      if (index > -1) {\n        // feature is already selected\n        selected.splice(index, 1);\n      } else {\n        features.remove(feature);\n        deselected.push(feature);\n      }\n    }\n    if (selected.length !== 0) {\n      features.extend(selected);\n    }\n  } else {\n    // Modify the currently selected feature(s).\n    map.forEachFeatureAtPixel(mapBrowserEvent.pixel,\n      (\n        /**\n         * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n         * @param {module:ol/layer/Layer} layer Layer.\n         * @return {boolean|undefined} Continue to iterate over the features.\n         */\n        function(feature, layer) {\n          if (this.filter_(feature, layer)) {\n            if ((add || toggle) && !includes(features.getArray(), feature)) {\n              selected.push(feature);\n              this.addFeatureLayerAssociation_(feature, layer);\n            } else if ((remove || toggle) && includes(features.getArray(), feature)) {\n              deselected.push(feature);\n              this.removeFeatureLayerAssociation_(feature);\n            }\n            return !this.multi_;\n          }\n        }).bind(this), {\n        layerFilter: this.layerFilter_,\n        hitTolerance: this.hitTolerance_\n      });\n    for (let j = deselected.length - 1; j >= 0; --j) {\n      features.remove(deselected[j]);\n    }\n    features.extend(selected);\n  }\n  if (selected.length > 0 || deselected.length > 0) {\n    this.dispatchEvent(\n      new SelectEvent(SelectEventType.SELECT,\n        selected, deselected, mapBrowserEvent));\n  }\n  return pointerMove(mapBrowserEvent);\n}\n\n\n/**\n * Hit-detection tolerance. Pixels inside the radius around the given position\n * will be checked for features. This only works for the canvas renderer and\n * not for WebGL.\n * @param {number} hitTolerance Hit tolerance in pixels.\n * @api\n */\nSelect.prototype.setHitTolerance = function(hitTolerance) {\n  this.hitTolerance_ = hitTolerance;\n};\n\n\n/**\n * Remove the interaction from its current map, if any,  and attach it to a new\n * map, if any. Pass `null` to just remove the interaction from the current map.\n * @param {module:ol/PluggableMap} map Map.\n * @override\n * @api\n */\nSelect.prototype.setMap = function(map) {\n  const currentMap = this.getMap();\n  const selectedFeatures =\n      this.featureOverlay_.getSource().getFeaturesCollection();\n  if (currentMap) {\n    selectedFeatures.forEach(currentMap.unskipFeature.bind(currentMap));\n  }\n  Interaction.prototype.setMap.call(this, map);\n  this.featureOverlay_.setMap(map);\n  if (map) {\n    selectedFeatures.forEach(map.skipFeature.bind(map));\n  }\n};\n\n\n/**\n * @return {module:ol/style/Style~StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  const styles = createEditingStyle();\n  extend(styles[GeometryType.POLYGON], styles[GeometryType.LINE_STRING]);\n  extend(styles[GeometryType.GEOMETRY_COLLECTION], styles[GeometryType.LINE_STRING]);\n\n  return function(feature, resolution) {\n    if (!feature.getGeometry()) {\n      return null;\n    }\n    return styles[feature.getGeometry().getType()];\n  };\n}\n\n\n/**\n * @param {module:ol/Collection~CollectionEvent} evt Event.\n * @private\n */\nSelect.prototype.addFeature_ = function(evt) {\n  const map = this.getMap();\n  if (map) {\n    map.skipFeature(/** @type {module:ol/Feature} */ (evt.element));\n  }\n};\n\n\n/**\n * @param {module:ol/Collection~CollectionEvent} evt Event.\n * @private\n */\nSelect.prototype.removeFeature_ = function(evt) {\n  const map = this.getMap();\n  if (map) {\n    map.unskipFeature(/** @type {module:ol/Feature} */ (evt.element));\n  }\n};\n\n\n/**\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n * @private\n */\nSelect.prototype.removeFeatureLayerAssociation_ = function(feature) {\n  const key = getUid(feature);\n  delete this.featureLayerAssociation_[key];\n};\n\n\nexport default Select;\n","/**\n * @module ol/interaction/Snap\n */\nimport {getUid, inherits} from '../index.js';\nimport {CollectionEvent} from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport {distance as coordinateDistance, squaredDistance as squaredCoordinateDistance, closestOnCircle, closestOnSegment, squaredDistanceToSegment} from '../coordinate.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {boundingExtent, createEmpty} from '../extent.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport {fromCircle} from '../geom/Polygon.js';\nimport PointerInteraction, {handleEvent as handlePointerEvent} from '../interaction/Pointer.js';\nimport {getValues} from '../obj.js';\nimport {VectorSourceEvent} from '../source/Vector.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport RBush from '../structs/RBush.js';\n\n\n/**\n * @typedef {Object} Result\n * @property {boolean} snapped\n * @property {module:ol/coordinate~Coordinate|null} vertex\n * @property {module:ol~Pixel|null} vertexPixel\n */\n\n\n/**\n * @typedef {Object} SegmentData\n * @property {module:ol/Feature} feature\n * @property {Array.<module:ol/coordinate~Coordinate>} segment\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/Collection.<module:ol/Feature>} [features] Snap to these features. Either this option or source should be provided.\n * @property {boolean} [edge=true] Snap to edges.\n * @property {boolean} [vertex=true] Snap to vertices.\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the pointer close enough to a segment or\n * vertex for snapping.\n * @property {module:ol/source/Vector} [source] Snap to features from this source. Either this option or features should be provided\n */\n\n\n/**\n * @classdesc\n * Handles snapping of vector features while modifying or drawing them.  The\n * features can come from a {@link module:ol/source/Vector} or {@link module:ol/Collection~Collection}\n * Any interaction object that allows the user to interact\n * with the features using the mouse can benefit from the snapping, as long\n * as it is added before.\n *\n * The snap interaction modifies map browser event `coordinate` and `pixel`\n * properties to force the snap to occur to any interaction that them.\n *\n * Example:\n *\n *     import Snap from 'ol/interaction/Snap';\n *\n *     var snap = new Snap({\n *       source: source\n *     });\n *\n * @constructor\n * @extends {module:ol/interaction/Pointer}\n * @param {module:ol/interaction/Snap~Options=} opt_options Options.\n * @api\n */\nconst Snap = function(opt_options) {\n\n  PointerInteraction.call(this, {\n    handleEvent: handleEvent,\n    handleDownEvent: TRUE,\n    handleUpEvent: handleUpEvent\n  });\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @type {module:ol/source/Vector}\n   * @private\n   */\n  this.source_ = options.source ? options.source : null;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.vertex_ = options.vertex !== undefined ? options.vertex : true;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.edge_ = options.edge !== undefined ? options.edge : true;\n\n  /**\n   * @type {module:ol/Collection.<module:ol/Feature>}\n   * @private\n   */\n  this.features_ = options.features ? options.features : null;\n\n  /**\n   * @type {Array.<module:ol/events~EventsKey>}\n   * @private\n   */\n  this.featuresListenerKeys_ = [];\n\n  /**\n   * @type {Object.<number, module:ol/events~EventsKey>}\n   * @private\n   */\n  this.featureChangeListenerKeys_ = {};\n\n  /**\n   * Extents are preserved so indexed segment can be quickly removed\n   * when its feature geometry changes\n   * @type {Object.<number, module:ol/extent~Extent>}\n   * @private\n   */\n  this.indexedFeaturesExtents_ = {};\n\n  /**\n   * If a feature geometry changes while a pointer drag|move event occurs, the\n   * feature doesn't get updated right away.  It will be at the next 'pointerup'\n   * event fired.\n   * @type {!Object.<number, module:ol/Feature>}\n   * @private\n   */\n  this.pendingFeatures_ = {};\n\n  /**\n   * Used for distance sorting in sortByDistance_\n   * @type {module:ol/coordinate~Coordinate}\n   * @private\n   */\n  this.pixelCoordinate_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n    options.pixelTolerance : 10;\n\n  /**\n   * @type {function(module:ol/interaction/Snap~SegmentData, module:ol/interaction/Snap~SegmentData): number}\n   * @private\n   */\n  this.sortByDistance_ = sortByDistance.bind(this);\n\n\n  /**\n  * Segment RTree for each layer\n  * @type {module:ol/structs/RBush.<module:ol/interaction/Snap~SegmentData>}\n  * @private\n  */\n  this.rBush_ = new RBush();\n\n\n  /**\n  * @const\n  * @private\n  * @type {Object.<string, function(module:ol/Feature, module:ol/geom/Geometry)>}\n  */\n  this.SEGMENT_WRITERS_ = {\n    'Point': this.writePointGeometry_,\n    'LineString': this.writeLineStringGeometry_,\n    'LinearRing': this.writeLineStringGeometry_,\n    'Polygon': this.writePolygonGeometry_,\n    'MultiPoint': this.writeMultiPointGeometry_,\n    'MultiLineString': this.writeMultiLineStringGeometry_,\n    'MultiPolygon': this.writeMultiPolygonGeometry_,\n    'GeometryCollection': this.writeGeometryCollectionGeometry_,\n    'Circle': this.writeCircleGeometry_\n  };\n};\n\ninherits(Snap, PointerInteraction);\n\n\n/**\n * Add a feature to the collection of features that we may snap to.\n * @param {module:ol/Feature} feature Feature.\n * @param {boolean=} opt_listen Whether to listen to the feature change or not\n *     Defaults to `true`.\n * @api\n */\nSnap.prototype.addFeature = function(feature, opt_listen) {\n  const register = opt_listen !== undefined ? opt_listen : true;\n  const feature_uid = getUid(feature);\n  const geometry = feature.getGeometry();\n  if (geometry) {\n    const segmentWriter = this.SEGMENT_WRITERS_[geometry.getType()];\n    if (segmentWriter) {\n      this.indexedFeaturesExtents_[feature_uid] = geometry.getExtent(createEmpty());\n      segmentWriter.call(this, feature, geometry);\n    }\n  }\n\n  if (register) {\n    this.featureChangeListenerKeys_[feature_uid] = listen(\n      feature,\n      EventType.CHANGE,\n      this.handleFeatureChange_, this);\n  }\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature.\n * @private\n */\nSnap.prototype.forEachFeatureAdd_ = function(feature) {\n  this.addFeature(feature);\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature.\n * @private\n */\nSnap.prototype.forEachFeatureRemove_ = function(feature) {\n  this.removeFeature(feature);\n};\n\n\n/**\n * @return {module:ol/Collection.<module:ol/Feature>|Array.<module:ol/Feature>} Features.\n * @private\n */\nSnap.prototype.getFeatures_ = function() {\n  let features;\n  if (this.features_) {\n    features = this.features_;\n  } else if (this.source_) {\n    features = this.source_.getFeatures();\n  }\n  return (\n    /** @type {!Array.<module:ol/Feature>|!module:ol/Collection.<module:ol/Feature>} */ (features)\n  );\n};\n\n\n/**\n * @param {module:ol/source/Vector|module:ol/Collection~CollectionEvent} evt Event.\n * @private\n */\nSnap.prototype.handleFeatureAdd_ = function(evt) {\n  let feature;\n  if (evt instanceof VectorSourceEvent) {\n    feature = evt.feature;\n  } else if (evt instanceof CollectionEvent) {\n    feature = evt.element;\n  }\n  this.addFeature(/** @type {module:ol/Feature} */ (feature));\n};\n\n\n/**\n * @param {module:ol/source/Vector|module:ol/Collection~CollectionEvent} evt Event.\n * @private\n */\nSnap.prototype.handleFeatureRemove_ = function(evt) {\n  let feature;\n  if (evt instanceof VectorSourceEvent) {\n    feature = evt.feature;\n  } else if (evt instanceof CollectionEvent) {\n    feature = evt.element;\n  }\n  this.removeFeature(/** @type {module:ol/Feature} */ (feature));\n};\n\n\n/**\n * @param {module:ol/events/Event} evt Event.\n * @private\n */\nSnap.prototype.handleFeatureChange_ = function(evt) {\n  const feature = /** @type {module:ol/Feature} */ (evt.target);\n  if (this.handlingDownUpSequence) {\n    const uid = getUid(feature);\n    if (!(uid in this.pendingFeatures_)) {\n      this.pendingFeatures_[uid] = feature;\n    }\n  } else {\n    this.updateFeature_(feature);\n  }\n};\n\n\n/**\n * Remove a feature from the collection of features that we may snap to.\n * @param {module:ol/Feature} feature Feature\n * @param {boolean=} opt_unlisten Whether to unlisten to the feature change\n *     or not. Defaults to `true`.\n * @api\n */\nSnap.prototype.removeFeature = function(feature, opt_unlisten) {\n  const unregister = opt_unlisten !== undefined ? opt_unlisten : true;\n  const feature_uid = getUid(feature);\n  const extent = this.indexedFeaturesExtents_[feature_uid];\n  if (extent) {\n    const rBush = this.rBush_;\n    const nodesToRemove = [];\n    rBush.forEachInExtent(extent, function(node) {\n      if (feature === node.feature) {\n        nodesToRemove.push(node);\n      }\n    });\n    for (let i = nodesToRemove.length - 1; i >= 0; --i) {\n      rBush.remove(nodesToRemove[i]);\n    }\n  }\n\n  if (unregister) {\n    unlistenByKey(this.featureChangeListenerKeys_[feature_uid]);\n    delete this.featureChangeListenerKeys_[feature_uid];\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nSnap.prototype.setMap = function(map) {\n  const currentMap = this.getMap();\n  const keys = this.featuresListenerKeys_;\n  const features = this.getFeatures_();\n\n  if (currentMap) {\n    keys.forEach(unlistenByKey);\n    keys.length = 0;\n    features.forEach(this.forEachFeatureRemove_.bind(this));\n  }\n  PointerInteraction.prototype.setMap.call(this, map);\n\n  if (map) {\n    if (this.features_) {\n      keys.push(\n        listen(this.features_, CollectionEventType.ADD,\n          this.handleFeatureAdd_, this),\n        listen(this.features_, CollectionEventType.REMOVE,\n          this.handleFeatureRemove_, this)\n      );\n    } else if (this.source_) {\n      keys.push(\n        listen(this.source_, VectorEventType.ADDFEATURE,\n          this.handleFeatureAdd_, this),\n        listen(this.source_, VectorEventType.REMOVEFEATURE,\n          this.handleFeatureRemove_, this)\n      );\n    }\n    features.forEach(this.forEachFeatureAdd_.bind(this));\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nSnap.prototype.shouldStopEvent = FALSE;\n\n\n/**\n * @param {module:ol~Pixel} pixel Pixel\n * @param {module:ol/coordinate~Coordinate} pixelCoordinate Coordinate\n * @param {module:ol/PluggableMap} map Map.\n * @return {module:ol/interaction/Snap~Result} Snap result\n */\nSnap.prototype.snapTo = function(pixel, pixelCoordinate, map) {\n\n  const lowerLeft = map.getCoordinateFromPixel(\n    [pixel[0] - this.pixelTolerance_, pixel[1] + this.pixelTolerance_]);\n  const upperRight = map.getCoordinateFromPixel(\n    [pixel[0] + this.pixelTolerance_, pixel[1] - this.pixelTolerance_]);\n  const box = boundingExtent([lowerLeft, upperRight]);\n\n  let segments = this.rBush_.getInExtent(box);\n\n  // If snapping on vertices only, don't consider circles\n  if (this.vertex_ && !this.edge_) {\n    segments = segments.filter(function(segment) {\n      return segment.feature.getGeometry().getType() !==\n          GeometryType.CIRCLE;\n    });\n  }\n\n  let snappedToVertex = false;\n  let snapped = false;\n  let vertex = null;\n  let vertexPixel = null;\n  let dist, pixel1, pixel2, squaredDist1, squaredDist2;\n  if (segments.length > 0) {\n    this.pixelCoordinate_ = pixelCoordinate;\n    segments.sort(this.sortByDistance_);\n    const closestSegment = segments[0].segment;\n    const isCircle = segments[0].feature.getGeometry().getType() ===\n        GeometryType.CIRCLE;\n    if (this.vertex_ && !this.edge_) {\n      pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n      pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n      squaredDist1 = squaredCoordinateDistance(pixel, pixel1);\n      squaredDist2 = squaredCoordinateDistance(pixel, pixel2);\n      dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n      snappedToVertex = dist <= this.pixelTolerance_;\n      if (snappedToVertex) {\n        snapped = true;\n        vertex = squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\n        vertexPixel = map.getPixelFromCoordinate(vertex);\n      }\n    } else if (this.edge_) {\n      if (isCircle) {\n        vertex = closestOnCircle(pixelCoordinate,\n          /** @type {module:ol/geom/Circle} */ (segments[0].feature.getGeometry()));\n      } else {\n        vertex = closestOnSegment(pixelCoordinate, closestSegment);\n      }\n      vertexPixel = map.getPixelFromCoordinate(vertex);\n      if (coordinateDistance(pixel, vertexPixel) <= this.pixelTolerance_) {\n        snapped = true;\n        if (this.vertex_ && !isCircle) {\n          pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n          pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n          squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n          squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n          dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n          snappedToVertex = dist <= this.pixelTolerance_;\n          if (snappedToVertex) {\n            vertex = squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\n            vertexPixel = map.getPixelFromCoordinate(vertex);\n          }\n        }\n      }\n    }\n    if (snapped) {\n      vertexPixel = [Math.round(vertexPixel[0]), Math.round(vertexPixel[1])];\n    }\n  }\n  return (\n    /** @type {module:ol/interaction/Snap~Result} */ ({\n      snapped: snapped,\n      vertex: vertex,\n      vertexPixel: vertexPixel\n    })\n  );\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature\n * @private\n */\nSnap.prototype.updateFeature_ = function(feature) {\n  this.removeFeature(feature, false);\n  this.addFeature(feature, false);\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature\n * @param {module:ol/geom/Circle} geometry Geometry.\n * @private\n */\nSnap.prototype.writeCircleGeometry_ = function(feature, geometry) {\n  const polygon = fromCircle(geometry);\n  const coordinates = polygon.getCoordinates()[0];\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const segment = coordinates.slice(i, i + 2);\n    const segmentData = /** @type {module:ol/interaction/Snap~SegmentData} */ ({\n      feature: feature,\n      segment: segment\n    });\n    this.rBush_.insert(boundingExtent(segment), segmentData);\n  }\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature\n * @param {module:ol/geom/GeometryCollection} geometry Geometry.\n * @private\n */\nSnap.prototype.writeGeometryCollectionGeometry_ = function(feature, geometry) {\n  const geometries = geometry.getGeometriesArray();\n  for (let i = 0; i < geometries.length; ++i) {\n    const segmentWriter = this.SEGMENT_WRITERS_[geometries[i].getType()];\n    if (segmentWriter) {\n      segmentWriter.call(this, feature, geometries[i]);\n    }\n  }\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature\n * @param {module:ol/geom/LineString} geometry Geometry.\n * @private\n */\nSnap.prototype.writeLineStringGeometry_ = function(feature, geometry) {\n  const coordinates = geometry.getCoordinates();\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const segment = coordinates.slice(i, i + 2);\n    const segmentData = /** @type {module:ol/interaction/Snap~SegmentData} */ ({\n      feature: feature,\n      segment: segment\n    });\n    this.rBush_.insert(boundingExtent(segment), segmentData);\n  }\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature\n * @param {module:ol/geom/MultiLineString} geometry Geometry.\n * @private\n */\nSnap.prototype.writeMultiLineStringGeometry_ = function(feature, geometry) {\n  const lines = geometry.getCoordinates();\n  for (let j = 0, jj = lines.length; j < jj; ++j) {\n    const coordinates = lines[j];\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n      const segmentData = /** @type {module:ol/interaction/Snap~SegmentData} */ ({\n        feature: feature,\n        segment: segment\n      });\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature\n * @param {module:ol/geom/MultiPoint} geometry Geometry.\n * @private\n */\nSnap.prototype.writeMultiPointGeometry_ = function(feature, geometry) {\n  const points = geometry.getCoordinates();\n  for (let i = 0, ii = points.length; i < ii; ++i) {\n    const coordinates = points[i];\n    const segmentData = /** @type {module:ol/interaction/Snap~SegmentData} */ ({\n      feature: feature,\n      segment: [coordinates, coordinates]\n    });\n    this.rBush_.insert(geometry.getExtent(), segmentData);\n  }\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature\n * @param {module:ol/geom/MultiPolygon} geometry Geometry.\n * @private\n */\nSnap.prototype.writeMultiPolygonGeometry_ = function(feature, geometry) {\n  const polygons = geometry.getCoordinates();\n  for (let k = 0, kk = polygons.length; k < kk; ++k) {\n    const rings = polygons[k];\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      const coordinates = rings[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        const segment = coordinates.slice(i, i + 2);\n        const segmentData = /** @type {module:ol/interaction/Snap~SegmentData} */ ({\n          feature: feature,\n          segment: segment\n        });\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature\n * @param {module:ol/geom/Point} geometry Geometry.\n * @private\n */\nSnap.prototype.writePointGeometry_ = function(feature, geometry) {\n  const coordinates = geometry.getCoordinates();\n  const segmentData = /** @type {module:ol/interaction/Snap~SegmentData} */ ({\n    feature: feature,\n    segment: [coordinates, coordinates]\n  });\n  this.rBush_.insert(geometry.getExtent(), segmentData);\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature\n * @param {module:ol/geom/Polygon} geometry Geometry.\n * @private\n */\nSnap.prototype.writePolygonGeometry_ = function(feature, geometry) {\n  const rings = geometry.getCoordinates();\n  for (let j = 0, jj = rings.length; j < jj; ++j) {\n    const coordinates = rings[j];\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n      const segmentData = /** @type {module:ol/interaction/Snap~SegmentData} */ ({\n        feature: feature,\n        segment: segment\n      });\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n};\n\n\n/**\n * Handle all pointer events events.\n * @param {module:ol/MapBrowserEvent} evt A move event.\n * @return {boolean} Pass the event to other interactions.\n * @this {module:ol/interaction/Snap}\n */\nexport function handleEvent(evt) {\n  const result = this.snapTo(evt.pixel, evt.coordinate, evt.map);\n  if (result.snapped) {\n    evt.coordinate = result.vertex.slice(0, 2);\n    evt.pixel = result.vertexPixel;\n  }\n  return handlePointerEvent.call(this, evt);\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} evt Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/Snap}\n */\nfunction handleUpEvent(evt) {\n  const featuresToUpdate = getValues(this.pendingFeatures_);\n  if (featuresToUpdate.length) {\n    featuresToUpdate.forEach(this.updateFeature_.bind(this));\n    this.pendingFeatures_ = {};\n  }\n  return false;\n}\n\n\n/**\n * Sort segments by distance, helper function\n * @param {module:ol/interaction/Snap~SegmentData} a The first segment data.\n * @param {module:ol/interaction/Snap~SegmentData} b The second segment data.\n * @return {number} The difference in distance.\n * @this {module:ol/interaction/Snap}\n */\nfunction sortByDistance(a, b) {\n  const deltaA = squaredDistanceToSegment(this.pixelCoordinate_, a.segment);\n  const deltaB = squaredDistanceToSegment(this.pixelCoordinate_, b.segment);\n  return deltaA - deltaB;\n}\n\nexport default Snap;\n","/**\n * @module ol/interaction/Translate\n */\nimport {inherits} from '../index.js';\nimport Collection from '../Collection.js';\nimport {getChangeEventType} from '../Object.js';\nimport {listen} from '../events.js';\nimport Event from '../events/Event.js';\nimport {TRUE} from '../functions.js';\nimport {includes} from '../array.js';\nimport PointerInteraction from '../interaction/Pointer.js';\nimport InteractionProperty from '../interaction/Property.js';\n\n\n/**\n * @enum {string}\n */\nconst TranslateEventType = {\n  /**\n   * Triggered upon feature translation start.\n   * @event TranslateEvent#translatestart\n   * @api\n   */\n  TRANSLATESTART: 'translatestart',\n  /**\n   * Triggered upon feature translation.\n   * @event TranslateEvent#translating\n   * @api\n   */\n  TRANSLATING: 'translating',\n  /**\n   * Triggered upon feature translation end.\n   * @event TranslateEvent#translateend\n   * @api\n   */\n  TRANSLATEEND: 'translateend'\n};\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/Collection.<module:ol/Feature>} [features] Only features contained in this collection will be able to be translated. If\n * not specified, all features on the map will be able to be translated.\n * @property {Array.<module:ol/layer/Layer>|function(module:ol/layer/Layer): boolean} [layers] A list of layers from which features should be\n * translated. Alternatively, a filter function can be provided. The\n * function will be called for each layer in the map and should return\n * `true` for layers that you want to be translatable. If the option is\n * absent, all visible layers will be considered translatable.\n * @property {number} [hitTolerance=0] Hit-detection tolerance. Pixels inside the radius around the given position\n * will be checked for features. This only works for the canvas renderer and\n * not for WebGL.\n */\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Translate~Translate} instances\n * are instances of this type.\n *\n * @constructor\n * @extends {module:ol/events/Event}\n * @param {module:ol/interaction/Translate~TranslateEventType} type Type.\n * @param {module:ol/Collection.<module:ol/Feature>} features The features translated.\n * @param {module:ol/coordinate~Coordinate} coordinate The event coordinate.\n */\nexport const TranslateEvent = function(type, features, coordinate) {\n\n  Event.call(this, type);\n\n  /**\n   * The features being translated.\n   * @type {module:ol/Collection.<module:ol/Feature>}\n   * @api\n   */\n  this.features = features;\n\n  /**\n   * The coordinate of the drag event.\n   * @const\n   * @type {module:ol/coordinate~Coordinate}\n   * @api\n   */\n  this.coordinate = coordinate;\n};\n\ninherits(TranslateEvent, Event);\n\n\n/**\n * @classdesc\n * Interaction for translating (moving) features.\n *\n * @constructor\n * @extends {module:ol/interaction/Pointer}\n * @fires module:ol/interaction/Translate~TranslateEvent\n * @param {module:ol/interaction/Translate~Options=} opt_options Options.\n * @api\n */\nconst Translate = function(opt_options) {\n  PointerInteraction.call(this, {\n    handleDownEvent: handleDownEvent,\n    handleDragEvent: handleDragEvent,\n    handleMoveEvent: handleMoveEvent,\n    handleUpEvent: handleUpEvent\n  });\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * The last position we translated to.\n   * @type {module:ol/coordinate~Coordinate}\n   * @private\n   */\n  this.lastCoordinate_ = null;\n\n\n  /**\n   * @type {module:ol/Collection.<module:ol/Feature>}\n   * @private\n   */\n  this.features_ = options.features !== undefined ? options.features : null;\n\n  /** @type {function(module:ol/layer/Layer): boolean} */\n  let layerFilter;\n  if (options.layers) {\n    if (typeof options.layers === 'function') {\n      layerFilter = options.layers;\n    } else {\n      const layers = options.layers;\n      layerFilter = function(layer) {\n        return includes(layers, layer);\n      };\n    }\n  } else {\n    layerFilter = TRUE;\n  }\n\n  /**\n   * @private\n   * @type {function(module:ol/layer/Layer): boolean}\n   */\n  this.layerFilter_ = layerFilter;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\n\n  /**\n   * @type {module:ol/Feature}\n   * @private\n   */\n  this.lastFeature_ = null;\n\n  listen(this,\n    getChangeEventType(InteractionProperty.ACTIVE),\n    this.handleActiveChanged_, this);\n\n};\n\ninherits(Translate, PointerInteraction);\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} event Event.\n * @return {boolean} Start drag sequence?\n * @this {module:ol/interaction/Translate}\n */\nfunction handleDownEvent(event) {\n  this.lastFeature_ = this.featuresAtPixel_(event.pixel, event.map);\n  if (!this.lastCoordinate_ && this.lastFeature_) {\n    this.lastCoordinate_ = event.coordinate;\n    handleMoveEvent.call(this, event);\n\n    const features = this.features_ || new Collection([this.lastFeature_]);\n\n    this.dispatchEvent(\n      new TranslateEvent(\n        TranslateEventType.TRANSLATESTART, features,\n        event.coordinate));\n    return true;\n  }\n  return false;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} event Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/Translate}\n */\nfunction handleUpEvent(event) {\n  if (this.lastCoordinate_) {\n    this.lastCoordinate_ = null;\n    handleMoveEvent.call(this, event);\n\n    const features = this.features_ || new Collection([this.lastFeature_]);\n\n    this.dispatchEvent(\n      new TranslateEvent(\n        TranslateEventType.TRANSLATEEND, features,\n        event.coordinate));\n    return true;\n  }\n  return false;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} event Event.\n * @this {module:ol/interaction/Translate}\n */\nfunction handleDragEvent(event) {\n  if (this.lastCoordinate_) {\n    const newCoordinate = event.coordinate;\n    const deltaX = newCoordinate[0] - this.lastCoordinate_[0];\n    const deltaY = newCoordinate[1] - this.lastCoordinate_[1];\n\n    const features = this.features_ || new Collection([this.lastFeature_]);\n\n    features.forEach(function(feature) {\n      const geom = feature.getGeometry();\n      geom.translate(deltaX, deltaY);\n      feature.setGeometry(geom);\n    });\n\n    this.lastCoordinate_ = newCoordinate;\n    this.dispatchEvent(\n      new TranslateEvent(\n        TranslateEventType.TRANSLATING, features,\n        newCoordinate));\n  }\n}\n\n\n/**\n * @param {module:ol/MapBrowserEvent} event Event.\n * @this {module:ol/interaction/Translate}\n */\nfunction handleMoveEvent(event) {\n  const elem = event.map.getViewport();\n\n  // Change the cursor to grab/grabbing if hovering any of the features managed\n  // by the interaction\n  if (this.featuresAtPixel_(event.pixel, event.map)) {\n    elem.classList.remove(this.lastCoordinate_ ? 'ol-grab' : 'ol-grabbing');\n    elem.classList.add(this.lastCoordinate_ ? 'ol-grabbing' : 'ol-grab');\n  } else {\n    elem.classList.remove('ol-grab', 'ol-grabbing');\n  }\n}\n\n\n/**\n * Tests to see if the given coordinates intersects any of our selected\n * features.\n * @param {module:ol~Pixel} pixel Pixel coordinate to test for intersection.\n * @param {module:ol/PluggableMap} map Map to test the intersection on.\n * @return {module:ol/Feature} Returns the feature found at the specified pixel\n * coordinates.\n * @private\n */\nTranslate.prototype.featuresAtPixel_ = function(pixel, map) {\n  return map.forEachFeatureAtPixel(pixel,\n    function(feature) {\n      if (!this.features_ || includes(this.features_.getArray(), feature)) {\n        return feature;\n      }\n    }.bind(this), {\n      layerFilter: this.layerFilter_,\n      hitTolerance: this.hitTolerance_\n    });\n};\n\n\n/**\n * Returns the Hit-detection tolerance.\n * @returns {number} Hit tolerance in pixels.\n * @api\n */\nTranslate.prototype.getHitTolerance = function() {\n  return this.hitTolerance_;\n};\n\n\n/**\n * Hit-detection tolerance. Pixels inside the radius around the given position\n * will be checked for features. This only works for the canvas renderer and\n * not for WebGL.\n * @param {number} hitTolerance Hit tolerance in pixels.\n * @api\n */\nTranslate.prototype.setHitTolerance = function(hitTolerance) {\n  this.hitTolerance_ = hitTolerance;\n};\n\n\n/**\n * @inheritDoc\n */\nTranslate.prototype.setMap = function(map) {\n  const oldMap = this.getMap();\n  PointerInteraction.prototype.setMap.call(this, map);\n  this.updateState_(oldMap);\n};\n\n\n/**\n * @private\n */\nTranslate.prototype.handleActiveChanged_ = function() {\n  this.updateState_(null);\n};\n\n\n/**\n * @param {module:ol/PluggableMap} oldMap Old map.\n * @private\n */\nTranslate.prototype.updateState_ = function(oldMap) {\n  let map = this.getMap();\n  const active = this.getActive();\n  if (!map || !active) {\n    map = map || oldMap;\n    if (map) {\n      const elem = map.getViewport();\n      elem.classList.remove('ol-grab', 'ol-grabbing');\n    }\n  }\n};\n\n\nexport default Translate;\n","/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n\n/**\n * Enable automatic reprojection of raster sources. Default is `true`.\n * TODO: decide if we want to expose this as a build flag or remove it\n * @type {boolean}\n */\nexport const ENABLE_RASTER_REPROJECTION = true;\n","/**\n * @module ol/ImageBase\n */\nimport {inherits} from './index.js';\nimport EventTarget from './events/EventTarget.js';\nimport EventType from './events/EventType.js';\n\n/**\n * @constructor\n * @abstract\n * @extends {module:ol/events/EventTarget}\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number|undefined} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {module:ol/ImageState} state State.\n */\nconst ImageBase = function(extent, resolution, pixelRatio, state) {\n\n  EventTarget.call(this);\n\n  /**\n   * @protected\n   * @type {module:ol/extent~Extent}\n   */\n  this.extent = extent;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.pixelRatio_ = pixelRatio;\n\n  /**\n   * @protected\n   * @type {number|undefined}\n   */\n  this.resolution = resolution;\n\n  /**\n   * @protected\n   * @type {module:ol/ImageState}\n   */\n  this.state = state;\n\n};\n\ninherits(ImageBase, EventTarget);\n\n\n/**\n * @protected\n */\nImageBase.prototype.changed = function() {\n  this.dispatchEvent(EventType.CHANGE);\n};\n\n\n/**\n * @return {module:ol/extent~Extent} Extent.\n */\nImageBase.prototype.getExtent = function() {\n  return this.extent;\n};\n\n\n/**\n * @abstract\n * @return {HTMLCanvasElement|Image|HTMLVideoElement} Image.\n */\nImageBase.prototype.getImage = function() {};\n\n\n/**\n * @return {number} PixelRatio.\n */\nImageBase.prototype.getPixelRatio = function() {\n  return this.pixelRatio_;\n};\n\n\n/**\n * @return {number} Resolution.\n */\nImageBase.prototype.getResolution = function() {\n  return /** @type {number} */ (this.resolution);\n};\n\n\n/**\n * @return {module:ol/ImageState} State.\n */\nImageBase.prototype.getState = function() {\n  return this.state;\n};\n\n\n/**\n * Load not yet loaded URI.\n * @abstract\n */\nImageBase.prototype.load = function() {};\n\nexport default ImageBase;\n","/**\n * @module ol/ImageCanvas\n */\nimport {inherits} from './index.js';\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\n\n\n/**\n * A function that is called to trigger asynchronous canvas drawing.  It is\n * called with a \"done\" callback that should be called when drawing is done.\n * If any error occurs during drawing, the \"done\" callback should be called with\n * that error.\n *\n * @typedef {function(function(Error))} Loader\n */\n\n\n/**\n * @constructor\n * @extends {module:ol/ImageBase}\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {HTMLCanvasElement} canvas Canvas.\n * @param {module:ol/ImageCanvas~Loader=} opt_loader Optional loader function to\n *     support asynchronous canvas drawing.\n */\nconst ImageCanvas = function(extent, resolution, pixelRatio, canvas, opt_loader) {\n\n  /**\n   * Optional canvas loader function.\n   * @type {?module:ol/ImageCanvas~Loader}\n   * @private\n   */\n  this.loader_ = opt_loader !== undefined ? opt_loader : null;\n\n  const state = opt_loader !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n  ImageBase.call(this, extent, resolution, pixelRatio, state);\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement}\n   */\n  this.canvas_ = canvas;\n\n  /**\n   * @private\n   * @type {Error}\n   */\n  this.error_ = null;\n\n};\n\ninherits(ImageCanvas, ImageBase);\n\n\n/**\n * Get any error associated with asynchronous rendering.\n * @return {Error} Any error that occurred during rendering.\n */\nImageCanvas.prototype.getError = function() {\n  return this.error_;\n};\n\n\n/**\n * Handle async drawing complete.\n * @param {Error} err Any error during drawing.\n * @private\n */\nImageCanvas.prototype.handleLoad_ = function(err) {\n  if (err) {\n    this.error_ = err;\n    this.state = ImageState.ERROR;\n  } else {\n    this.state = ImageState.LOADED;\n  }\n  this.changed();\n};\n\n\n/**\n * @inheritDoc\n */\nImageCanvas.prototype.load = function() {\n  if (this.state == ImageState.IDLE) {\n    this.state = ImageState.LOADING;\n    this.changed();\n    this.loader_(this.handleLoad_.bind(this));\n  }\n};\n\n\n/**\n * @return {HTMLCanvasElement} Canvas element.\n */\nImageCanvas.prototype.getImage = function() {\n  return this.canvas_;\n};\nexport default ImageCanvas;\n","/**\n * @module ol/render/Event\n */\nimport {inherits} from '../index.js';\nimport Event from '../events/Event.js';\n\n/**\n * @constructor\n * @extends {module:ol/events/Event}\n * @param {module:ol/render/EventType} type Type.\n * @param {module:ol/render/VectorContext=} opt_vectorContext Vector context.\n * @param {module:ol/PluggableMap~FrameState=} opt_frameState Frame state.\n * @param {?CanvasRenderingContext2D=} opt_context Context.\n * @param {?module:ol/webgl/Context=} opt_glContext WebGL Context.\n */\nconst RenderEvent = function(\n  type, opt_vectorContext, opt_frameState, opt_context,\n  opt_glContext) {\n\n  Event.call(this, type);\n\n  /**\n   * For canvas, this is an instance of {@link module:ol/render/canvas/Immediate}.\n   * @type {module:ol/render/VectorContext|undefined}\n   * @api\n   */\n  this.vectorContext = opt_vectorContext;\n\n  /**\n   * An object representing the current render frame state.\n   * @type {module:ol/PluggableMap~FrameState|undefined}\n   * @api\n   */\n  this.frameState = opt_frameState;\n\n  /**\n   * Canvas context. Only available when a Canvas renderer is used, null\n   * otherwise.\n   * @type {CanvasRenderingContext2D|null|undefined}\n   * @api\n   */\n  this.context = opt_context;\n\n  /**\n   * WebGL context. Only available when a WebGL renderer is used, null\n   * otherwise.\n   * @type {module:ol/webgl/Context|null|undefined}\n   * @api\n   */\n  this.glContext = opt_glContext;\n\n};\n\ninherits(RenderEvent, Event);\nexport default RenderEvent;\n","/**\n * @module ol/render/VectorContext\n */\n/**\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @constructor\n * @abstract\n * @struct\n * @api\n */\nconst VectorContext = function() {\n};\n\n\n/**\n * Render a geometry with a custom renderer.\n *\n * @param {module:ol/geom/SimpleGeometry} geometry Geometry.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n * @param {Function} renderer Renderer.\n */\nVectorContext.prototype.drawCustom = function(geometry, feature, renderer) {};\n\n\n/**\n * Render a geometry.\n *\n * @param {module:ol/geom/Geometry} geometry The geometry to render.\n */\nVectorContext.prototype.drawGeometry = function(geometry) {};\n\n\n/**\n * Set the rendering style.\n *\n * @param {module:ol/style/Style} style The rendering style.\n */\nVectorContext.prototype.setStyle = function(style) {};\n\n\n/**\n * @param {module:ol/geom/Circle} circleGeometry Circle geometry.\n * @param {module:ol/Feature} feature Feature.\n */\nVectorContext.prototype.drawCircle = function(circleGeometry, feature) {};\n\n\n/**\n * @param {module:ol/Feature} feature Feature.\n * @param {module:ol/style/Style} style Style.\n */\nVectorContext.prototype.drawFeature = function(feature, style) {};\n\n\n/**\n * @param {module:ol/geom/GeometryCollection} geometryCollectionGeometry Geometry\n *     collection.\n * @param {module:ol/Feature} feature Feature.\n */\nVectorContext.prototype.drawGeometryCollection = function(geometryCollectionGeometry, feature) {};\n\n\n/**\n * @param {module:ol/geom/LineString|module:ol/render/Feature} lineStringGeometry Line string geometry.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nVectorContext.prototype.drawLineString = function(lineStringGeometry, feature) {};\n\n\n/**\n * @param {module:ol/geom/MultiLineString|module:ol/render/Feature} multiLineStringGeometry MultiLineString geometry.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nVectorContext.prototype.drawMultiLineString = function(multiLineStringGeometry, feature) {};\n\n\n/**\n * @param {module:ol/geom/MultiPoint|module:ol/render/Feature} multiPointGeometry MultiPoint geometry.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nVectorContext.prototype.drawMultiPoint = function(multiPointGeometry, feature) {};\n\n\n/**\n * @param {module:ol/geom/MultiPolygon} multiPolygonGeometry MultiPolygon geometry.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nVectorContext.prototype.drawMultiPolygon = function(multiPolygonGeometry, feature) {};\n\n\n/**\n * @param {module:ol/geom/Point|module:ol/render/Feature} pointGeometry Point geometry.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nVectorContext.prototype.drawPoint = function(pointGeometry, feature) {};\n\n\n/**\n * @param {module:ol/geom/Polygon|module:ol/render/Feature} polygonGeometry Polygon geometry.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nVectorContext.prototype.drawPolygon = function(polygonGeometry, feature) {};\n\n\n/**\n * @param {module:ol/geom/Geometry|module:ol/render/Feature} geometry Geometry.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nVectorContext.prototype.drawText = function(geometry, feature) {};\n\n\n/**\n * @param {module:ol/style/Fill} fillStyle Fill style.\n * @param {module:ol/style/Stroke} strokeStyle Stroke style.\n */\nVectorContext.prototype.setFillStrokeStyle = function(fillStyle, strokeStyle) {};\n\n\n/**\n * @param {module:ol/style/Image} imageStyle Image style.\n * @param {module:ol/render/canvas~DeclutterGroup=} opt_declutterGroup Declutter.\n */\nVectorContext.prototype.setImageStyle = function(imageStyle, opt_declutterGroup) {};\n\n\n/**\n * @param {module:ol/style/Text} textStyle Text style.\n * @param {module:ol/render/canvas~DeclutterGroup=} opt_declutterGroup Declutter.\n */\nVectorContext.prototype.setTextStyle = function(textStyle, opt_declutterGroup) {};\nexport default VectorContext;\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport {inherits} from '../../index.js';\nimport {equals} from '../../array.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {intersects} from '../../extent.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {CANVAS_LINE_DASH} from '../../has.js';\nimport VectorContext from '../VectorContext.js';\nimport {defaultTextAlign, defaultFillStyle, defaultLineCap, defaultLineDash, defaultLineDashOffset, defaultLineJoin, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, defaultTextBaseline, defaultFont} from '../canvas.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n *\n * @constructor\n * @extends {module:ol/render/VectorContext}\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} pixelRatio Pixel ratio.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {module:ol/transform~Transform} transform Transform.\n * @param {number} viewRotation View rotation.\n * @struct\n */\nconst CanvasImmediateRenderer = function(context, pixelRatio, extent, transform, viewRotation) {\n  VectorContext.call(this);\n\n  /**\n   * @private\n   * @type {CanvasRenderingContext2D}\n   */\n  this.context_ = context;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.pixelRatio_ = pixelRatio;\n\n  /**\n   * @private\n   * @type {module:ol/extent~Extent}\n   */\n  this.extent_ = extent;\n\n  /**\n   * @private\n   * @type {module:ol/transform~Transform}\n   */\n  this.transform_ = transform;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.viewRotation_ = viewRotation;\n\n  /**\n   * @private\n   * @type {?module:ol/render/canvas~FillState}\n   */\n  this.contextFillState_ = null;\n\n  /**\n   * @private\n   * @type {?module:ol/render/canvas~StrokeState}\n   */\n  this.contextStrokeState_ = null;\n\n  /**\n   * @private\n   * @type {?module:ol/render/canvas~TextState}\n   */\n  this.contextTextState_ = null;\n\n  /**\n   * @private\n   * @type {?module:ol/render/canvas~FillState}\n   */\n  this.fillState_ = null;\n\n  /**\n   * @private\n   * @type {?module:ol/render/canvas~StrokeState}\n   */\n  this.strokeState_ = null;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement|HTMLVideoElement|Image}\n   */\n  this.image_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.imageAnchorX_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.imageAnchorY_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.imageHeight_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.imageOpacity_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.imageOriginX_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.imageOriginY_ = 0;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.imageRotateWithView_ = false;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.imageRotation_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.imageScale_ = 0;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.imageSnapToPixel_ = false;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.imageWidth_ = 0;\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.text_ = '';\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.textOffsetX_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.textOffsetY_ = 0;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.textRotateWithView_ = false;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.textRotation_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.textScale_ = 0;\n\n  /**\n   * @private\n   * @type {?module:ol/render/canvas~FillState}\n   */\n  this.textFillState_ = null;\n\n  /**\n   * @private\n   * @type {?module:ol/render/canvas~StrokeState}\n   */\n  this.textStrokeState_ = null;\n\n  /**\n   * @private\n   * @type {?module:ol/render/canvas~TextState}\n   */\n  this.textState_ = null;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.pixelCoordinates_ = [];\n\n  /**\n   * @private\n   * @type {module:ol/transform~Transform}\n   */\n  this.tmpLocalTransform_ = createTransform();\n\n};\n\ninherits(CanvasImmediateRenderer, VectorContext);\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @private\n */\nCanvasImmediateRenderer.prototype.drawImages_ = function(flatCoordinates, offset, end, stride) {\n  if (!this.image_) {\n    return;\n  }\n  const pixelCoordinates = transform2D(\n    flatCoordinates, offset, end, 2, this.transform_,\n    this.pixelCoordinates_);\n  const context = this.context_;\n  const localTransform = this.tmpLocalTransform_;\n  const alpha = context.globalAlpha;\n  if (this.imageOpacity_ != 1) {\n    context.globalAlpha = alpha * this.imageOpacity_;\n  }\n  let rotation = this.imageRotation_;\n  if (this.imageRotateWithView_) {\n    rotation += this.viewRotation_;\n  }\n  for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n    let x = pixelCoordinates[i] - this.imageAnchorX_;\n    let y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n    if (this.imageSnapToPixel_) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    if (rotation !== 0 || this.imageScale_ != 1) {\n      const centerX = x + this.imageAnchorX_;\n      const centerY = y + this.imageAnchorY_;\n      composeTransform(localTransform,\n        centerX, centerY,\n        this.imageScale_, this.imageScale_,\n        rotation,\n        -centerX, -centerY);\n      context.setTransform.apply(context, localTransform);\n    }\n    context.drawImage(this.image_, this.imageOriginX_, this.imageOriginY_,\n      this.imageWidth_, this.imageHeight_, x, y,\n      this.imageWidth_, this.imageHeight_);\n  }\n  if (rotation !== 0 || this.imageScale_ != 1) {\n    context.setTransform(1, 0, 0, 1, 0, 0);\n  }\n  if (this.imageOpacity_ != 1) {\n    context.globalAlpha = alpha;\n  }\n};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @private\n */\nCanvasImmediateRenderer.prototype.drawText_ = function(flatCoordinates, offset, end, stride) {\n  if (!this.textState_ || this.text_ === '') {\n    return;\n  }\n  if (this.textFillState_) {\n    this.setContextFillState_(this.textFillState_);\n  }\n  if (this.textStrokeState_) {\n    this.setContextStrokeState_(this.textStrokeState_);\n  }\n  this.setContextTextState_(this.textState_);\n  const pixelCoordinates = transform2D(\n    flatCoordinates, offset, end, stride, this.transform_,\n    this.pixelCoordinates_);\n  const context = this.context_;\n  let rotation = this.textRotation_;\n  if (this.textRotateWithView_) {\n    rotation += this.viewRotation_;\n  }\n  for (; offset < end; offset += stride) {\n    const x = pixelCoordinates[offset] + this.textOffsetX_;\n    const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n    if (rotation !== 0 || this.textScale_ != 1) {\n      const localTransform = composeTransform(this.tmpLocalTransform_,\n        x, y,\n        this.textScale_, this.textScale_,\n        rotation,\n        -x, -y);\n      context.setTransform.apply(context, localTransform);\n    }\n    if (this.textStrokeState_) {\n      context.strokeText(this.text_, x, y);\n    }\n    if (this.textFillState_) {\n      context.fillText(this.text_, x, y);\n    }\n  }\n  if (rotation !== 0 || this.textScale_ != 1) {\n    context.setTransform(1, 0, 0, 1, 0, 0);\n  }\n};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {boolean} close Close.\n * @private\n * @return {number} end End.\n */\nCanvasImmediateRenderer.prototype.moveToLineTo_ = function(flatCoordinates, offset, end, stride, close) {\n  const context = this.context_;\n  const pixelCoordinates = transform2D(\n    flatCoordinates, offset, end, stride, this.transform_,\n    this.pixelCoordinates_);\n  context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n  let length = pixelCoordinates.length;\n  if (close) {\n    length -= 2;\n  }\n  for (let i = 2; i < length; i += 2) {\n    context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n  }\n  if (close) {\n    context.closePath();\n  }\n  return end;\n};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @private\n * @return {number} End.\n */\nCanvasImmediateRenderer.prototype.drawRings_ = function(flatCoordinates, offset, ends, stride) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    offset = this.moveToLineTo_(flatCoordinates, offset, ends[i], stride, true);\n  }\n  return offset;\n};\n\n\n/**\n * Render a circle geometry into the canvas.  Rendering is immediate and uses\n * the current fill and stroke styles.\n *\n * @param {module:ol/geom/Circle} geometry Circle geometry.\n * @override\n * @api\n */\nCanvasImmediateRenderer.prototype.drawCircle = function(geometry) {\n  if (!intersects(this.extent_, geometry.getExtent())) {\n    return;\n  }\n  if (this.fillState_ || this.strokeState_) {\n    if (this.fillState_) {\n      this.setContextFillState_(this.fillState_);\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n    }\n    const pixelCoordinates = transformGeom2D(\n      geometry, this.transform_, this.pixelCoordinates_);\n    const dx = pixelCoordinates[2] - pixelCoordinates[0];\n    const dy = pixelCoordinates[3] - pixelCoordinates[1];\n    const radius = Math.sqrt(dx * dx + dy * dy);\n    const context = this.context_;\n    context.beginPath();\n    context.arc(\n      pixelCoordinates[0], pixelCoordinates[1], radius, 0, 2 * Math.PI);\n    if (this.fillState_) {\n      context.fill();\n    }\n    if (this.strokeState_) {\n      context.stroke();\n    }\n  }\n  if (this.text_ !== '') {\n    this.drawText_(geometry.getCenter(), 0, 2, 2);\n  }\n};\n\n\n/**\n * Set the rendering style.  Note that since this is an immediate rendering API,\n * any `zIndex` on the provided style will be ignored.\n *\n * @param {module:ol/style/Style} style The rendering style.\n * @override\n * @api\n */\nCanvasImmediateRenderer.prototype.setStyle = function(style) {\n  this.setFillStrokeStyle(style.getFill(), style.getStroke());\n  this.setImageStyle(style.getImage());\n  this.setTextStyle(style.getText());\n};\n\n\n/**\n * Render a geometry into the canvas.  Call\n * {@link module:ol/render/canvas/Immediate#setStyle} first to set the rendering style.\n *\n * @param {module:ol/geom/Geometry|module:ol/render/Feature} geometry The geometry to render.\n * @override\n * @api\n */\nCanvasImmediateRenderer.prototype.drawGeometry = function(geometry) {\n  const type = geometry.getType();\n  switch (type) {\n    case GeometryType.POINT:\n      this.drawPoint(/** @type {module:ol/geom/Point} */ (geometry));\n      break;\n    case GeometryType.LINE_STRING:\n      this.drawLineString(/** @type {module:ol/geom/LineString} */ (geometry));\n      break;\n    case GeometryType.POLYGON:\n      this.drawPolygon(/** @type {module:ol/geom/Polygon} */ (geometry));\n      break;\n    case GeometryType.MULTI_POINT:\n      this.drawMultiPoint(/** @type {module:ol/geom/MultiPoint} */ (geometry));\n      break;\n    case GeometryType.MULTI_LINE_STRING:\n      this.drawMultiLineString(/** @type {module:ol/geom/MultiLineString} */ (geometry));\n      break;\n    case GeometryType.MULTI_POLYGON:\n      this.drawMultiPolygon(/** @type {module:ol/geom/MultiPolygon} */ (geometry));\n      break;\n    case GeometryType.GEOMETRY_COLLECTION:\n      this.drawGeometryCollection(/** @type {module:ol/geom/GeometryCollection} */ (geometry));\n      break;\n    case GeometryType.CIRCLE:\n      this.drawCircle(/** @type {module:ol/geom/Circle} */ (geometry));\n      break;\n    default:\n  }\n};\n\n\n/**\n * Render a feature into the canvas.  Note that any `zIndex` on the provided\n * style will be ignored - features are rendered immediately in the order that\n * this method is called.  If you need `zIndex` support, you should be using an\n * {@link module:ol/layer/Vector~VectorLayer} instead.\n *\n * @param {module:ol/Feature} feature Feature.\n * @param {module:ol/style/Style} style Style.\n * @override\n * @api\n */\nCanvasImmediateRenderer.prototype.drawFeature = function(feature, style) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\n    return;\n  }\n  this.setStyle(style);\n  this.drawGeometry(geometry);\n};\n\n\n/**\n * Render a GeometryCollection to the canvas.  Rendering is immediate and\n * uses the current styles appropriate for each geometry in the collection.\n *\n * @param {module:ol/geom/GeometryCollection} geometry Geometry collection.\n * @override\n */\nCanvasImmediateRenderer.prototype.drawGeometryCollection = function(geometry) {\n  const geometries = geometry.getGeometriesArray();\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    this.drawGeometry(geometries[i]);\n  }\n};\n\n\n/**\n * Render a Point geometry into the canvas.  Rendering is immediate and uses\n * the current style.\n *\n * @param {module:ol/geom/Point|module:ol/render/Feature} geometry Point geometry.\n * @override\n */\nCanvasImmediateRenderer.prototype.drawPoint = function(geometry) {\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  if (this.image_) {\n    this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n  }\n  if (this.text_ !== '') {\n    this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n  }\n};\n\n\n/**\n * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n * uses the current style.\n *\n * @param {module:ol/geom/MultiPoint|module:ol/render/Feature} geometry MultiPoint geometry.\n * @override\n */\nCanvasImmediateRenderer.prototype.drawMultiPoint = function(geometry) {\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  if (this.image_) {\n    this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n  }\n  if (this.text_ !== '') {\n    this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n  }\n};\n\n\n/**\n * Render a LineString into the canvas.  Rendering is immediate and uses\n * the current style.\n *\n * @param {module:ol/geom/LineString|module:ol/render/Feature} geometry LineString geometry.\n * @override\n */\nCanvasImmediateRenderer.prototype.drawLineString = function(geometry) {\n  if (!intersects(this.extent_, geometry.getExtent())) {\n    return;\n  }\n  if (this.strokeState_) {\n    this.setContextStrokeState_(this.strokeState_);\n    const context = this.context_;\n    const flatCoordinates = geometry.getFlatCoordinates();\n    context.beginPath();\n    this.moveToLineTo_(flatCoordinates, 0, flatCoordinates.length,\n      geometry.getStride(), false);\n    context.stroke();\n  }\n  if (this.text_ !== '') {\n    const flatMidpoint = geometry.getFlatMidpoint();\n    this.drawText_(flatMidpoint, 0, 2, 2);\n  }\n};\n\n\n/**\n * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n * and uses the current style.\n *\n * @param {module:ol/geom/MultiLineString|module:ol/render/Feature} geometry MultiLineString geometry.\n * @override\n */\nCanvasImmediateRenderer.prototype.drawMultiLineString = function(geometry) {\n  const geometryExtent = geometry.getExtent();\n  if (!intersects(this.extent_, geometryExtent)) {\n    return;\n  }\n  if (this.strokeState_) {\n    this.setContextStrokeState_(this.strokeState_);\n    const context = this.context_;\n    const flatCoordinates = geometry.getFlatCoordinates();\n    let offset = 0;\n    const ends = geometry.getEnds();\n    const stride = geometry.getStride();\n    context.beginPath();\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(flatCoordinates, offset, ends[i], stride, false);\n    }\n    context.stroke();\n  }\n  if (this.text_ !== '') {\n    const flatMidpoints = geometry.getFlatMidpoints();\n    this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n  }\n};\n\n\n/**\n * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n * the current style.\n *\n * @param {module:ol/geom/Polygon|module:ol/render/Feature} geometry Polygon geometry.\n * @override\n */\nCanvasImmediateRenderer.prototype.drawPolygon = function(geometry) {\n  if (!intersects(this.extent_, geometry.getExtent())) {\n    return;\n  }\n  if (this.strokeState_ || this.fillState_) {\n    if (this.fillState_) {\n      this.setContextFillState_(this.fillState_);\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n    }\n    const context = this.context_;\n    context.beginPath();\n    this.drawRings_(geometry.getOrientedFlatCoordinates(),\n      0, geometry.getEnds(), geometry.getStride());\n    if (this.fillState_) {\n      context.fill();\n    }\n    if (this.strokeState_) {\n      context.stroke();\n    }\n  }\n  if (this.text_ !== '') {\n    const flatInteriorPoint = geometry.getFlatInteriorPoint();\n    this.drawText_(flatInteriorPoint, 0, 2, 2);\n  }\n};\n\n\n/**\n * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n * uses the current style.\n * @param {module:ol/geom/MultiPolygon} geometry MultiPolygon geometry.\n * @override\n */\nCanvasImmediateRenderer.prototype.drawMultiPolygon = function(geometry) {\n  if (!intersects(this.extent_, geometry.getExtent())) {\n    return;\n  }\n  if (this.strokeState_ || this.fillState_) {\n    if (this.fillState_) {\n      this.setContextFillState_(this.fillState_);\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n    }\n    const context = this.context_;\n    const flatCoordinates = geometry.getOrientedFlatCoordinates();\n    let offset = 0;\n    const endss = geometry.getEndss();\n    const stride = geometry.getStride();\n    context.beginPath();\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      const ends = endss[i];\n      offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n    }\n    if (this.fillState_) {\n      context.fill();\n    }\n    if (this.strokeState_) {\n      context.stroke();\n    }\n  }\n  if (this.text_ !== '') {\n    const flatInteriorPoints = geometry.getFlatInteriorPoints();\n    this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n  }\n};\n\n\n/**\n * @param {module:ol/render/canvas~FillState} fillState Fill state.\n * @private\n */\nCanvasImmediateRenderer.prototype.setContextFillState_ = function(fillState) {\n  const context = this.context_;\n  const contextFillState = this.contextFillState_;\n  if (!contextFillState) {\n    context.fillStyle = fillState.fillStyle;\n    this.contextFillState_ = {\n      fillStyle: fillState.fillStyle\n    };\n  } else {\n    if (contextFillState.fillStyle != fillState.fillStyle) {\n      contextFillState.fillStyle = context.fillStyle = fillState.fillStyle;\n    }\n  }\n};\n\n\n/**\n * @param {module:ol/render/canvas~StrokeState} strokeState Stroke state.\n * @private\n */\nCanvasImmediateRenderer.prototype.setContextStrokeState_ = function(strokeState) {\n  const context = this.context_;\n  const contextStrokeState = this.contextStrokeState_;\n  if (!contextStrokeState) {\n    context.lineCap = strokeState.lineCap;\n    if (CANVAS_LINE_DASH) {\n      context.setLineDash(strokeState.lineDash);\n      context.lineDashOffset = strokeState.lineDashOffset;\n    }\n    context.lineJoin = strokeState.lineJoin;\n    context.lineWidth = strokeState.lineWidth;\n    context.miterLimit = strokeState.miterLimit;\n    context.strokeStyle = strokeState.strokeStyle;\n    this.contextStrokeState_ = {\n      lineCap: strokeState.lineCap,\n      lineDash: strokeState.lineDash,\n      lineDashOffset: strokeState.lineDashOffset,\n      lineJoin: strokeState.lineJoin,\n      lineWidth: strokeState.lineWidth,\n      miterLimit: strokeState.miterLimit,\n      strokeStyle: strokeState.strokeStyle\n    };\n  } else {\n    if (contextStrokeState.lineCap != strokeState.lineCap) {\n      contextStrokeState.lineCap = context.lineCap = strokeState.lineCap;\n    }\n    if (CANVAS_LINE_DASH) {\n      if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n        context.setLineDash(contextStrokeState.lineDash = strokeState.lineDash);\n      }\n      if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n        contextStrokeState.lineDashOffset = context.lineDashOffset =\n            strokeState.lineDashOffset;\n      }\n    }\n    if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n      contextStrokeState.lineJoin = context.lineJoin = strokeState.lineJoin;\n    }\n    if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n      contextStrokeState.lineWidth = context.lineWidth = strokeState.lineWidth;\n    }\n    if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n      contextStrokeState.miterLimit = context.miterLimit =\n          strokeState.miterLimit;\n    }\n    if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n      contextStrokeState.strokeStyle = context.strokeStyle =\n          strokeState.strokeStyle;\n    }\n  }\n};\n\n\n/**\n * @param {module:ol/render/canvas~TextState} textState Text state.\n * @private\n */\nCanvasImmediateRenderer.prototype.setContextTextState_ = function(textState) {\n  const context = this.context_;\n  const contextTextState = this.contextTextState_;\n  const textAlign = textState.textAlign ?\n    textState.textAlign : defaultTextAlign;\n  if (!contextTextState) {\n    context.font = textState.font;\n    context.textAlign = textAlign;\n    context.textBaseline = textState.textBaseline;\n    this.contextTextState_ = {\n      font: textState.font,\n      textAlign: textAlign,\n      textBaseline: textState.textBaseline\n    };\n  } else {\n    if (contextTextState.font != textState.font) {\n      contextTextState.font = context.font = textState.font;\n    }\n    if (contextTextState.textAlign != textAlign) {\n      contextTextState.textAlign = context.textAlign = textAlign;\n    }\n    if (contextTextState.textBaseline != textState.textBaseline) {\n      contextTextState.textBaseline = context.textBaseline =\n          textState.textBaseline;\n    }\n  }\n};\n\n\n/**\n * Set the fill and stroke style for subsequent draw operations.  To clear\n * either fill or stroke styles, pass null for the appropriate parameter.\n *\n * @param {module:ol/style/Fill} fillStyle Fill style.\n * @param {module:ol/style/Stroke} strokeStyle Stroke style.\n * @override\n */\nCanvasImmediateRenderer.prototype.setFillStrokeStyle = function(fillStyle, strokeStyle) {\n  if (!fillStyle) {\n    this.fillState_ = null;\n  } else {\n    const fillStyleColor = fillStyle.getColor();\n    this.fillState_ = {\n      fillStyle: asColorLike(fillStyleColor ?\n        fillStyleColor : defaultFillStyle)\n    };\n  }\n  if (!strokeStyle) {\n    this.strokeState_ = null;\n  } else {\n    const strokeStyleColor = strokeStyle.getColor();\n    const strokeStyleLineCap = strokeStyle.getLineCap();\n    const strokeStyleLineDash = strokeStyle.getLineDash();\n    const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n    const strokeStyleLineJoin = strokeStyle.getLineJoin();\n    const strokeStyleWidth = strokeStyle.getWidth();\n    const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n    this.strokeState_ = {\n      lineCap: strokeStyleLineCap !== undefined ?\n        strokeStyleLineCap : defaultLineCap,\n      lineDash: strokeStyleLineDash ?\n        strokeStyleLineDash : defaultLineDash,\n      lineDashOffset: strokeStyleLineDashOffset ?\n        strokeStyleLineDashOffset : defaultLineDashOffset,\n      lineJoin: strokeStyleLineJoin !== undefined ?\n        strokeStyleLineJoin : defaultLineJoin,\n      lineWidth: this.pixelRatio_ * (strokeStyleWidth !== undefined ?\n        strokeStyleWidth : defaultLineWidth),\n      miterLimit: strokeStyleMiterLimit !== undefined ?\n        strokeStyleMiterLimit : defaultMiterLimit,\n      strokeStyle: asColorLike(strokeStyleColor ?\n        strokeStyleColor : defaultStrokeStyle)\n    };\n  }\n};\n\n\n/**\n * Set the image style for subsequent draw operations.  Pass null to remove\n * the image style.\n *\n * @param {module:ol/style/Image} imageStyle Image style.\n * @override\n */\nCanvasImmediateRenderer.prototype.setImageStyle = function(imageStyle) {\n  if (!imageStyle) {\n    this.image_ = null;\n  } else {\n    const imageAnchor = imageStyle.getAnchor();\n    // FIXME pixel ratio\n    const imageImage = imageStyle.getImage(1);\n    const imageOrigin = imageStyle.getOrigin();\n    const imageSize = imageStyle.getSize();\n    this.imageAnchorX_ = imageAnchor[0];\n    this.imageAnchorY_ = imageAnchor[1];\n    this.imageHeight_ = imageSize[1];\n    this.image_ = imageImage;\n    this.imageOpacity_ = imageStyle.getOpacity();\n    this.imageOriginX_ = imageOrigin[0];\n    this.imageOriginY_ = imageOrigin[1];\n    this.imageRotateWithView_ = imageStyle.getRotateWithView();\n    this.imageRotation_ = imageStyle.getRotation();\n    this.imageScale_ = imageStyle.getScale() * this.pixelRatio_;\n    this.imageSnapToPixel_ = imageStyle.getSnapToPixel();\n    this.imageWidth_ = imageSize[0];\n  }\n};\n\n\n/**\n * Set the text style for subsequent draw operations.  Pass null to\n * remove the text style.\n *\n * @param {module:ol/style/Text} textStyle Text style.\n * @override\n */\nCanvasImmediateRenderer.prototype.setTextStyle = function(textStyle) {\n  if (!textStyle) {\n    this.text_ = '';\n  } else {\n    const textFillStyle = textStyle.getFill();\n    if (!textFillStyle) {\n      this.textFillState_ = null;\n    } else {\n      const textFillStyleColor = textFillStyle.getColor();\n      this.textFillState_ = {\n        fillStyle: asColorLike(textFillStyleColor ?\n          textFillStyleColor : defaultFillStyle)\n      };\n    }\n    const textStrokeStyle = textStyle.getStroke();\n    if (!textStrokeStyle) {\n      this.textStrokeState_ = null;\n    } else {\n      const textStrokeStyleColor = textStrokeStyle.getColor();\n      const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n      const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n      const textStrokeStyleLineDashOffset = textStrokeStyle.getLineDashOffset();\n      const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n      const textStrokeStyleWidth = textStrokeStyle.getWidth();\n      const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n      this.textStrokeState_ = {\n        lineCap: textStrokeStyleLineCap !== undefined ?\n          textStrokeStyleLineCap : defaultLineCap,\n        lineDash: textStrokeStyleLineDash ?\n          textStrokeStyleLineDash : defaultLineDash,\n        lineDashOffset: textStrokeStyleLineDashOffset ?\n          textStrokeStyleLineDashOffset : defaultLineDashOffset,\n        lineJoin: textStrokeStyleLineJoin !== undefined ?\n          textStrokeStyleLineJoin : defaultLineJoin,\n        lineWidth: textStrokeStyleWidth !== undefined ?\n          textStrokeStyleWidth : defaultLineWidth,\n        miterLimit: textStrokeStyleMiterLimit !== undefined ?\n          textStrokeStyleMiterLimit : defaultMiterLimit,\n        strokeStyle: asColorLike(textStrokeStyleColor ?\n          textStrokeStyleColor : defaultStrokeStyle)\n      };\n    }\n    const textFont = textStyle.getFont();\n    const textOffsetX = textStyle.getOffsetX();\n    const textOffsetY = textStyle.getOffsetY();\n    const textRotateWithView = textStyle.getRotateWithView();\n    const textRotation = textStyle.getRotation();\n    const textScale = textStyle.getScale();\n    const textText = textStyle.getText();\n    const textTextAlign = textStyle.getTextAlign();\n    const textTextBaseline = textStyle.getTextBaseline();\n    this.textState_ = {\n      font: textFont !== undefined ?\n        textFont : defaultFont,\n      textAlign: textTextAlign !== undefined ?\n        textTextAlign : defaultTextAlign,\n      textBaseline: textTextBaseline !== undefined ?\n        textTextBaseline : defaultTextBaseline\n    };\n    this.text_ = textText !== undefined ? textText : '';\n    this.textOffsetX_ =\n        textOffsetX !== undefined ? (this.pixelRatio_ * textOffsetX) : 0;\n    this.textOffsetY_ =\n        textOffsetY !== undefined ? (this.pixelRatio_ * textOffsetY) : 0;\n    this.textRotateWithView_ = textRotateWithView !== undefined ? textRotateWithView : false;\n    this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n    this.textScale_ = this.pixelRatio_ * (textScale !== undefined ?\n      textScale : 1);\n  }\n};\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * Singleton class. Available through {@link module:ol/style/IconImageCache~shared}.\n * @constructor\n */\nconst IconImageCache = function() {\n\n  /**\n   * @type {!Object.<string, module:ol/style/IconImage>}\n   * @private\n   */\n  this.cache_ = {};\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.cacheSize_ = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.maxCacheSize_ = 32;\n};\n\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {module:ol/color~Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  const colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\n\n/**\n * FIXME empty description for jsdoc\n */\nIconImageCache.prototype.clear = function() {\n  this.cache_ = {};\n  this.cacheSize_ = 0;\n};\n\n\n/**\n * FIXME empty description for jsdoc\n */\nIconImageCache.prototype.expire = function() {\n  if (this.cacheSize_ > this.maxCacheSize_) {\n    let i = 0;\n    for (const key in this.cache_) {\n      const iconImage = this.cache_[key];\n      if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n        delete this.cache_[key];\n        --this.cacheSize_;\n      }\n    }\n  }\n};\n\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {module:ol/color~Color} color Color.\n * @return {module:ol/style/IconImage} Icon image.\n */\nIconImageCache.prototype.get = function(src, crossOrigin, color) {\n  const key = getKey(src, crossOrigin, color);\n  return key in this.cache_ ? this.cache_[key] : null;\n};\n\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {module:ol/color~Color} color Color.\n * @param {module:ol/style/IconImage} iconImage Icon image.\n */\nIconImageCache.prototype.set = function(src, crossOrigin, color, iconImage) {\n  const key = getKey(src, crossOrigin, color);\n  this.cache_[key] = iconImage;\n  ++this.cacheSize_;\n};\n\n\n/**\n * Set the cache size of the icon cache. Default is `32`. Change this value when\n * your map uses more than 32 different icon images and you are not caching icon\n * styles on the application level.\n * @param {number} maxCacheSize Cache max size.\n * @api\n */\nIconImageCache.prototype.setSize = function(maxCacheSize) {\n  this.maxCacheSize_ = maxCacheSize;\n  this.expire();\n};\nexport default IconImageCache;\n\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/renderer/Map\n */\nimport {getUid, inherits} from '../index.js';\nimport Disposable from '../Disposable.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getWidth} from '../extent.js';\nimport {TRUE, UNDEFINED} from '../functions.js';\nimport {visibleAtResolution} from '../layer/Layer.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {compose as composeTransform, invert as invertTransform, setFromArray as transformSetFromArray} from '../transform.js';\n\n\n/**\n * @constructor\n * @abstract\n * @extends {module:ol/Disposable}\n * @param {module:ol/PluggableMap} map Map.\n * @struct\n */\nconst MapRenderer = function(map) {\n  Disposable.call(this);\n\n  /**\n   * @private\n   * @type {module:ol/PluggableMap}\n   */\n  this.map_ = map;\n\n  /**\n   * @private\n   * @type {!Object.<string, module:ol/renderer/Layer>}\n   */\n  this.layerRenderers_ = {};\n\n  /**\n   * @private\n   * @type {Object.<string, module:ol/events~EventsKey>}\n   */\n  this.layerRendererListeners_ = {};\n\n  /**\n   * @private\n   * @type {Array.<module:ol/renderer/Layer>}\n   */\n  this.layerRendererConstructors_ = [];\n\n};\n\ninherits(MapRenderer, Disposable);\n\n\n/**\n * Register layer renderer constructors.\n * @param {Array.<module:ol/renderer/Layer>} constructors Layer renderers.\n */\nMapRenderer.prototype.registerLayerRenderers = function(constructors) {\n  this.layerRendererConstructors_.push.apply(this.layerRendererConstructors_, constructors);\n};\n\n\n/**\n * Get the registered layer renderer constructors.\n * @return {Array.<module:ol/renderer/Layer>} Registered layer renderers.\n */\nMapRenderer.prototype.getLayerRendererConstructors = function() {\n  return this.layerRendererConstructors_;\n};\n\n\n/**\n * @param {module:ol/PluggableMap~FrameState} frameState FrameState.\n * @protected\n */\nMapRenderer.prototype.calculateMatrices2D = function(frameState) {\n  const viewState = frameState.viewState;\n  const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n  const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n  composeTransform(coordinateToPixelTransform,\n    frameState.size[0] / 2, frameState.size[1] / 2,\n    1 / viewState.resolution, -1 / viewState.resolution,\n    -viewState.rotation,\n    -viewState.center[0], -viewState.center[1]);\n\n  invertTransform(\n    transformSetFromArray(pixelToCoordinateTransform, coordinateToPixelTransform));\n};\n\n\n/**\n * Removes all layer renderers.\n */\nMapRenderer.prototype.removeLayerRenderers = function() {\n  for (const key in this.layerRenderers_) {\n    this.removeLayerRendererByKey_(key).dispose();\n  }\n};\n\n\n/**\n * @param {module:ol/PluggableMap} map Map.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {module:ol/PluggableMap~FrameState} frameState FrameState.\n * @param {number} hitTolerance Hit tolerance in pixels.\n * @param {function(this: S, (module:ol/Feature|module:ol/render/Feature),\n *     module:ol/layer/Layer): T} callback Feature callback.\n * @param {S} thisArg Value to use as `this` when executing `callback`.\n * @param {function(this: U, module:ol/layer/Layer): boolean} layerFilter Layer filter\n *     function, only layers which are visible and for which this function\n *     returns `true` will be tested for features.  By default, all visible\n *     layers will be tested.\n * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n * @return {T|undefined} Callback result.\n * @template S,T,U\n */\nMapRenderer.prototype.forEachFeatureAtCoordinate = function(coordinate, frameState, hitTolerance, callback, thisArg,\n  layerFilter, thisArg2) {\n  let result;\n  const viewState = frameState.viewState;\n  const viewResolution = viewState.resolution;\n\n  /**\n   * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n   * @param {module:ol/layer/Layer} layer Layer.\n   * @return {?} Callback result.\n   */\n  function forEachFeatureAtCoordinate(feature, layer) {\n    const key = getUid(feature).toString();\n    const managed = frameState.layerStates[getUid(layer)].managed;\n    if (!(key in frameState.skippedFeatureUids && !managed)) {\n      return callback.call(thisArg, feature, managed ? layer : null);\n    }\n  }\n\n  const projection = viewState.projection;\n\n  let translatedCoordinate = coordinate;\n  if (projection.canWrapX()) {\n    const projectionExtent = projection.getExtent();\n    const worldWidth = getWidth(projectionExtent);\n    const x = coordinate[0];\n    if (x < projectionExtent[0] || x > projectionExtent[2]) {\n      const worldsAway = Math.ceil((projectionExtent[0] - x) / worldWidth);\n      translatedCoordinate = [x + worldWidth * worldsAway, coordinate[1]];\n    }\n  }\n\n  const layerStates = frameState.layerStatesArray;\n  const numLayers = layerStates.length;\n  let i;\n  for (i = numLayers - 1; i >= 0; --i) {\n    const layerState = layerStates[i];\n    const layer = layerState.layer;\n    if (visibleAtResolution(layerState, viewResolution) && layerFilter.call(thisArg2, layer)) {\n      const layerRenderer = this.getLayerRenderer(layer);\n      if (layer.getSource()) {\n        result = layerRenderer.forEachFeatureAtCoordinate(\n          layer.getSource().getWrapX() ? translatedCoordinate : coordinate,\n          frameState, hitTolerance, forEachFeatureAtCoordinate, thisArg);\n      }\n      if (result) {\n        return result;\n      }\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @abstract\n * @param {module:ol~Pixel} pixel Pixel.\n * @param {module:ol/PluggableMap~FrameState} frameState FrameState.\n * @param {function(this: S, module:ol/layer/Layer, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n *     callback.\n * @param {S} thisArg Value to use as `this` when executing `callback`.\n * @param {function(this: U, module:ol/layer/Layer): boolean} layerFilter Layer filter\n *     function, only layers which are visible and for which this function\n *     returns `true` will be tested for features.  By default, all visible\n *     layers will be tested.\n * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n * @return {T|undefined} Callback result.\n * @template S,T,U\n */\nMapRenderer.prototype.forEachLayerAtPixel = function(pixel, frameState, callback, thisArg,\n  layerFilter, thisArg2) {};\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {module:ol/PluggableMap~FrameState} frameState FrameState.\n * @param {number} hitTolerance Hit tolerance in pixels.\n * @param {function(this: U, module:ol/layer/Layer): boolean} layerFilter Layer filter\n *     function, only layers which are visible and for which this function\n *     returns `true` will be tested for features.  By default, all visible\n *     layers will be tested.\n * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n * @return {boolean} Is there a feature at the given coordinate?\n * @template U\n */\nMapRenderer.prototype.hasFeatureAtCoordinate = function(coordinate, frameState, hitTolerance, layerFilter, thisArg) {\n  const hasFeature = this.forEachFeatureAtCoordinate(\n    coordinate, frameState, hitTolerance, TRUE, this, layerFilter, thisArg);\n\n  return hasFeature !== undefined;\n};\n\n\n/**\n * @param {module:ol/layer/Layer} layer Layer.\n * @protected\n * @return {module:ol/renderer/Layer} Layer renderer.\n */\nMapRenderer.prototype.getLayerRenderer = function(layer) {\n  const layerKey = getUid(layer).toString();\n  if (layerKey in this.layerRenderers_) {\n    return this.layerRenderers_[layerKey];\n  } else {\n    let renderer;\n    for (let i = 0, ii = this.layerRendererConstructors_.length; i < ii; ++i) {\n      const candidate = this.layerRendererConstructors_[i];\n      if (candidate['handles'](layer)) {\n        renderer = candidate['create'](this, layer);\n        break;\n      }\n    }\n    if (renderer) {\n      this.layerRenderers_[layerKey] = renderer;\n      this.layerRendererListeners_[layerKey] = listen(renderer,\n        EventType.CHANGE, this.handleLayerRendererChange_, this);\n    } else {\n      throw new Error('Unable to create renderer for layer: ' + layer.getType());\n    }\n    return renderer;\n  }\n};\n\n\n/**\n * @param {string} layerKey Layer key.\n * @protected\n * @return {module:ol/renderer/Layer} Layer renderer.\n */\nMapRenderer.prototype.getLayerRendererByKey = function(layerKey) {\n  return this.layerRenderers_[layerKey];\n};\n\n\n/**\n * @protected\n * @return {Object.<string, module:ol/renderer/Layer>} Layer renderers.\n */\nMapRenderer.prototype.getLayerRenderers = function() {\n  return this.layerRenderers_;\n};\n\n\n/**\n * @return {module:ol/PluggableMap} Map.\n */\nMapRenderer.prototype.getMap = function() {\n  return this.map_;\n};\n\n\n/**\n * Handle changes in a layer renderer.\n * @private\n */\nMapRenderer.prototype.handleLayerRendererChange_ = function() {\n  this.map_.render();\n};\n\n\n/**\n * @param {string} layerKey Layer key.\n * @return {module:ol/renderer/Layer} Layer renderer.\n * @private\n */\nMapRenderer.prototype.removeLayerRendererByKey_ = function(layerKey) {\n  const layerRenderer = this.layerRenderers_[layerKey];\n  delete this.layerRenderers_[layerKey];\n\n  unlistenByKey(this.layerRendererListeners_[layerKey]);\n  delete this.layerRendererListeners_[layerKey];\n\n  return layerRenderer;\n};\n\n\n/**\n * Render.\n * @param {?module:ol/PluggableMap~FrameState} frameState Frame state.\n */\nMapRenderer.prototype.renderFrame = UNDEFINED;\n\n\n/**\n * @param {module:ol/PluggableMap} map Map.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @private\n */\nMapRenderer.prototype.removeUnusedLayerRenderers_ = function(map, frameState) {\n  for (const layerKey in this.layerRenderers_) {\n    if (!frameState || !(layerKey in frameState.layerStates)) {\n      this.removeLayerRendererByKey_(layerKey).dispose();\n    }\n  }\n};\n\n\n/**\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @protected\n */\nMapRenderer.prototype.scheduleExpireIconCache = function(frameState) {\n  frameState.postRenderFunctions.push(/** @type {module:ol/PluggableMap~PostRenderFunction} */ (expireIconCache));\n};\n\n\n/**\n * @param {!module:ol/PluggableMap~FrameState} frameState Frame state.\n * @protected\n */\nMapRenderer.prototype.scheduleRemoveUnusedLayerRenderers = function(frameState) {\n  for (const layerKey in this.layerRenderers_) {\n    if (!(layerKey in frameState.layerStates)) {\n      frameState.postRenderFunctions.push(\n        /** @type {module:ol/PluggableMap~PostRenderFunction} */ (this.removeUnusedLayerRenderers_.bind(this))\n      );\n      return;\n    }\n  }\n};\n\n\n/**\n * @param {module:ol/layer/Layer~State} state1 First layer state.\n * @param {module:ol/layer/Layer~State} state2 Second layer state.\n * @return {number} The zIndex difference.\n */\nexport function sortByZIndex(state1, state2) {\n  return state1.zIndex - state2.zIndex;\n}\nexport default MapRenderer;\n","/**\n * @module ol/renderer/canvas/Map\n */\nimport {create as createTransform, apply as applyTransform, compose as composeTransform} from '../../transform.js';\nimport {inherits} from '../../index.js';\nimport {includes, stableSort} from '../../array.js';\nimport {CLASS_UNSELECTABLE} from '../../css.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {visibleAtResolution} from '../../layer/Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {rotateAtOffset} from '../../render/canvas.js';\nimport CanvasImmediateRenderer from '../../render/canvas/Immediate.js';\nimport MapRenderer, {sortByZIndex} from '../Map.js';\nimport SourceState from '../../source/State.js';\n\n\n/**\n * @type {Array.<module:ol/renderer/Layer>}\n */\nexport const layerRendererConstructors = [];\n\n\n/**\n * @constructor\n * @extends {module:ol/renderer/Map}\n * @param {module:ol/PluggableMap} map Map.\n * @api\n */\nconst CanvasMapRenderer = function(map) {\n  MapRenderer.call(this, map);\n\n  const container = map.getViewport();\n\n  /**\n   * @private\n   * @type {CanvasRenderingContext2D}\n   */\n  this.context_ = createCanvasContext2D();\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement}\n   */\n  this.canvas_ = this.context_.canvas;\n\n  this.canvas_.style.width = '100%';\n  this.canvas_.style.height = '100%';\n  this.canvas_.style.display = 'block';\n  this.canvas_.className = CLASS_UNSELECTABLE;\n  container.insertBefore(this.canvas_, container.childNodes[0] || null);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.renderedVisible_ = true;\n\n  /**\n   * @private\n   * @type {module:ol/transform~Transform}\n   */\n  this.transform_ = createTransform();\n\n};\n\ninherits(CanvasMapRenderer, MapRenderer);\n\n\n/**\n * @param {module:ol/render/EventType} type Event type.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @private\n */\nCanvasMapRenderer.prototype.dispatchComposeEvent_ = function(type, frameState) {\n  const map = this.getMap();\n  const context = this.context_;\n  if (map.hasListener(type)) {\n    const extent = frameState.extent;\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const rotation = viewState.rotation;\n\n    const transform = this.getTransform(frameState);\n\n    const vectorContext = new CanvasImmediateRenderer(context, pixelRatio,\n      extent, transform, rotation);\n    const composeEvent = new RenderEvent(type, vectorContext,\n      frameState, context, null);\n    map.dispatchEvent(composeEvent);\n  }\n};\n\n\n/**\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @protected\n * @return {!module:ol/transform~Transform} Transform.\n */\nCanvasMapRenderer.prototype.getTransform = function(frameState) {\n  const viewState = frameState.viewState;\n  const dx1 = this.canvas_.width / 2;\n  const dy1 = this.canvas_.height / 2;\n  const sx = frameState.pixelRatio / viewState.resolution;\n  const sy = -sx;\n  const angle = -viewState.rotation;\n  const dx2 = -viewState.center[0];\n  const dy2 = -viewState.center[1];\n  return composeTransform(this.transform_, dx1, dy1, sx, sy, angle, dx2, dy2);\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasMapRenderer.prototype.renderFrame = function(frameState) {\n\n  if (!frameState) {\n    if (this.renderedVisible_) {\n      this.canvas_.style.display = 'none';\n      this.renderedVisible_ = false;\n    }\n    return;\n  }\n\n  const context = this.context_;\n  const pixelRatio = frameState.pixelRatio;\n  const width = Math.round(frameState.size[0] * pixelRatio);\n  const height = Math.round(frameState.size[1] * pixelRatio);\n  if (this.canvas_.width != width || this.canvas_.height != height) {\n    this.canvas_.width = width;\n    this.canvas_.height = height;\n  } else {\n    context.clearRect(0, 0, width, height);\n  }\n\n  const rotation = frameState.viewState.rotation;\n\n  this.calculateMatrices2D(frameState);\n\n  this.dispatchComposeEvent_(RenderEventType.PRECOMPOSE, frameState);\n\n  const layerStatesArray = frameState.layerStatesArray;\n  stableSort(layerStatesArray, sortByZIndex);\n\n  if (rotation) {\n    context.save();\n    rotateAtOffset(context, rotation, width / 2, height / 2);\n  }\n\n  const viewResolution = frameState.viewState.resolution;\n  let i, ii, layer, layerRenderer, layerState;\n  for (i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n    layerState = layerStatesArray[i];\n    layer = layerState.layer;\n    layerRenderer = /** @type {module:ol/renderer/canvas/Layer} */ (this.getLayerRenderer(layer));\n    if (!visibleAtResolution(layerState, viewResolution) ||\n        layerState.sourceState != SourceState.READY) {\n      continue;\n    }\n    if (layerRenderer.prepareFrame(frameState, layerState)) {\n      layerRenderer.composeFrame(frameState, layerState, context);\n    }\n  }\n\n  if (rotation) {\n    context.restore();\n  }\n\n  this.dispatchComposeEvent_(RenderEventType.POSTCOMPOSE, frameState);\n\n  if (!this.renderedVisible_) {\n    this.canvas_.style.display = '';\n    this.renderedVisible_ = true;\n  }\n\n  this.scheduleRemoveUnusedLayerRenderers(frameState);\n  this.scheduleExpireIconCache(frameState);\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasMapRenderer.prototype.forEachLayerAtPixel = function(pixel, frameState, callback, thisArg,\n  layerFilter, thisArg2) {\n  let result;\n  const viewState = frameState.viewState;\n  const viewResolution = viewState.resolution;\n\n  const layerStates = frameState.layerStatesArray;\n  const numLayers = layerStates.length;\n\n  const coordinate = applyTransform(\n    frameState.pixelToCoordinateTransform, pixel.slice());\n\n  let i;\n  for (i = numLayers - 1; i >= 0; --i) {\n    const layerState = layerStates[i];\n    const layer = layerState.layer;\n    if (visibleAtResolution(layerState, viewResolution) && layerFilter.call(thisArg2, layer)) {\n      const layerRenderer = /** @type {module:ol/renderer/canvas/Layer} */ (this.getLayerRenderer(layer));\n      result = layerRenderer.forEachLayerAtCoordinate(\n        coordinate, frameState, callback, thisArg);\n      if (result) {\n        return result;\n      }\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasMapRenderer.prototype.registerLayerRenderers = function(constructors) {\n  MapRenderer.prototype.registerLayerRenderers.call(this, constructors);\n  for (let i = 0, ii = constructors.length; i < ii; ++i) {\n    const ctor = constructors[i];\n    if (!includes(layerRendererConstructors, ctor)) {\n      layerRendererConstructors.push(ctor);\n    }\n  }\n};\n\nexport default CanvasMapRenderer;\n","/**\n * @module ol/renderer/Layer\n */\nimport {getUid, inherits} from '../index.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport TileState from '../TileState.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {FALSE, UNDEFINED} from '../functions.js';\nimport SourceState from '../source/State.js';\n\n/**\n * @constructor\n * @extends {module:ol/Observable}\n * @param {module:ol/layer/Layer} layer Layer.\n * @struct\n */\nconst LayerRenderer = function(layer) {\n\n  Observable.call(this);\n\n  /**\n   * @private\n   * @type {module:ol/layer/Layer}\n   */\n  this.layer_ = layer;\n\n\n};\n\ninherits(LayerRenderer, Observable);\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @param {number} hitTolerance Hit tolerance in pixels.\n * @param {function(this: S, (module:ol/Feature|module:ol/render/Feature), module:ol/layer/Layer): T}\n *     callback Feature callback.\n * @param {S} thisArg Value to use as `this` when executing `callback`.\n * @return {T|undefined} Callback result.\n * @template S,T\n */\nLayerRenderer.prototype.forEachFeatureAtCoordinate = UNDEFINED;\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @return {boolean} Is there a feature at the given coordinate?\n */\nLayerRenderer.prototype.hasFeatureAtCoordinate = FALSE;\n\n\n/**\n * Create a function that adds loaded tiles to the tile lookup.\n * @param {module:ol/source/Tile} source Tile source.\n * @param {module:ol/proj/Projection} projection Projection of the tiles.\n * @param {Object.<number, Object.<string, module:ol/Tile>>} tiles Lookup of loaded tiles by zoom level.\n * @return {function(number, module:ol/TileRange):boolean} A function that can be\n *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n * @protected\n */\nLayerRenderer.prototype.createLoadedTileFinder = function(source, projection, tiles) {\n  return (\n    /**\n     * @param {number} zoom Zoom level.\n     * @param {module:ol/TileRange} tileRange Tile range.\n     * @return {boolean} The tile range is fully loaded.\n     */\n    function(zoom, tileRange) {\n      function callback(tile) {\n        if (!tiles[zoom]) {\n          tiles[zoom] = {};\n        }\n        tiles[zoom][tile.tileCoord.toString()] = tile;\n      }\n      return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n    }\n  );\n};\n\n\n/**\n * @return {module:ol/layer/Layer} Layer.\n */\nLayerRenderer.prototype.getLayer = function() {\n  return this.layer_;\n};\n\n\n/**\n * Handle changes in image state.\n * @param {module:ol/events/Event} event Image change event.\n * @private\n */\nLayerRenderer.prototype.handleImageChange_ = function(event) {\n  const image = /** @type {module:ol/Image} */ (event.target);\n  if (image.getState() === ImageState.LOADED) {\n    this.renderIfReadyAndVisible();\n  }\n};\n\n\n/**\n * Load the image if not already loaded, and register the image change\n * listener if needed.\n * @param {module:ol/ImageBase} image Image.\n * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n * @protected\n */\nLayerRenderer.prototype.loadImage = function(image) {\n  let imageState = image.getState();\n  if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n    listen(image, EventType.CHANGE, this.handleImageChange_, this);\n  }\n  if (imageState == ImageState.IDLE) {\n    image.load();\n    imageState = image.getState();\n  }\n  return imageState == ImageState.LOADED;\n};\n\n\n/**\n * @protected\n */\nLayerRenderer.prototype.renderIfReadyAndVisible = function() {\n  const layer = this.getLayer();\n  if (layer.getVisible() && layer.getSourceState() == SourceState.READY) {\n    this.changed();\n  }\n};\n\n\n/**\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @param {module:ol/source/Tile} tileSource Tile source.\n * @protected\n */\nLayerRenderer.prototype.scheduleExpireCache = function(frameState, tileSource) {\n  if (tileSource.canExpireCache()) {\n    /**\n     * @param {module:ol/source/Tile} tileSource Tile source.\n     * @param {module:ol/PluggableMap} map Map.\n     * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n     */\n    const postRenderFunction = function(tileSource, map, frameState) {\n      const tileSourceKey = getUid(tileSource).toString();\n      if (tileSourceKey in frameState.usedTiles) {\n        tileSource.expireCache(frameState.viewState.projection,\n          frameState.usedTiles[tileSourceKey]);\n      }\n    }.bind(null, tileSource);\n\n    frameState.postRenderFunctions.push(\n      /** @type {module:ol/PluggableMap~PostRenderFunction} */ (postRenderFunction)\n    );\n  }\n};\n\n\n/**\n * @param {!Object.<string, !Object.<string, module:ol/TileRange>>} usedTiles Used tiles.\n * @param {module:ol/source/Tile} tileSource Tile source.\n * @param {number} z Z.\n * @param {module:ol/TileRange} tileRange Tile range.\n * @protected\n */\nLayerRenderer.prototype.updateUsedTiles = function(usedTiles, tileSource, z, tileRange) {\n  // FIXME should we use tilesToDrawByZ instead?\n  const tileSourceKey = getUid(tileSource).toString();\n  const zKey = z.toString();\n  if (tileSourceKey in usedTiles) {\n    if (zKey in usedTiles[tileSourceKey]) {\n      usedTiles[tileSourceKey][zKey].extend(tileRange);\n    } else {\n      usedTiles[tileSourceKey][zKey] = tileRange;\n    }\n  } else {\n    usedTiles[tileSourceKey] = {};\n    usedTiles[tileSourceKey][zKey] = tileRange;\n  }\n};\n\n\n/**\n * Manage tile pyramid.\n * This function performs a number of functions related to the tiles at the\n * current zoom and lower zoom levels:\n * - registers idle tiles in frameState.wantedTiles so that they are not\n *   discarded by the tile queue\n * - enqueues missing tiles\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @param {module:ol/source/Tile} tileSource Tile source.\n * @param {module:ol/tilegrid/TileGrid} tileGrid Tile grid.\n * @param {number} pixelRatio Pixel ratio.\n * @param {module:ol/proj/Projection} projection Projection.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} currentZ Current Z.\n * @param {number} preload Load low resolution tiles up to 'preload' levels.\n * @param {function(this: T, module:ol/Tile)=} opt_tileCallback Tile callback.\n * @param {T=} opt_this Object to use as `this` in `opt_tileCallback`.\n * @protected\n * @template T\n */\nLayerRenderer.prototype.manageTilePyramid = function(\n  frameState, tileSource, tileGrid, pixelRatio, projection, extent,\n  currentZ, preload, opt_tileCallback, opt_this) {\n  const tileSourceKey = getUid(tileSource).toString();\n  if (!(tileSourceKey in frameState.wantedTiles)) {\n    frameState.wantedTiles[tileSourceKey] = {};\n  }\n  const wantedTiles = frameState.wantedTiles[tileSourceKey];\n  const tileQueue = frameState.tileQueue;\n  const minZoom = tileGrid.getMinZoom();\n  let tile, tileRange, tileResolution, x, y, z;\n  for (z = minZoom; z <= currentZ; ++z) {\n    tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n    tileResolution = tileGrid.getResolution(z);\n    for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        if (currentZ - z <= preload) {\n          tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n          if (tile.getState() == TileState.IDLE) {\n            wantedTiles[tile.getKey()] = true;\n            if (!tileQueue.isKeyQueued(tile.getKey())) {\n              tileQueue.enqueue([tile, tileSourceKey,\n                tileGrid.getTileCoordCenter(tile.tileCoord), tileResolution]);\n            }\n          }\n          if (opt_tileCallback !== undefined) {\n            opt_tileCallback.call(opt_this, tile);\n          }\n        } else {\n          tileSource.useTile(z, x, y, projection);\n        }\n      }\n    }\n  }\n};\nexport default LayerRenderer;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport {inherits} from '../../index.js';\nimport {getBottomLeft, getBottomRight, getTopLeft, getTopRight} from '../../extent.js';\nimport {TRUE} from '../../functions.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {rotateAtOffset} from '../../render/canvas.js';\nimport CanvasImmediateRenderer from '../../render/canvas/Immediate.js';\nimport LayerRenderer from '../Layer.js';\nimport {create as createTransform, apply as applyTransform, compose as composeTransform} from '../../transform.js';\n\n/**\n * @constructor\n * @abstract\n * @extends {module:ol/renderer/Layer}\n * @param {module:ol/layer/Layer} layer Layer.\n */\nconst CanvasLayerRenderer = function(layer) {\n\n  LayerRenderer.call(this, layer);\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.renderedResolution;\n\n  /**\n   * @private\n   * @type {module:ol/transform~Transform}\n   */\n  this.transform_ = createTransform();\n\n};\n\ninherits(CanvasLayerRenderer, LayerRenderer);\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @param {module:ol/extent~Extent} extent Clip extent.\n * @protected\n */\nCanvasLayerRenderer.prototype.clip = function(context, frameState, extent) {\n  const pixelRatio = frameState.pixelRatio;\n  const width = frameState.size[0] * pixelRatio;\n  const height = frameState.size[1] * pixelRatio;\n  const rotation = frameState.viewState.rotation;\n  const topLeft = getTopLeft(/** @type {module:ol/extent~Extent} */ (extent));\n  const topRight = getTopRight(/** @type {module:ol/extent~Extent} */ (extent));\n  const bottomRight = getBottomRight(/** @type {module:ol/extent~Extent} */ (extent));\n  const bottomLeft = getBottomLeft(/** @type {module:ol/extent~Extent} */ (extent));\n\n  applyTransform(frameState.coordinateToPixelTransform, topLeft);\n  applyTransform(frameState.coordinateToPixelTransform, topRight);\n  applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n  applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n  context.save();\n  rotateAtOffset(context, -rotation, width / 2, height / 2);\n  context.beginPath();\n  context.moveTo(topLeft[0] * pixelRatio, topLeft[1] * pixelRatio);\n  context.lineTo(topRight[0] * pixelRatio, topRight[1] * pixelRatio);\n  context.lineTo(bottomRight[0] * pixelRatio, bottomRight[1] * pixelRatio);\n  context.lineTo(bottomLeft[0] * pixelRatio, bottomLeft[1] * pixelRatio);\n  context.clip();\n  rotateAtOffset(context, rotation, width / 2, height / 2);\n};\n\n\n/**\n * @param {module:ol/render/EventType} type Event type.\n * @param {CanvasRenderingContext2D} context Context.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @param {module:ol/transform~Transform=} opt_transform Transform.\n * @private\n */\nCanvasLayerRenderer.prototype.dispatchComposeEvent_ = function(type, context, frameState, opt_transform) {\n  const layer = this.getLayer();\n  if (layer.hasListener(type)) {\n    const width = frameState.size[0] * frameState.pixelRatio;\n    const height = frameState.size[1] * frameState.pixelRatio;\n    const rotation = frameState.viewState.rotation;\n    rotateAtOffset(context, -rotation, width / 2, height / 2);\n    const transform = opt_transform !== undefined ?\n      opt_transform : this.getTransform(frameState, 0);\n    const render = new CanvasImmediateRenderer(\n      context, frameState.pixelRatio, frameState.extent, transform,\n      frameState.viewState.rotation);\n    const composeEvent = new RenderEvent(type, render, frameState,\n      context, null);\n    layer.dispatchEvent(composeEvent);\n    rotateAtOffset(context, rotation, width / 2, height / 2);\n  }\n};\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {module:ol/PluggableMap~FrameState} frameState FrameState.\n * @param {function(this: S, module:ol/layer/Layer, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n *     callback.\n * @param {S} thisArg Value to use as `this` when executing `callback`.\n * @return {T|undefined} Callback result.\n * @template S,T,U\n */\nCanvasLayerRenderer.prototype.forEachLayerAtCoordinate = function(coordinate, frameState, callback, thisArg) {\n  const hasFeature = this.forEachFeatureAtCoordinate(coordinate, frameState, 0, TRUE, this);\n\n  if (hasFeature) {\n    return callback.call(thisArg, this.getLayer(), null);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @param {module:ol/layer/Layer~State} layerState Layer state.\n * @param {module:ol/transform~Transform=} opt_transform Transform.\n * @protected\n */\nCanvasLayerRenderer.prototype.postCompose = function(context, frameState, layerState, opt_transform) {\n  this.dispatchComposeEvent_(RenderEventType.POSTCOMPOSE, context, frameState, opt_transform);\n};\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @param {module:ol/transform~Transform=} opt_transform Transform.\n * @protected\n */\nCanvasLayerRenderer.prototype.preCompose = function(context, frameState, opt_transform) {\n  this.dispatchComposeEvent_(RenderEventType.PRECOMPOSE, context, frameState, opt_transform);\n};\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @param {module:ol/transform~Transform=} opt_transform Transform.\n * @protected\n */\nCanvasLayerRenderer.prototype.dispatchRenderEvent = function(context, frameState, opt_transform) {\n  this.dispatchComposeEvent_(RenderEventType.RENDER, context, frameState, opt_transform);\n};\n\n\n/**\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @param {number} offsetX Offset on the x-axis in view coordinates.\n * @protected\n * @return {!module:ol/transform~Transform} Transform.\n */\nCanvasLayerRenderer.prototype.getTransform = function(frameState, offsetX) {\n  const viewState = frameState.viewState;\n  const pixelRatio = frameState.pixelRatio;\n  const dx1 = pixelRatio * frameState.size[0] / 2;\n  const dy1 = pixelRatio * frameState.size[1] / 2;\n  const sx = pixelRatio / viewState.resolution;\n  const sy = -sx;\n  const angle = -viewState.rotation;\n  const dx2 = -viewState.center[0] + offsetX;\n  const dy2 = -viewState.center[1];\n  return composeTransform(this.transform_, dx1, dy1, sx, sy, angle, dx2, dy2);\n};\n\n\n/**\n * @abstract\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @param {module:ol/layer/Layer~State} layerState Layer state.\n * @param {CanvasRenderingContext2D} context Context.\n */\nCanvasLayerRenderer.prototype.composeFrame = function(frameState, layerState, context) {};\n\n/**\n * @abstract\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @param {module:ol/layer/Layer~State} layerState Layer state.\n * @return {boolean} whether composeFrame should be called.\n */\nCanvasLayerRenderer.prototype.prepareFrame = function(frameState, layerState) {};\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/renderer/canvas/IntermediateCanvas\n */\nimport {inherits} from '../../index.js';\nimport {scale as scaleCoordinate} from '../../coordinate.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {containsExtent, intersects} from '../../extent.js';\nimport {UNDEFINED} from '../../functions.js';\nimport CanvasLayerRenderer from '../canvas/Layer.js';\nimport {create as createTransform, apply as applyTransform} from '../../transform.js';\n\n/**\n * @constructor\n * @abstract\n * @extends {module:ol/renderer/canvas/Layer}\n * @param {module:ol/layer/Layer} layer Layer.\n */\nconst IntermediateCanvasRenderer = function(layer) {\n\n  CanvasLayerRenderer.call(this, layer);\n\n  /**\n   * @protected\n   * @type {module:ol/transform~Transform}\n   */\n  this.coordinateToCanvasPixelTransform = createTransform();\n\n  /**\n   * @private\n   * @type {CanvasRenderingContext2D}\n   */\n  this.hitCanvasContext_ = null;\n\n};\n\ninherits(IntermediateCanvasRenderer, CanvasLayerRenderer);\n\n\n/**\n * @inheritDoc\n */\nIntermediateCanvasRenderer.prototype.composeFrame = function(frameState, layerState, context) {\n\n  this.preCompose(context, frameState);\n\n  const image = this.getImage();\n  if (image) {\n\n    // clipped rendering if layer extent is set\n    const extent = layerState.extent;\n    const clipped = extent !== undefined &&\n        !containsExtent(extent, frameState.extent) &&\n        intersects(extent, frameState.extent);\n    if (clipped) {\n      this.clip(context, frameState, /** @type {module:ol/extent~Extent} */ (extent));\n    }\n\n    const imageTransform = this.getImageTransform();\n    // for performance reasons, context.save / context.restore is not used\n    // to save and restore the transformation matrix and the opacity.\n    // see http://jsperf.com/context-save-restore-versus-variable\n    const alpha = context.globalAlpha;\n    context.globalAlpha = layerState.opacity;\n\n    // for performance reasons, context.setTransform is only used\n    // when the view is rotated. see http://jsperf.com/canvas-transform\n    const dx = imageTransform[4];\n    const dy = imageTransform[5];\n    const dw = image.width * imageTransform[0];\n    const dh = image.height * imageTransform[3];\n    context.drawImage(image, 0, 0, +image.width, +image.height,\n      Math.round(dx), Math.round(dy), Math.round(dw), Math.round(dh));\n    context.globalAlpha = alpha;\n\n    if (clipped) {\n      context.restore();\n    }\n  }\n\n  this.postCompose(context, frameState, layerState);\n};\n\n\n/**\n * @abstract\n * @return {HTMLCanvasElement|HTMLVideoElement|Image} Canvas.\n */\nIntermediateCanvasRenderer.prototype.getImage = function() {};\n\n\n/**\n * @abstract\n * @return {!module:ol/transform~Transform} Image transform.\n */\nIntermediateCanvasRenderer.prototype.getImageTransform = function() {};\n\n\n/**\n * @inheritDoc\n */\nIntermediateCanvasRenderer.prototype.forEachFeatureAtCoordinate = function(coordinate, frameState, hitTolerance, callback, thisArg) {\n  const layer = this.getLayer();\n  const source = layer.getSource();\n  const resolution = frameState.viewState.resolution;\n  const rotation = frameState.viewState.rotation;\n  const skippedFeatureUids = frameState.skippedFeatureUids;\n  return source.forEachFeatureAtCoordinate(\n    coordinate, resolution, rotation, hitTolerance, skippedFeatureUids,\n    /**\n     * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n     * @return {?} Callback result.\n     */\n    function(feature) {\n      return callback.call(thisArg, feature, layer);\n    });\n};\n\n\n/**\n * @inheritDoc\n */\nIntermediateCanvasRenderer.prototype.forEachLayerAtCoordinate = function(coordinate, frameState, callback, thisArg) {\n  if (!this.getImage()) {\n    return undefined;\n  }\n\n  if (this.getLayer().getSource().forEachFeatureAtCoordinate !== UNDEFINED) {\n    // for ImageCanvas sources use the original hit-detection logic,\n    // so that for example also transparent polygons are detected\n    return CanvasLayerRenderer.prototype.forEachLayerAtCoordinate.apply(this, arguments);\n  } else {\n    const pixel = applyTransform(this.coordinateToCanvasPixelTransform, coordinate.slice());\n    scaleCoordinate(pixel, frameState.viewState.resolution / this.renderedResolution);\n\n    if (!this.hitCanvasContext_) {\n      this.hitCanvasContext_ = createCanvasContext2D(1, 1);\n    }\n\n    this.hitCanvasContext_.clearRect(0, 0, 1, 1);\n    this.hitCanvasContext_.drawImage(this.getImage(), pixel[0], pixel[1], 1, 1, 0, 0, 1, 1);\n\n    const imageData = this.hitCanvasContext_.getImageData(0, 0, 1, 1).data;\n    if (imageData[3] > 0) {\n      return callback.call(thisArg, this.getLayer(),  imageData);\n    } else {\n      return undefined;\n    }\n  }\n};\nexport default IntermediateCanvasRenderer;\n","/**\n * @module ol/renderer/canvas/ImageLayer\n */\nimport {ENABLE_RASTER_REPROJECTION} from '../../reproj/common.js';\nimport {inherits} from '../../index.js';\nimport ImageCanvas from '../../ImageCanvas.js';\nimport LayerType from '../../LayerType.js';\nimport ViewHint from '../../ViewHint.js';\nimport {equals} from '../../array.js';\nimport {getHeight, getIntersection, getWidth, isEmpty} from '../../extent.js';\nimport VectorRenderType from '../../layer/VectorRenderType.js';\nimport {assign} from '../../obj.js';\nimport {layerRendererConstructors} from './Map.js';\nimport IntermediateCanvasRenderer from '../canvas/IntermediateCanvas.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\n\n/**\n * @constructor\n * @extends {module:ol/renderer/canvas/IntermediateCanvas}\n * @param {module:ol/layer/Image|module:ol/layer/Vector} imageLayer Image or vector layer.\n * @api\n */\nconst CanvasImageLayerRenderer = function(imageLayer) {\n\n  IntermediateCanvasRenderer.call(this, imageLayer);\n\n  /**\n   * @private\n   * @type {?module:ol/ImageBase}\n   */\n  this.image_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/transform~Transform}\n   */\n  this.imageTransform_ = createTransform();\n\n  /**\n   * @type {!Array.<string>}\n   */\n  this.skippedFeatures_ = [];\n\n  /**\n   * @private\n   * @type {module:ol/renderer/canvas/VectorLayer}\n   */\n  this.vectorRenderer_ = null;\n\n  if (imageLayer.getType() === LayerType.VECTOR) {\n    for (let i = 0, ii = layerRendererConstructors.length; i < ii; ++i) {\n      const ctor = layerRendererConstructors[i];\n      if (ctor !== CanvasImageLayerRenderer && ctor['handles'](imageLayer)) {\n        this.vectorRenderer_ = new ctor(imageLayer);\n        break;\n      }\n    }\n  }\n\n};\n\ninherits(CanvasImageLayerRenderer, IntermediateCanvasRenderer);\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {module:ol/layer/Layer} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nCanvasImageLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.IMAGE ||\n    layer.getType() === LayerType.VECTOR &&\n    /** @type {module:ol/layer/Vector} */ (layer).getRenderMode() === VectorRenderType.IMAGE;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {module:ol/renderer/Map} mapRenderer The map renderer.\n * @param {module:ol/layer/Layer} layer The layer to be rendererd.\n * @return {module:ol/renderer/canvas/ImageLayer} The layer renderer.\n */\nCanvasImageLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new CanvasImageLayerRenderer(/** @type {module:ol/layer/Image} */ (layer));\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasImageLayerRenderer.prototype.disposeInternal = function() {\n  if (this.vectorRenderer_) {\n    this.vectorRenderer_.dispose();\n  }\n  IntermediateCanvasRenderer.prototype.disposeInternal.call(this);\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasImageLayerRenderer.prototype.getImage = function() {\n  return !this.image_ ? null : this.image_.getImage();\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasImageLayerRenderer.prototype.getImageTransform = function() {\n  return this.imageTransform_;\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasImageLayerRenderer.prototype.prepareFrame = function(frameState, layerState) {\n\n  const pixelRatio = frameState.pixelRatio;\n  const size = frameState.size;\n  const viewState = frameState.viewState;\n  const viewCenter = viewState.center;\n  const viewResolution = viewState.resolution;\n\n  let image;\n  const imageLayer = /** @type {module:ol/layer/Image} */ (this.getLayer());\n  const imageSource = imageLayer.getSource();\n\n  const hints = frameState.viewHints;\n\n  const vectorRenderer = this.vectorRenderer_;\n  let renderedExtent = frameState.extent;\n  if (!vectorRenderer && layerState.extent !== undefined) {\n    renderedExtent = getIntersection(renderedExtent, layerState.extent);\n  }\n\n  if (!hints[ViewHint.ANIMATING] && !hints[ViewHint.INTERACTING] &&\n      !isEmpty(renderedExtent)) {\n    let projection = viewState.projection;\n    if (!ENABLE_RASTER_REPROJECTION) {\n      const sourceProjection = imageSource.getProjection();\n      if (sourceProjection) {\n        projection = sourceProjection;\n      }\n    }\n    let skippedFeatures = this.skippedFeatures_;\n    if (vectorRenderer) {\n      const context = vectorRenderer.context;\n      const imageFrameState = /** @type {module:ol/PluggableMap~FrameState} */ (assign({}, frameState, {\n        size: [\n          getWidth(renderedExtent) / viewResolution,\n          getHeight(renderedExtent) / viewResolution\n        ],\n        viewState: /** @type {module:ol/View~State} */ (assign({}, frameState.viewState, {\n          rotation: 0\n        }))\n      }));\n      const newSkippedFeatures = Object.keys(imageFrameState.skippedFeatureUids).sort();\n      image = new ImageCanvas(renderedExtent, viewResolution, pixelRatio, context.canvas, function(callback) {\n        if (vectorRenderer.prepareFrame(imageFrameState, layerState) &&\n            (vectorRenderer.replayGroupChanged ||\n            !equals(skippedFeatures, newSkippedFeatures))) {\n          context.canvas.width = imageFrameState.size[0] * pixelRatio;\n          context.canvas.height = imageFrameState.size[1] * pixelRatio;\n          vectorRenderer.compose(context, imageFrameState, layerState);\n          skippedFeatures = newSkippedFeatures;\n          callback();\n        }\n      });\n    } else {\n      image = imageSource.getImage(\n        renderedExtent, viewResolution, pixelRatio, projection);\n    }\n    if (image && this.loadImage(image)) {\n      this.image_ = image;\n      this.skippedFeatures_ = skippedFeatures;\n    }\n  }\n\n  if (this.image_) {\n    image = this.image_;\n    const imageExtent = image.getExtent();\n    const imageResolution = image.getResolution();\n    const imagePixelRatio = image.getPixelRatio();\n    const scale = pixelRatio * imageResolution /\n        (viewResolution * imagePixelRatio);\n    const transform = composeTransform(this.imageTransform_,\n      pixelRatio * size[0] / 2, pixelRatio * size[1] / 2,\n      scale, scale,\n      0,\n      imagePixelRatio * (imageExtent[0] - viewCenter[0]) / imageResolution,\n      imagePixelRatio * (viewCenter[1] - imageExtent[3]) / imageResolution);\n    composeTransform(this.coordinateToCanvasPixelTransform,\n      pixelRatio * size[0] / 2 - transform[4], pixelRatio * size[1] / 2 - transform[5],\n      pixelRatio / viewResolution, -pixelRatio / viewResolution,\n      0,\n      -viewCenter[0], -viewCenter[1]);\n\n    this.renderedResolution = imageResolution * pixelRatio / imagePixelRatio;\n  }\n\n  return !!this.image_;\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasImageLayerRenderer.prototype.forEachFeatureAtCoordinate = function(coordinate, frameState, hitTolerance, callback, thisArg) {\n  if (this.vectorRenderer_) {\n    return this.vectorRenderer_.forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, callback, thisArg);\n  } else {\n    return IntermediateCanvasRenderer.prototype.forEachFeatureAtCoordinate.call(this, coordinate, frameState, hitTolerance, callback, thisArg);\n  }\n};\n\n\nexport default CanvasImageLayerRenderer;\n","/**\n * @module ol/TileRange\n */\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n *\n * @constructor\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @struct\n */\nconst TileRange = function(minX, maxX, minY, maxY) {\n\n  /**\n   * @type {number}\n   */\n  this.minX = minX;\n\n  /**\n   * @type {number}\n   */\n  this.maxX = maxX;\n\n  /**\n   * @type {number}\n   */\n  this.minY = minY;\n\n  /**\n   * @type {number}\n   */\n  this.maxY = maxY;\n\n};\n\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {module:ol/TileRange=} tileRange TileRange.\n * @return {module:ol/TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  } else {\n    return new TileRange(minX, maxX, minY, maxY);\n  }\n}\n\n\n/**\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @return {boolean} Contains tile coordinate.\n */\nTileRange.prototype.contains = function(tileCoord) {\n  return this.containsXY(tileCoord[1], tileCoord[2]);\n};\n\n\n/**\n * @param {module:ol/TileRange} tileRange Tile range.\n * @return {boolean} Contains.\n */\nTileRange.prototype.containsTileRange = function(tileRange) {\n  return this.minX <= tileRange.minX && tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY && tileRange.maxY <= this.maxY;\n};\n\n\n/**\n * @param {number} x Tile coordinate x.\n * @param {number} y Tile coordinate y.\n * @return {boolean} Contains coordinate.\n */\nTileRange.prototype.containsXY = function(x, y) {\n  return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n};\n\n\n/**\n * @param {module:ol/TileRange} tileRange Tile range.\n * @return {boolean} Equals.\n */\nTileRange.prototype.equals = function(tileRange) {\n  return this.minX == tileRange.minX && this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX && this.maxY == tileRange.maxY;\n};\n\n\n/**\n * @param {module:ol/TileRange} tileRange Tile range.\n */\nTileRange.prototype.extend = function(tileRange) {\n  if (tileRange.minX < this.minX) {\n    this.minX = tileRange.minX;\n  }\n  if (tileRange.maxX > this.maxX) {\n    this.maxX = tileRange.maxX;\n  }\n  if (tileRange.minY < this.minY) {\n    this.minY = tileRange.minY;\n  }\n  if (tileRange.maxY > this.maxY) {\n    this.maxY = tileRange.maxY;\n  }\n};\n\n\n/**\n * @return {number} Height.\n */\nTileRange.prototype.getHeight = function() {\n  return this.maxY - this.minY + 1;\n};\n\n\n/**\n * @return {module:ol/size~Size} Size.\n */\nTileRange.prototype.getSize = function() {\n  return [this.getWidth(), this.getHeight()];\n};\n\n\n/**\n * @return {number} Width.\n */\nTileRange.prototype.getWidth = function() {\n  return this.maxX - this.minX + 1;\n};\n\n\n/**\n * @param {module:ol/TileRange} tileRange Tile range.\n * @return {boolean} Intersects.\n */\nTileRange.prototype.intersects = function(tileRange) {\n  return this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY;\n};\nexport default TileRange;\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport {getUid, inherits} from '../../index.js';\nimport LayerType from '../../LayerType.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport ViewHint from '../../ViewHint.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {containsExtent, createEmpty, equals, getIntersection, isEmpty} from '../../extent.js';\nimport IntermediateCanvasRenderer from '../canvas/IntermediateCanvas.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\n\n/**\n * @constructor\n * @extends {module:ol/renderer/canvas/IntermediateCanvas}\n * @param {module:ol/layer/Tile|module:ol/layer/VectorTile} tileLayer Tile layer.\n * @api\n */\nconst CanvasTileLayerRenderer = function(tileLayer) {\n\n  IntermediateCanvasRenderer.call(this, tileLayer);\n\n  /**\n   * @protected\n   * @type {CanvasRenderingContext2D}\n   */\n  this.context = this.context === null ? null : createCanvasContext2D();\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.oversampling_;\n\n  /**\n   * @private\n   * @type {module:ol/extent~Extent}\n   */\n  this.renderedExtent_ = null;\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.renderedRevision;\n\n  /**\n   * @protected\n   * @type {!Array.<module:ol/Tile>}\n   */\n  this.renderedTiles = [];\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.newTiles_ = false;\n\n  /**\n   * @protected\n   * @type {module:ol/extent~Extent}\n   */\n  this.tmpExtent = createEmpty();\n\n  /**\n   * @private\n   * @type {module:ol/TileRange}\n   */\n  this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n\n  /**\n   * @private\n   * @type {module:ol/transform~Transform}\n   */\n  this.imageTransform_ = createTransform();\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.zDirection = 0;\n\n};\n\ninherits(CanvasTileLayerRenderer, IntermediateCanvasRenderer);\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {module:ol/layer/Layer} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nCanvasTileLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.TILE;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {module:ol/renderer/Map} mapRenderer The map renderer.\n * @param {module:ol/layer/Layer} layer The layer to be rendererd.\n * @return {module:ol/renderer/canvas/TileLayer} The layer renderer.\n */\nCanvasTileLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new CanvasTileLayerRenderer(/** @type {module:ol/layer/Tile} */ (layer));\n};\n\n\n/**\n * @private\n * @param {module:ol/Tile} tile Tile.\n * @return {boolean} Tile is drawable.\n */\nCanvasTileLayerRenderer.prototype.isDrawableTile_ = function(tile) {\n  const tileState = tile.getState();\n  const useInterimTilesOnError = this.getLayer().getUseInterimTilesOnError();\n  return tileState == TileState.LOADED ||\n      tileState == TileState.EMPTY ||\n      tileState == TileState.ERROR && !useInterimTilesOnError;\n};\n\n\n/**\n * @param {number} z Tile coordinate z.\n * @param {number} x Tile coordinate x.\n * @param {number} y Tile coordinate y.\n * @param {number} pixelRatio Pixel ratio.\n * @param {module:ol/proj/Projection} projection Projection.\n * @return {!module:ol/Tile} Tile.\n */\nCanvasTileLayerRenderer.prototype.getTile = function(z, x, y, pixelRatio, projection) {\n  const layer = this.getLayer();\n  const source = /** @type {module:ol/source/Tile} */ (layer.getSource());\n  let tile = source.getTile(z, x, y, pixelRatio, projection);\n  if (tile.getState() == TileState.ERROR) {\n    if (!layer.getUseInterimTilesOnError()) {\n      // When useInterimTilesOnError is false, we consider the error tile as loaded.\n      tile.setState(TileState.LOADED);\n    } else if (layer.getPreload() > 0) {\n      // Preloaded tiles for lower resolutions might have finished loading.\n      this.newTiles_ = true;\n    }\n  }\n  if (!this.isDrawableTile_(tile)) {\n    tile = tile.getInterimTile();\n  }\n  return tile;\n};\n\n/**\n * @inheritDoc\n */\nCanvasTileLayerRenderer.prototype.prepareFrame = function(frameState, layerState) {\n\n  const pixelRatio = frameState.pixelRatio;\n  const size = frameState.size;\n  const viewState = frameState.viewState;\n  const projection = viewState.projection;\n  const viewResolution = viewState.resolution;\n  const viewCenter = viewState.center;\n\n  const tileLayer = this.getLayer();\n  const tileSource = /** @type {module:ol/source/Tile} */ (tileLayer.getSource());\n  const sourceRevision = tileSource.getRevision();\n  const tileGrid = tileSource.getTileGridForProjection(projection);\n  const z = tileGrid.getZForResolution(viewResolution, this.zDirection);\n  const tileResolution = tileGrid.getResolution(z);\n  let oversampling = Math.round(viewResolution / tileResolution) || 1;\n  let extent = frameState.extent;\n\n  if (layerState.extent !== undefined) {\n    extent = getIntersection(extent, layerState.extent);\n  }\n  if (isEmpty(extent)) {\n    // Return false to prevent the rendering of the layer.\n    return false;\n  }\n\n  const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n  const imageExtent = tileGrid.getTileRangeExtent(z, tileRange);\n\n  const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n\n  /**\n   * @type {Object.<number, Object.<string, module:ol/Tile>>}\n   */\n  const tilesToDrawByZ = {};\n  tilesToDrawByZ[z] = {};\n\n  const findLoadedTiles = this.createLoadedTileFinder(\n    tileSource, projection, tilesToDrawByZ);\n\n  const hints = frameState.viewHints;\n  const animatingOrInteracting = hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING];\n\n  const tmpExtent = this.tmpExtent;\n  const tmpTileRange = this.tmpTileRange_;\n  this.newTiles_ = false;\n  let tile, x, y;\n  for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n    for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n      if (Date.now() - frameState.time > 16 && animatingOrInteracting) {\n        continue;\n      }\n      tile = this.getTile(z, x, y, pixelRatio, projection);\n      if (this.isDrawableTile_(tile)) {\n        const uid = getUid(this);\n        if (tile.getState() == TileState.LOADED) {\n          tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n          const inTransition = tile.inTransition(uid);\n          if (!this.newTiles_ && (inTransition || this.renderedTiles.indexOf(tile) === -1)) {\n            this.newTiles_ = true;\n          }\n        }\n        if (tile.getAlpha(uid, frameState.time) === 1) {\n          // don't look for alt tiles if alpha is 1\n          continue;\n        }\n      }\n\n      const childTileRange = tileGrid.getTileCoordChildTileRange(\n        tile.tileCoord, tmpTileRange, tmpExtent);\n      let covered = false;\n      if (childTileRange) {\n        covered = findLoadedTiles(z + 1, childTileRange);\n      }\n      if (!covered) {\n        tileGrid.forEachTileCoordParentTileRange(\n          tile.tileCoord, findLoadedTiles, null, tmpTileRange, tmpExtent);\n      }\n\n    }\n  }\n\n  const renderedResolution = tileResolution * pixelRatio / tilePixelRatio * oversampling;\n  if (!(this.renderedResolution && Date.now() - frameState.time > 16 && animatingOrInteracting) && (\n    this.newTiles_ ||\n        !(this.renderedExtent_ && containsExtent(this.renderedExtent_, extent)) ||\n        this.renderedRevision != sourceRevision ||\n        oversampling != this.oversampling_ ||\n        !animatingOrInteracting && renderedResolution != this.renderedResolution\n  )) {\n\n    const context = this.context;\n    if (context) {\n      const tilePixelSize = tileSource.getTilePixelSize(z, pixelRatio, projection);\n      const width = Math.round(tileRange.getWidth() * tilePixelSize[0] / oversampling);\n      const height = Math.round(tileRange.getHeight() * tilePixelSize[1] / oversampling);\n      const canvas = context.canvas;\n      if (canvas.width != width || canvas.height != height) {\n        this.oversampling_ = oversampling;\n        canvas.width = width;\n        canvas.height = height;\n      } else {\n        if (this.renderedExtent_ && !equals(imageExtent, this.renderedExtent_)) {\n          context.clearRect(0, 0, width, height);\n        }\n        oversampling = this.oversampling_;\n      }\n    }\n\n    this.renderedTiles.length = 0;\n    /** @type {Array.<number>} */\n    const zs = Object.keys(tilesToDrawByZ).map(Number);\n    zs.sort(function(a, b) {\n      if (a === z) {\n        return 1;\n      } else if (b === z) {\n        return -1;\n      } else {\n        return a > b ? 1 : a < b ? -1 : 0;\n      }\n    });\n    let currentResolution, currentScale, currentTilePixelSize, currentZ, i, ii;\n    let tileExtent, tileGutter, tilesToDraw, w, h;\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      currentZ = zs[i];\n      currentTilePixelSize = tileSource.getTilePixelSize(currentZ, pixelRatio, projection);\n      currentResolution = tileGrid.getResolution(currentZ);\n      currentScale = currentResolution / tileResolution;\n      tileGutter = tilePixelRatio * tileSource.getGutter(projection);\n      tilesToDraw = tilesToDrawByZ[currentZ];\n      for (const tileCoordKey in tilesToDraw) {\n        tile = tilesToDraw[tileCoordKey];\n        tileExtent = tileGrid.getTileCoordExtent(tile.getTileCoord(), tmpExtent);\n        x = (tileExtent[0] - imageExtent[0]) / tileResolution * tilePixelRatio / oversampling;\n        y = (imageExtent[3] - tileExtent[3]) / tileResolution * tilePixelRatio / oversampling;\n        w = currentTilePixelSize[0] * currentScale / oversampling;\n        h = currentTilePixelSize[1] * currentScale / oversampling;\n        this.drawTileImage(tile, frameState, layerState, x, y, w, h, tileGutter, z === currentZ);\n        this.renderedTiles.push(tile);\n      }\n    }\n\n    this.renderedRevision = sourceRevision;\n    this.renderedResolution = tileResolution * pixelRatio / tilePixelRatio * oversampling;\n    this.renderedExtent_ = imageExtent;\n  }\n\n  const scale = this.renderedResolution / viewResolution;\n  const transform = composeTransform(this.imageTransform_,\n    pixelRatio * size[0] / 2, pixelRatio * size[1] / 2,\n    scale, scale,\n    0,\n    (this.renderedExtent_[0] - viewCenter[0]) / this.renderedResolution * pixelRatio,\n    (viewCenter[1] - this.renderedExtent_[3]) / this.renderedResolution * pixelRatio);\n  composeTransform(this.coordinateToCanvasPixelTransform,\n    pixelRatio * size[0] / 2 - transform[4], pixelRatio * size[1] / 2 - transform[5],\n    pixelRatio / viewResolution, -pixelRatio / viewResolution,\n    0,\n    -viewCenter[0], -viewCenter[1]);\n\n\n  this.updateUsedTiles(frameState.usedTiles, tileSource, z, tileRange);\n  this.manageTilePyramid(frameState, tileSource, tileGrid, pixelRatio,\n    projection, extent, z, tileLayer.getPreload());\n  this.scheduleExpireCache(frameState, tileSource);\n\n  return this.renderedTiles.length > 0;\n};\n\n\n/**\n * @param {module:ol/Tile} tile Tile.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @param {module:ol/layer/Layer~State} layerState Layer state.\n * @param {number} x Left of the tile.\n * @param {number} y Top of the tile.\n * @param {number} w Width of the tile.\n * @param {number} h Height of the tile.\n * @param {number} gutter Tile gutter.\n * @param {boolean} transition Apply an alpha transition.\n */\nCanvasTileLayerRenderer.prototype.drawTileImage = function(tile, frameState, layerState, x, y, w, h, gutter, transition) {\n  const image = tile.getImage(this.getLayer());\n  if (!image) {\n    return;\n  }\n  const uid = getUid(this);\n  const alpha = transition ? tile.getAlpha(uid, frameState.time) : 1;\n  if (alpha === 1 && !this.getLayer().getSource().getOpaque(frameState.viewState.projection)) {\n    this.context.clearRect(x, y, w, h);\n  }\n  const alphaChanged = alpha !== this.context.globalAlpha;\n  if (alphaChanged) {\n    this.context.save();\n    this.context.globalAlpha = alpha;\n  }\n  this.context.drawImage(image, gutter, gutter,\n    image.width - 2 * gutter, image.height - 2 * gutter, x, y, w, h);\n\n  if (alphaChanged) {\n    this.context.restore();\n  }\n  if (alpha !== 1) {\n    frameState.animate = true;\n  } else if (transition) {\n    tile.endTransition(uid);\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasTileLayerRenderer.prototype.getImage = function() {\n  const context = this.context;\n  return context ? context.canvas : null;\n};\n\n\n/**\n * @function\n * @return {module:ol/layer/Tile|module:ol/layer/VectorTile}\n */\nCanvasTileLayerRenderer.prototype.getLayer;\n\n\n/**\n * @inheritDoc\n */\nCanvasTileLayerRenderer.prototype.getImageTransform = function() {\n  return this.imageTransform_;\n};\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/render/ReplayGroup\n */\n/**\n * Base class for replay groups.\n * @constructor\n * @abstract\n */\nconst ReplayGroup = function() {};\n\n\n/**\n * @abstract\n * @param {number|undefined} zIndex Z index.\n * @param {module:ol/render/ReplayType} replayType Replay type.\n * @return {module:ol/render/VectorContext} Replay.\n */\nReplayGroup.prototype.getReplay = function(zIndex, replayType) {};\n\n\n/**\n * @abstract\n * @return {boolean} Is empty.\n */\nReplayGroup.prototype.isEmpty = function() {};\nexport default ReplayGroup;\n","/**\n * @module ol/render/ReplayType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CIRCLE: 'Circle',\n  DEFAULT: 'Default',\n  IMAGE: 'Image',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  TEXT: 'Text'\n};\n","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\n\n\n/**\n * @param {Array.<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {function(string):number} measure Measure function returning the\n * width of the character passed as 1st argument.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @return {Array.<Array.<*>>} The result array of null if `maxAngle` was\n * exceeded. Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates, offset, end, stride, text, measure, startM, maxAngle) {\n  const result = [];\n\n  // Keep text upright\n  const reverse = flatCoordinates[offset] > flatCoordinates[end - stride];\n\n  const numChars = text.length;\n\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  offset += stride;\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let segmentM = 0;\n  let segmentLength = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n\n  let chunk = '';\n  let chunkLength = 0;\n  let data, index, previousAngle;\n  for (let i = 0; i < numChars; ++i) {\n    index = reverse ? numChars - i - 1 : i;\n    const char = text.charAt(index);\n    chunk = reverse ? char + chunk : chunk + char;\n    const charLength = measure(chunk) - chunkLength;\n    chunkLength += charLength;\n    const charM = startM + charLength / 2;\n    while (offset < end - stride && segmentM + segmentLength < charM) {\n      x1 = x2;\n      y1 = y2;\n      offset += stride;\n      x2 = flatCoordinates[offset];\n      y2 = flatCoordinates[offset + 1];\n      segmentM += segmentLength;\n      segmentLength = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n    }\n    const segmentPos = charM - segmentM;\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -Math.PI : Math.PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      delta += (delta > Math.PI) ? -2 * Math.PI : (delta < -Math.PI) ? 2 * Math.PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    const interpolate = segmentPos / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    if (previousAngle == angle) {\n      if (reverse) {\n        data[0] = x;\n        data[1] = y;\n        data[2] = charLength / 2;\n      }\n      data[4] = chunk;\n    } else {\n      chunk = char;\n      chunkLength = charLength;\n      data = [x, y, charLength / 2, angle, chunk];\n      if (reverse) {\n        result.unshift(data);\n      } else {\n        result.push(data);\n      }\n      previousAngle = angle;\n    }\n    startM += charLength;\n  }\n  return result;\n}\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12\n};\n\n\n/**\n * @type {Array.<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n\n/**\n * @type {Array.<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n\n/**\n * @type {Array.<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n\n/**\n * @type {Array.<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\n\nexport default Instruction;\n","/**\n * @module ol/render/replay\n */\nimport ReplayType from '../render/ReplayType.js';\n\n\n/**\n * @const\n * @type {Array.<module:ol/render/ReplayType>}\n */\nexport const ORDER = [\n  ReplayType.POLYGON,\n  ReplayType.CIRCLE,\n  ReplayType.LINE_STRING,\n  ReplayType.IMAGE,\n  ReplayType.TEXT,\n  ReplayType.DEFAULT\n];\n\n/**\n * @const\n * @enum {number}\n */\nexport const TEXT_ALIGN = {};\nTEXT_ALIGN['left'] = 0;\nTEXT_ALIGN['end'] = 0;\nTEXT_ALIGN['center'] = 0.5;\nTEXT_ALIGN['right'] = 1;\nTEXT_ALIGN['start'] = 1;\nTEXT_ALIGN['top'] = 0;\nTEXT_ALIGN['middle'] = 0.5;\nTEXT_ALIGN['hanging'] = 0.2;\nTEXT_ALIGN['alphabetic'] = 0.8;\nTEXT_ALIGN['ideographic'] = 0.8;\nTEXT_ALIGN['bottom'] = 1;\n","/**\n * @module ol/render/canvas/Replay\n */\nimport {getUid, inherits} from '../../index.js';\nimport {UNDEFINED} from '../../functions.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {buffer, clone, coordinateRelationship, createEmpty, createOrUpdate,\n  createOrUpdateEmpty, extend, extendCoordinate, intersects} from '../../extent.js';\nimport Relationship from '../../extent/Relationship.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport {inflateCoordinates, inflateCoordinatesArray, inflateMultiCoordinatesArray} from '../../geom/flat/inflate.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {CANVAS_LINE_DASH} from '../../has.js';\nimport {isEmpty} from '../../obj.js';\nimport VectorContext from '../VectorContext.js';\nimport {drawImage, resetTransform, defaultPadding, defaultFillStyle, defaultStrokeStyle,\n  defaultMiterLimit, defaultLineWidth, defaultLineJoin, defaultLineDashOffset,\n  defaultLineDash, defaultLineCap} from '../canvas.js';\nimport CanvasInstruction from '../canvas/Instruction.js';\nimport {TEXT_ALIGN} from '../replay.js';\nimport {\n  create as createTransform,\n  compose as composeTransform,\n  apply as applyTransform,\n  setFromArray as transformSetFromArray\n} from '../../transform.js';\n\n/**\n * @constructor\n * @extends {module:ol/render/VectorContext}\n * @param {number} tolerance Tolerance.\n * @param {module:ol/extent~Extent} maxExtent Maximum extent.\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {boolean} overlaps The replay can have overlapping geometries.\n * @param {?} declutterTree Declutter tree.\n * @struct\n */\nconst CanvasReplay = function(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n  VectorContext.call(this);\n\n  /**\n   * @type {?}\n   */\n  this.declutterTree = declutterTree;\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.tolerance = tolerance;\n\n  /**\n   * @protected\n   * @const\n   * @type {module:ol/extent~Extent}\n   */\n  this.maxExtent = maxExtent;\n\n  /**\n   * @protected\n   * @type {boolean}\n   */\n  this.overlaps = overlaps;\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.pixelRatio = pixelRatio;\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.maxLineWidth = 0;\n\n  /**\n   * @protected\n   * @const\n   * @type {number}\n   */\n  this.resolution = resolution;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.alignFill_;\n\n  /**\n   * @private\n   * @type {Array.<*>}\n   */\n  this.beginGeometryInstruction1_ = null;\n\n  /**\n   * @private\n   * @type {Array.<*>}\n   */\n  this.beginGeometryInstruction2_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/extent~Extent}\n   */\n  this.bufferedMaxExtent_ = null;\n\n  /**\n   * @protected\n   * @type {Array.<*>}\n   */\n  this.instructions = [];\n\n  /**\n   * @protected\n   * @type {Array.<number>}\n   */\n  this.coordinates = [];\n\n  /**\n   * @private\n   * @type {!Object.<number,module:ol/coordinate~Coordinate|Array.<module:ol/coordinate~Coordinate>|Array.<Array.<module:ol/coordinate~Coordinate>>>}\n   */\n  this.coordinateCache_ = {};\n\n  /**\n   * @private\n   * @type {!module:ol/transform~Transform}\n   */\n  this.renderedTransform_ = createTransform();\n\n  /**\n   * @protected\n   * @type {Array.<*>}\n   */\n  this.hitDetectionInstructions = [];\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.pixelCoordinates_ = null;\n\n  /**\n   * @protected\n   * @type {module:ol/render/canvas~FillStrokeState}\n   */\n  this.state = /** @type {module:ol/render/canvas~FillStrokeState} */ ({});\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.viewRotation_ = 0;\n\n};\n\ninherits(CanvasReplay, VectorContext);\n\n\n/**\n * @type {module:ol/extent~Extent}\n */\nconst tmpExtent = createEmpty();\n\n\n/**\n * @type {!module:ol/transform~Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {module:ol/coordinate~Coordinate} p1 1st point of the background box.\n * @param {module:ol/coordinate~Coordinate} p2 2nd point of the background box.\n * @param {module:ol/coordinate~Coordinate} p3 3rd point of the background box.\n * @param {module:ol/coordinate~Coordinate} p4 4th point of the background box.\n * @param {Array.<*>} fillInstruction Fill instruction.\n * @param {Array.<*>} strokeInstruction Stroke instruction.\n */\nCanvasReplay.prototype.replayTextBackground_ = function(context, p1, p2, p3, p4,\n  fillInstruction, strokeInstruction) {\n  context.beginPath();\n  context.moveTo.apply(context, p1);\n  context.lineTo.apply(context, p2);\n  context.lineTo.apply(context, p3);\n  context.lineTo.apply(context, p4);\n  context.lineTo.apply(context, p1);\n  if (fillInstruction) {\n    this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n    this.fill_(context);\n  }\n  if (strokeInstruction) {\n    this.setStrokeStyle_(context, /** @type {Array.<*>} */ (strokeInstruction));\n    context.stroke();\n  }\n};\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} image Image.\n * @param {number} anchorX Anchor X.\n * @param {number} anchorY Anchor Y.\n * @param {module:ol/render/canvas~DeclutterGroup} declutterGroup Declutter group.\n * @param {number} height Height.\n * @param {number} opacity Opacity.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} rotation Rotation.\n * @param {number} scale Scale.\n * @param {boolean} snapToPixel Snap to pixel.\n * @param {number} width Width.\n * @param {Array.<number>} padding Padding.\n * @param {Array.<*>} fillInstruction Fill instruction.\n * @param {Array.<*>} strokeInstruction Stroke instruction.\n */\nCanvasReplay.prototype.replayImage_ = function(context, x, y, image,\n  anchorX, anchorY, declutterGroup, height, opacity, originX, originY,\n  rotation, scale, snapToPixel, width, padding, fillInstruction, strokeInstruction) {\n  const fillStroke = fillInstruction || strokeInstruction;\n  anchorX *= scale;\n  anchorY *= scale;\n  x -= anchorX;\n  y -= anchorY;\n\n  const w = (width + originX > image.width) ? image.width - originX : width;\n  const h = (height + originY > image.height) ? image.height - originY : height;\n  const boxW = padding[3] + w * scale + padding[1];\n  const boxH = padding[0] + h * scale + padding[2];\n  const boxX = x - padding[3];\n  const boxY = y - padding[0];\n\n  /** @type {module:ol/coordinate~Coordinate} */\n  let p1;\n  /** @type {module:ol/coordinate~Coordinate} */\n  let p2;\n  /** @type {module:ol/coordinate~Coordinate} */\n  let p3;\n  /** @type {module:ol/coordinate~Coordinate} */\n  let p4;\n  if (fillStroke || rotation !== 0) {\n    p1 = [boxX, boxY];\n    p2 = [boxX + boxW, boxY];\n    p3 = [boxX + boxW, boxY + boxH];\n    p4 = [boxX, boxY + boxH];\n  }\n\n  let transform = null;\n  if (rotation !== 0) {\n    const centerX = x + anchorX;\n    const centerY = y + anchorY;\n    transform = composeTransform(tmpTransform, centerX, centerY, 1, 1, rotation, -centerX, -centerY);\n\n    createOrUpdateEmpty(tmpExtent);\n    extendCoordinate(tmpExtent, applyTransform(tmpTransform, p1));\n    extendCoordinate(tmpExtent, applyTransform(tmpTransform, p2));\n    extendCoordinate(tmpExtent, applyTransform(tmpTransform, p3));\n    extendCoordinate(tmpExtent, applyTransform(tmpTransform, p4));\n  } else {\n    createOrUpdate(boxX, boxY, boxX + boxW, boxY + boxH, tmpExtent);\n  }\n  const canvas = context.canvas;\n  const strokePadding = strokeInstruction ? (strokeInstruction[2] * scale / 2) : 0;\n  const intersects =\n      tmpExtent[0] - strokePadding <= canvas.width && tmpExtent[2] + strokePadding >= 0 &&\n      tmpExtent[1] - strokePadding <= canvas.height && tmpExtent[3] + strokePadding >= 0;\n\n  if (snapToPixel) {\n    x = Math.round(x);\n    y = Math.round(y);\n  }\n\n  if (declutterGroup) {\n    if (!intersects && declutterGroup[4] == 1) {\n      return;\n    }\n    extend(declutterGroup, tmpExtent);\n    const declutterArgs = intersects ?\n      [context, transform ? transform.slice(0) : null, opacity, image, originX, originY, w, h, x, y, scale] :\n      null;\n    if (declutterArgs && fillStroke) {\n      declutterArgs.push(fillInstruction, strokeInstruction, p1, p2, p3, p4);\n    }\n    declutterGroup.push(declutterArgs);\n  } else if (intersects) {\n    if (fillStroke) {\n      this.replayTextBackground_(context, p1, p2, p3, p4,\n        /** @type {Array.<*>} */ (fillInstruction),\n        /** @type {Array.<*>} */ (strokeInstruction));\n    }\n    drawImage(context, transform, opacity, image, originX, originY, w, h, x, y, scale);\n  }\n};\n\n\n/**\n * @protected\n * @param {Array.<number>} dashArray Dash array.\n * @return {Array.<number>} Dash array with pixel ratio applied\n */\nCanvasReplay.prototype.applyPixelRatio = function(dashArray) {\n  const pixelRatio = this.pixelRatio;\n  return pixelRatio == 1 ? dashArray : dashArray.map(function(dash) {\n    return dash * pixelRatio;\n  });\n};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {boolean} closed Last input coordinate equals first.\n * @param {boolean} skipFirst Skip first coordinate.\n * @protected\n * @return {number} My end.\n */\nCanvasReplay.prototype.appendFlatCoordinates = function(flatCoordinates, offset, end, stride, closed, skipFirst) {\n\n  let myEnd = this.coordinates.length;\n  const extent = this.getBufferedMaxExtent();\n  if (skipFirst) {\n    offset += stride;\n  }\n  const lastCoord = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n  const nextCoord = [NaN, NaN];\n  let skipped = true;\n\n  let i, lastRel, nextRel;\n  for (i = offset + stride; i < end; i += stride) {\n    nextCoord[0] = flatCoordinates[i];\n    nextCoord[1] = flatCoordinates[i + 1];\n    nextRel = coordinateRelationship(extent, nextCoord);\n    if (nextRel !== lastRel) {\n      if (skipped) {\n        this.coordinates[myEnd++] = lastCoord[0];\n        this.coordinates[myEnd++] = lastCoord[1];\n      }\n      this.coordinates[myEnd++] = nextCoord[0];\n      this.coordinates[myEnd++] = nextCoord[1];\n      skipped = false;\n    } else if (nextRel === Relationship.INTERSECTING) {\n      this.coordinates[myEnd++] = nextCoord[0];\n      this.coordinates[myEnd++] = nextCoord[1];\n      skipped = false;\n    } else {\n      skipped = true;\n    }\n    lastCoord[0] = nextCoord[0];\n    lastCoord[1] = nextCoord[1];\n    lastRel = nextRel;\n  }\n\n  // Last coordinate equals first or only one point to append:\n  if ((closed && skipped) || i === offset + stride) {\n    this.coordinates[myEnd++] = lastCoord[0];\n    this.coordinates[myEnd++] = lastCoord[1];\n  }\n  return myEnd;\n};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array.<number>} replayEnds Replay ends.\n * @return {number} Offset.\n */\nCanvasReplay.prototype.drawCustomCoordinates_ = function(flatCoordinates, offset, ends, stride, replayEnds) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const replayEnd = this.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\n    replayEnds.push(replayEnd);\n    offset = end;\n  }\n  return offset;\n};\n\n\n/**\n * @inheritDoc.\n */\nCanvasReplay.prototype.drawCustom = function(geometry, feature, renderer) {\n  this.beginGeometry(geometry, feature);\n  const type = geometry.getType();\n  const stride = geometry.getStride();\n  const replayBegin = this.coordinates.length;\n  let flatCoordinates, replayEnd, replayEnds, replayEndss;\n  let offset;\n  if (type == GeometryType.MULTI_POLYGON) {\n    geometry = /** @type {module:ol/geom/MultiPolygon} */ (geometry);\n    flatCoordinates = geometry.getOrientedFlatCoordinates();\n    replayEndss = [];\n    const endss = geometry.getEndss();\n    offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      const myEnds = [];\n      offset = this.drawCustomCoordinates_(flatCoordinates, offset, endss[i], stride, myEnds);\n      replayEndss.push(myEnds);\n    }\n    this.instructions.push([CanvasInstruction.CUSTOM,\n      replayBegin, replayEndss, geometry, renderer, inflateMultiCoordinatesArray]);\n  } else if (type == GeometryType.POLYGON || type == GeometryType.MULTI_LINE_STRING) {\n    replayEnds = [];\n    flatCoordinates = (type == GeometryType.POLYGON) ?\n      /** @type {module:ol/geom/Polygon} */ (geometry).getOrientedFlatCoordinates() :\n      geometry.getFlatCoordinates();\n    offset = this.drawCustomCoordinates_(flatCoordinates, 0,\n      /** @type {module:ol/geom/Polygon|module:ol/geom/MultiLineString} */ (geometry).getEnds(),\n      stride, replayEnds);\n    this.instructions.push([CanvasInstruction.CUSTOM,\n      replayBegin, replayEnds, geometry, renderer, inflateCoordinatesArray]);\n  } else if (type == GeometryType.LINE_STRING || type == GeometryType.MULTI_POINT) {\n    flatCoordinates = geometry.getFlatCoordinates();\n    replayEnd = this.appendFlatCoordinates(\n      flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n    this.instructions.push([CanvasInstruction.CUSTOM,\n      replayBegin, replayEnd, geometry, renderer, inflateCoordinates]);\n  } else if (type == GeometryType.POINT) {\n    flatCoordinates = geometry.getFlatCoordinates();\n    this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n    replayEnd = this.coordinates.length;\n    this.instructions.push([CanvasInstruction.CUSTOM,\n      replayBegin, replayEnd, geometry, renderer]);\n  }\n  this.endGeometry(geometry, feature);\n};\n\n\n/**\n * @protected\n * @param {module:ol/geom/Geometry|module:ol/render/Feature} geometry Geometry.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nCanvasReplay.prototype.beginGeometry = function(geometry, feature) {\n  this.beginGeometryInstruction1_ = [CanvasInstruction.BEGIN_GEOMETRY, feature, 0];\n  this.instructions.push(this.beginGeometryInstruction1_);\n  this.beginGeometryInstruction2_ = [CanvasInstruction.BEGIN_GEOMETRY, feature, 0];\n  this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n};\n\n\n/**\n * @private\n * @param {CanvasRenderingContext2D} context Context.\n */\nCanvasReplay.prototype.fill_ = function(context) {\n  if (this.alignFill_) {\n    const origin = applyTransform(this.renderedTransform_, [0, 0]);\n    const repeatSize = 512 * this.pixelRatio;\n    context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n    context.rotate(this.viewRotation_);\n  }\n  context.fill();\n  if (this.alignFill_) {\n    context.setTransform.apply(context, resetTransform);\n  }\n};\n\n\n/**\n * @private\n * @param {CanvasRenderingContext2D} context Context.\n * @param {Array.<*>} instruction Instruction.\n */\nCanvasReplay.prototype.setStrokeStyle_ = function(context, instruction) {\n  context.strokeStyle = /** @type {module:ol/colorlike~ColorLike} */ (instruction[1]);\n  context.lineWidth = /** @type {number} */ (instruction[2]);\n  context.lineCap = /** @type {string} */ (instruction[3]);\n  context.lineJoin = /** @type {string} */ (instruction[4]);\n  context.miterLimit = /** @type {number} */ (instruction[5]);\n  if (CANVAS_LINE_DASH) {\n    context.lineDashOffset = /** @type {number} */ (instruction[7]);\n    context.setLineDash(/** @type {Array.<number>} */ (instruction[6]));\n  }\n};\n\n\n/**\n * @param {module:ol/render/canvas~DeclutterGroup} declutterGroup Declutter group.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nCanvasReplay.prototype.renderDeclutter_ = function(declutterGroup, feature) {\n  if (declutterGroup && declutterGroup.length > 5) {\n    const groupCount = declutterGroup[4];\n    if (groupCount == 1 || groupCount == declutterGroup.length - 5) {\n      /** @type {module:ol/structs/RBush~Entry} */\n      const box = {\n        minX: /** @type {number} */ (declutterGroup[0]),\n        minY: /** @type {number} */ (declutterGroup[1]),\n        maxX: /** @type {number} */ (declutterGroup[2]),\n        maxY: /** @type {number} */ (declutterGroup[3]),\n        value: feature\n      };\n      if (!this.declutterTree.collides(box)) {\n        this.declutterTree.insert(box);\n        for (let j = 5, jj = declutterGroup.length; j < jj; ++j) {\n          const declutterData = /** @type {Array} */ (declutterGroup[j]);\n          if (declutterData) {\n            if (declutterData.length > 11) {\n              this.replayTextBackground_(declutterData[0],\n                declutterData[13], declutterData[14], declutterData[15], declutterData[16],\n                declutterData[11], declutterData[12]);\n            }\n            drawImage.apply(undefined, declutterData);\n          }\n        }\n      }\n      declutterGroup.length = 5;\n      createOrUpdateEmpty(declutterGroup);\n    }\n  }\n};\n\n\n/**\n * @private\n * @param {CanvasRenderingContext2D} context Context.\n * @param {module:ol/transform~Transform} transform Transform.\n * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features\n *     to skip.\n * @param {Array.<*>} instructions Instructions array.\n * @param {function((module:ol/Feature|module:ol/render/Feature)): T|undefined}\n *     featureCallback Feature callback.\n * @param {module:ol/extent~Extent=} opt_hitExtent Only check features that intersect this\n *     extent.\n * @return {T|undefined} Callback result.\n * @template T\n */\nCanvasReplay.prototype.replay_ = function(\n  context, transform, skippedFeaturesHash,\n  instructions, featureCallback, opt_hitExtent) {\n  /** @type {Array.<number>} */\n  let pixelCoordinates;\n  if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n    pixelCoordinates = this.pixelCoordinates_;\n  } else {\n    if (!this.pixelCoordinates_) {\n      this.pixelCoordinates_ = [];\n    }\n    pixelCoordinates = transform2D(\n      this.coordinates, 0, this.coordinates.length, 2,\n      transform, this.pixelCoordinates_);\n    transformSetFromArray(this.renderedTransform_, transform);\n  }\n  const skipFeatures = !isEmpty(skippedFeaturesHash);\n  let i = 0; // instruction index\n  const ii = instructions.length; // end of instructions\n  let d = 0; // data index\n  let dd; // end of per-instruction data\n  let anchorX, anchorY, prevX, prevY, roundX, roundY, declutterGroup, image;\n  let pendingFill = 0;\n  let pendingStroke = 0;\n  let lastFillInstruction = null;\n  let lastStrokeInstruction = null;\n  const coordinateCache = this.coordinateCache_;\n  const viewRotation = this.viewRotation_;\n\n  const state = /** @type {module:ol/render~State} */ ({\n    context: context,\n    pixelRatio: this.pixelRatio,\n    resolution: this.resolution,\n    rotation: viewRotation\n  });\n\n  // When the batch size gets too big, performance decreases. 200 is a good\n  // balance between batch size and number of fill/stroke instructions.\n  const batchSize = this.instructions != instructions || this.overlaps ? 0 : 200;\n  let /** @type {module:ol/Feature|module:ol/render/Feature} */ feature;\n  let x, y;\n  while (i < ii) {\n    const instruction = instructions[i];\n    const type = /** @type {module:ol/render/canvas/Instruction} */ (instruction[0]);\n    switch (type) {\n      case CanvasInstruction.BEGIN_GEOMETRY:\n        feature = /** @type {module:ol/Feature|module:ol/render/Feature} */ (instruction[1]);\n        if ((skipFeatures &&\n            skippedFeaturesHash[getUid(feature).toString()]) ||\n            !feature.getGeometry()) {\n          i = /** @type {number} */ (instruction[2]);\n        } else if (opt_hitExtent !== undefined && !intersects(\n          opt_hitExtent, feature.getGeometry().getExtent())) {\n          i = /** @type {number} */ (instruction[2]) + 1;\n        } else {\n          ++i;\n        }\n        break;\n      case CanvasInstruction.BEGIN_PATH:\n        if (pendingFill > batchSize) {\n          this.fill_(context);\n          pendingFill = 0;\n        }\n        if (pendingStroke > batchSize) {\n          context.stroke();\n          pendingStroke = 0;\n        }\n        if (!pendingFill && !pendingStroke) {\n          context.beginPath();\n          prevX = prevY = NaN;\n        }\n        ++i;\n        break;\n      case CanvasInstruction.CIRCLE:\n        d = /** @type {number} */ (instruction[1]);\n        const x1 = pixelCoordinates[d];\n        const y1 = pixelCoordinates[d + 1];\n        const x2 = pixelCoordinates[d + 2];\n        const y2 = pixelCoordinates[d + 3];\n        const dx = x2 - x1;\n        const dy = y2 - y1;\n        const r = Math.sqrt(dx * dx + dy * dy);\n        context.moveTo(x1 + r, y1);\n        context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n        ++i;\n        break;\n      case CanvasInstruction.CLOSE_PATH:\n        context.closePath();\n        ++i;\n        break;\n      case CanvasInstruction.CUSTOM:\n        d = /** @type {number} */ (instruction[1]);\n        dd = instruction[2];\n        const geometry = /** @type {module:ol/geom/SimpleGeometry} */ (instruction[3]);\n        const renderer = instruction[4];\n        const fn = instruction.length == 6 ? instruction[5] : undefined;\n        state.geometry = geometry;\n        state.feature = feature;\n        if (!(i in coordinateCache)) {\n          coordinateCache[i] = [];\n        }\n        const coords = coordinateCache[i];\n        if (fn) {\n          fn(pixelCoordinates, d, dd, 2, coords);\n        } else {\n          coords[0] = pixelCoordinates[d];\n          coords[1] = pixelCoordinates[d + 1];\n          coords.length = 2;\n        }\n        renderer(coords, state);\n        ++i;\n        break;\n      case CanvasInstruction.DRAW_IMAGE:\n        d = /** @type {number} */ (instruction[1]);\n        dd = /** @type {number} */ (instruction[2]);\n        image =  /** @type {HTMLCanvasElement|HTMLVideoElement|Image} */\n            (instruction[3]);\n        // Remaining arguments in DRAW_IMAGE are in alphabetical order\n        anchorX = /** @type {number} */ (instruction[4]);\n        anchorY = /** @type {number} */ (instruction[5]);\n        declutterGroup = featureCallback ? null : /** @type {module:ol/render/canvas~DeclutterGroup} */ (instruction[6]);\n        const height = /** @type {number} */ (instruction[7]);\n        const opacity = /** @type {number} */ (instruction[8]);\n        const originX = /** @type {number} */ (instruction[9]);\n        const originY = /** @type {number} */ (instruction[10]);\n        const rotateWithView = /** @type {boolean} */ (instruction[11]);\n        let rotation = /** @type {number} */ (instruction[12]);\n        const scale = /** @type {number} */ (instruction[13]);\n        const snapToPixel = /** @type {boolean} */ (instruction[14]);\n        const width = /** @type {number} */ (instruction[15]);\n\n        let padding, backgroundFill, backgroundStroke;\n        if (instruction.length > 16) {\n          padding = /** @type {Array.<number>} */ (instruction[16]);\n          backgroundFill = /** @type {boolean} */ (instruction[17]);\n          backgroundStroke = /** @type {boolean} */ (instruction[18]);\n        } else {\n          padding = defaultPadding;\n          backgroundFill = backgroundStroke = false;\n        }\n\n        if (rotateWithView) {\n          rotation += viewRotation;\n        }\n        for (; d < dd; d += 2) {\n          this.replayImage_(context,\n            pixelCoordinates[d], pixelCoordinates[d + 1], image, anchorX, anchorY,\n            declutterGroup, height, opacity, originX, originY, rotation, scale,\n            snapToPixel, width, padding,\n            backgroundFill ? /** @type {Array.<*>} */ (lastFillInstruction) : null,\n            backgroundStroke ? /** @type {Array.<*>} */ (lastStrokeInstruction) : null);\n        }\n        this.renderDeclutter_(declutterGroup, feature);\n        ++i;\n        break;\n      case CanvasInstruction.DRAW_CHARS:\n        const begin = /** @type {number} */ (instruction[1]);\n        const end = /** @type {number} */ (instruction[2]);\n        const baseline = /** @type {number} */ (instruction[3]);\n        declutterGroup = featureCallback ? null : /** @type {module:ol/render/canvas~DeclutterGroup} */ (instruction[4]);\n        const overflow = /** @type {number} */ (instruction[5]);\n        const fillKey = /** @type {string} */ (instruction[6]);\n        const maxAngle = /** @type {number} */ (instruction[7]);\n        const measure = /** @type {function(string):number} */ (instruction[8]);\n        const offsetY = /** @type {number} */ (instruction[9]);\n        const strokeKey = /** @type {string} */ (instruction[10]);\n        const strokeWidth =  /** @type {number} */ (instruction[11]);\n        const text = /** @type {string} */ (instruction[12]);\n        const textKey = /** @type {string} */ (instruction[13]);\n        const textScale = /** @type {number} */ (instruction[14]);\n\n        const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n        const textLength = measure(text);\n        if (overflow || textLength <= pathLength) {\n          const textAlign = /** @type {module:ol~render} */ (this).textStates[textKey].textAlign;\n          const startM = (pathLength - textLength) * TEXT_ALIGN[textAlign];\n          const parts = drawTextOnPath(\n            pixelCoordinates, begin, end, 2, text, measure, startM, maxAngle);\n          if (parts) {\n            let c, cc, chars, label, part;\n            if (strokeKey) {\n              for (c = 0, cc = parts.length; c < cc; ++c) {\n                part = parts[c]; // x, y, anchorX, rotation, chunk\n                chars = /** @type {string} */ (part[4]);\n                label = /** @type {module:ol~render} */ (this).getImage(chars, textKey, '', strokeKey);\n                anchorX = /** @type {number} */ (part[2]) + strokeWidth;\n                anchorY = baseline * label.height + (0.5 - baseline) * 2 * strokeWidth - offsetY;\n                this.replayImage_(context,\n                  /** @type {number} */ (part[0]), /** @type {number} */ (part[1]), label,\n                  anchorX, anchorY, declutterGroup, label.height, 1, 0, 0,\n                  /** @type {number} */ (part[3]), textScale, false, label.width,\n                  defaultPadding, null, null);\n              }\n            }\n            if (fillKey) {\n              for (c = 0, cc = parts.length; c < cc; ++c) {\n                part = parts[c]; // x, y, anchorX, rotation, chunk\n                chars = /** @type {string} */ (part[4]);\n                label = /** @type {module:ol~render} */ (this).getImage(chars, textKey, fillKey, '');\n                anchorX = /** @type {number} */ (part[2]);\n                anchorY = baseline * label.height - offsetY;\n                this.replayImage_(context,\n                  /** @type {number} */ (part[0]), /** @type {number} */ (part[1]), label,\n                  anchorX, anchorY, declutterGroup, label.height, 1, 0, 0,\n                  /** @type {number} */ (part[3]), textScale, false, label.width,\n                  defaultPadding, null, null);\n              }\n            }\n          }\n        }\n        this.renderDeclutter_(declutterGroup, feature);\n        ++i;\n        break;\n      case CanvasInstruction.END_GEOMETRY:\n        if (featureCallback !== undefined) {\n          feature = /** @type {module:ol/Feature|module:ol/render/Feature} */ (instruction[1]);\n          const result = featureCallback(feature);\n          if (result) {\n            return result;\n          }\n        }\n        ++i;\n        break;\n      case CanvasInstruction.FILL:\n        if (batchSize) {\n          pendingFill++;\n        } else {\n          this.fill_(context);\n        }\n        ++i;\n        break;\n      case CanvasInstruction.MOVE_TO_LINE_TO:\n        d = /** @type {number} */ (instruction[1]);\n        dd = /** @type {number} */ (instruction[2]);\n        x = pixelCoordinates[d];\n        y = pixelCoordinates[d + 1];\n        roundX = (x + 0.5) | 0;\n        roundY = (y + 0.5) | 0;\n        if (roundX !== prevX || roundY !== prevY) {\n          context.moveTo(x, y);\n          prevX = roundX;\n          prevY = roundY;\n        }\n        for (d += 2; d < dd; d += 2) {\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = (x + 0.5) | 0;\n          roundY = (y + 0.5) | 0;\n          if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n            context.lineTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n        }\n        ++i;\n        break;\n      case CanvasInstruction.SET_FILL_STYLE:\n        lastFillInstruction = instruction;\n        this.alignFill_ = instruction[2];\n\n        if (pendingFill) {\n          this.fill_(context);\n          pendingFill = 0;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n        }\n\n        context.fillStyle = /** @type {module:ol/colorlike~ColorLike} */ (instruction[1]);\n        ++i;\n        break;\n      case CanvasInstruction.SET_STROKE_STYLE:\n        lastStrokeInstruction = instruction;\n        if (pendingStroke) {\n          context.stroke();\n          pendingStroke = 0;\n        }\n        this.setStrokeStyle_(context, /** @type {Array.<*>} */ (instruction));\n        ++i;\n        break;\n      case CanvasInstruction.STROKE:\n        if (batchSize) {\n          pendingStroke++;\n        } else {\n          context.stroke();\n        }\n        ++i;\n        break;\n      default:\n        ++i; // consume the instruction anyway, to avoid an infinite loop\n        break;\n    }\n  }\n  if (pendingFill) {\n    this.fill_(context);\n  }\n  if (pendingStroke) {\n    context.stroke();\n  }\n  return undefined;\n};\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {module:ol/transform~Transform} transform Transform.\n * @param {number} viewRotation View rotation.\n * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features\n *     to skip.\n */\nCanvasReplay.prototype.replay = function(\n  context, transform, viewRotation, skippedFeaturesHash) {\n  this.viewRotation_ = viewRotation;\n  this.replay_(context, transform,\n    skippedFeaturesHash, this.instructions, undefined, undefined);\n};\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {module:ol/transform~Transform} transform Transform.\n * @param {number} viewRotation View rotation.\n * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features\n *     to skip.\n * @param {function((module:ol/Feature|module:ol/render/Feature)): T=} opt_featureCallback\n *     Feature callback.\n * @param {module:ol/extent~Extent=} opt_hitExtent Only check features that intersect this\n *     extent.\n * @return {T|undefined} Callback result.\n * @template T\n */\nCanvasReplay.prototype.replayHitDetection = function(\n  context, transform, viewRotation, skippedFeaturesHash,\n  opt_featureCallback, opt_hitExtent) {\n  this.viewRotation_ = viewRotation;\n  return this.replay_(context, transform, skippedFeaturesHash,\n    this.hitDetectionInstructions, opt_featureCallback, opt_hitExtent);\n};\n\n\n/**\n * Reverse the hit detection instructions.\n */\nCanvasReplay.prototype.reverseHitDetectionInstructions = function() {\n  const hitDetectionInstructions = this.hitDetectionInstructions;\n  // step 1 - reverse array\n  hitDetectionInstructions.reverse();\n  // step 2 - reverse instructions within geometry blocks\n  let i;\n  const n = hitDetectionInstructions.length;\n  let instruction;\n  let type;\n  let begin = -1;\n  for (i = 0; i < n; ++i) {\n    instruction = hitDetectionInstructions[i];\n    type = /** @type {module:ol/render/canvas/Instruction} */ (instruction[0]);\n    if (type == CanvasInstruction.END_GEOMETRY) {\n      begin = i;\n    } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n      instruction[2] = i;\n      reverseSubArray(this.hitDetectionInstructions, begin, i);\n      begin = -1;\n    }\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasReplay.prototype.setFillStrokeStyle = function(fillStyle, strokeStyle) {\n  const state = this.state;\n  if (fillStyle) {\n    const fillStyleColor = fillStyle.getColor();\n    state.fillStyle = asColorLike(fillStyleColor ?\n      fillStyleColor : defaultFillStyle);\n  } else {\n    state.fillStyle = undefined;\n  }\n  if (strokeStyle) {\n    const strokeStyleColor = strokeStyle.getColor();\n    state.strokeStyle = asColorLike(strokeStyleColor ?\n      strokeStyleColor : defaultStrokeStyle);\n    const strokeStyleLineCap = strokeStyle.getLineCap();\n    state.lineCap = strokeStyleLineCap !== undefined ?\n      strokeStyleLineCap : defaultLineCap;\n    const strokeStyleLineDash = strokeStyle.getLineDash();\n    state.lineDash = strokeStyleLineDash ?\n      strokeStyleLineDash.slice() : defaultLineDash;\n    const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n    state.lineDashOffset = strokeStyleLineDashOffset ?\n      strokeStyleLineDashOffset : defaultLineDashOffset;\n    const strokeStyleLineJoin = strokeStyle.getLineJoin();\n    state.lineJoin = strokeStyleLineJoin !== undefined ?\n      strokeStyleLineJoin : defaultLineJoin;\n    const strokeStyleWidth = strokeStyle.getWidth();\n    state.lineWidth = strokeStyleWidth !== undefined ?\n      strokeStyleWidth : defaultLineWidth;\n    const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n    state.miterLimit = strokeStyleMiterLimit !== undefined ?\n      strokeStyleMiterLimit : defaultMiterLimit;\n\n    if (state.lineWidth > this.maxLineWidth) {\n      this.maxLineWidth = state.lineWidth;\n      // invalidate the buffered max extent cache\n      this.bufferedMaxExtent_ = null;\n    }\n  } else {\n    state.strokeStyle = undefined;\n    state.lineCap = undefined;\n    state.lineDash = null;\n    state.lineDashOffset = undefined;\n    state.lineJoin = undefined;\n    state.lineWidth = undefined;\n    state.miterLimit = undefined;\n  }\n};\n\n\n/**\n * @param {module:ol/render/canvas~FillStrokeState} state State.\n * @param {module:ol/geom/Geometry|module:ol/render/Feature} geometry Geometry.\n * @return {Array.<*>} Fill instruction.\n */\nCanvasReplay.prototype.createFill = function(state, geometry) {\n  const fillStyle = state.fillStyle;\n  const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n  if (typeof fillStyle !== 'string') {\n    // Fill is a pattern or gradient - align it!\n    fillInstruction.push(true);\n  }\n  return fillInstruction;\n};\n\n\n/**\n * @param {module:ol/render/canvas~FillStrokeState} state State.\n */\nCanvasReplay.prototype.applyStroke = function(state) {\n  this.instructions.push(this.createStroke(state));\n};\n\n\n/**\n * @param {module:ol/render/canvas~FillStrokeState} state State.\n * @return {Array.<*>} Stroke instruction.\n */\nCanvasReplay.prototype.createStroke = function(state) {\n  return [\n    CanvasInstruction.SET_STROKE_STYLE,\n    state.strokeStyle, state.lineWidth * this.pixelRatio, state.lineCap,\n    state.lineJoin, state.miterLimit,\n    this.applyPixelRatio(state.lineDash), state.lineDashOffset * this.pixelRatio\n  ];\n};\n\n\n/**\n * @param {module:ol/render/canvas~FillStrokeState} state State.\n * @param {function(this:module:ol/render/canvas/Replay, module:ol/render/canvas~FillStrokeState, (module:ol/geom/Geometry|module:ol/render/Feature)):Array.<*>} createFill Create fill.\n * @param {module:ol/geom/Geometry|module:ol/render/Feature} geometry Geometry.\n */\nCanvasReplay.prototype.updateFillStyle = function(state, createFill, geometry) {\n  const fillStyle = state.fillStyle;\n  if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n    if (fillStyle !== undefined) {\n      this.instructions.push(createFill.call(this, state, geometry));\n    }\n    state.currentFillStyle = fillStyle;\n  }\n};\n\n\n/**\n * @param {module:ol/render/canvas~FillStrokeState} state State.\n * @param {function(this:module:ol/render/canvas/Replay, module:ol/render/canvas~FillStrokeState)} applyStroke Apply stroke.\n */\nCanvasReplay.prototype.updateStrokeStyle = function(state, applyStroke) {\n  const strokeStyle = state.strokeStyle;\n  const lineCap = state.lineCap;\n  const lineDash = state.lineDash;\n  const lineDashOffset = state.lineDashOffset;\n  const lineJoin = state.lineJoin;\n  const lineWidth = state.lineWidth;\n  const miterLimit = state.miterLimit;\n  if (state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash && !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit) {\n    if (strokeStyle !== undefined) {\n      applyStroke.call(this, state);\n    }\n    state.currentStrokeStyle = strokeStyle;\n    state.currentLineCap = lineCap;\n    state.currentLineDash = lineDash;\n    state.currentLineDashOffset = lineDashOffset;\n    state.currentLineJoin = lineJoin;\n    state.currentLineWidth = lineWidth;\n    state.currentMiterLimit = miterLimit;\n  }\n};\n\n\n/**\n * @param {module:ol/geom/Geometry|module:ol/render/Feature} geometry Geometry.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nCanvasReplay.prototype.endGeometry = function(geometry, feature) {\n  this.beginGeometryInstruction1_[2] = this.instructions.length;\n  this.beginGeometryInstruction1_ = null;\n  this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n  this.beginGeometryInstruction2_ = null;\n  const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n  this.instructions.push(endGeometryInstruction);\n  this.hitDetectionInstructions.push(endGeometryInstruction);\n};\n\n\n/**\n * FIXME empty description for jsdoc\n */\nCanvasReplay.prototype.finish = UNDEFINED;\n\n\n/**\n * Get the buffered rendering extent.  Rendering will be clipped to the extent\n * provided to the constructor.  To account for symbolizers that may intersect\n * this extent, we calculate a buffered extent (e.g. based on stroke width).\n * @return {module:ol/extent~Extent} The buffered rendering extent.\n * @protected\n */\nCanvasReplay.prototype.getBufferedMaxExtent = function() {\n  if (!this.bufferedMaxExtent_) {\n    this.bufferedMaxExtent_ = clone(this.maxExtent);\n    if (this.maxLineWidth > 0) {\n      const width = this.resolution * (this.maxLineWidth + 1) / 2;\n      buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n    }\n  }\n  return this.bufferedMaxExtent_;\n};\nexport default CanvasReplay;\n","/**\n * @module ol/render/canvas/ImageReplay\n */\nimport {inherits} from '../../index.js';\nimport CanvasInstruction from '../canvas/Instruction.js';\nimport CanvasReplay from '../canvas/Replay.js';\n\n/**\n * @constructor\n * @extends {module:ol/render/canvas/Replay}\n * @param {number} tolerance Tolerance.\n * @param {module:ol/extent~Extent} maxExtent Maximum extent.\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {boolean} overlaps The replay can have overlapping geometries.\n * @param {?} declutterTree Declutter tree.\n * @struct\n */\nconst CanvasImageReplay = function(\n  tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n  CanvasReplay.call(this,\n    tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n\n  /**\n   * @private\n   * @type {module:ol/render/canvas~DeclutterGroup}\n   */\n  this.declutterGroup_ = null;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement|HTMLVideoElement|Image}\n   */\n  this.hitDetectionImage_ = null;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement|HTMLVideoElement|Image}\n   */\n  this.image_ = null;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.anchorX_ = undefined;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.anchorY_ = undefined;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.height_ = undefined;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.opacity_ = undefined;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.originX_ = undefined;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.originY_ = undefined;\n\n  /**\n   * @private\n   * @type {boolean|undefined}\n   */\n  this.rotateWithView_ = undefined;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.rotation_ = undefined;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.scale_ = undefined;\n\n  /**\n   * @private\n   * @type {boolean|undefined}\n   */\n  this.snapToPixel_ = undefined;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.width_ = undefined;\n\n};\n\ninherits(CanvasImageReplay, CanvasReplay);\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @private\n * @return {number} My end.\n */\nCanvasImageReplay.prototype.drawCoordinates_ = function(flatCoordinates, offset, end, stride) {\n  return this.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasImageReplay.prototype.drawPoint = function(pointGeometry, feature) {\n  if (!this.image_) {\n    return;\n  }\n  this.beginGeometry(pointGeometry, feature);\n  const flatCoordinates = pointGeometry.getFlatCoordinates();\n  const stride = pointGeometry.getStride();\n  const myBegin = this.coordinates.length;\n  const myEnd = this.drawCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n  this.instructions.push([\n    CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.image_,\n    // Remaining arguments to DRAW_IMAGE are in alphabetical order\n    this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n    this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n    this.scale_ * this.pixelRatio, this.snapToPixel_, this.width_\n  ]);\n  this.hitDetectionInstructions.push([\n    CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.hitDetectionImage_,\n    // Remaining arguments to DRAW_IMAGE are in alphabetical order\n    this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n    this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n    this.scale_, this.snapToPixel_, this.width_\n  ]);\n  this.endGeometry(pointGeometry, feature);\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasImageReplay.prototype.drawMultiPoint = function(multiPointGeometry, feature) {\n  if (!this.image_) {\n    return;\n  }\n  this.beginGeometry(multiPointGeometry, feature);\n  const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n  const stride = multiPointGeometry.getStride();\n  const myBegin = this.coordinates.length;\n  const myEnd = this.drawCoordinates_(\n    flatCoordinates, 0, flatCoordinates.length, stride);\n  this.instructions.push([\n    CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.image_,\n    // Remaining arguments to DRAW_IMAGE are in alphabetical order\n    this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n    this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n    this.scale_ * this.pixelRatio, this.snapToPixel_, this.width_\n  ]);\n  this.hitDetectionInstructions.push([\n    CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.hitDetectionImage_,\n    // Remaining arguments to DRAW_IMAGE are in alphabetical order\n    this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n    this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n    this.scale_, this.snapToPixel_, this.width_\n  ]);\n  this.endGeometry(multiPointGeometry, feature);\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasImageReplay.prototype.finish = function() {\n  this.reverseHitDetectionInstructions();\n  // FIXME this doesn't really protect us against further calls to draw*Geometry\n  this.anchorX_ = undefined;\n  this.anchorY_ = undefined;\n  this.hitDetectionImage_ = null;\n  this.image_ = null;\n  this.height_ = undefined;\n  this.scale_ = undefined;\n  this.opacity_ = undefined;\n  this.originX_ = undefined;\n  this.originY_ = undefined;\n  this.rotateWithView_ = undefined;\n  this.rotation_ = undefined;\n  this.snapToPixel_ = undefined;\n  this.width_ = undefined;\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasImageReplay.prototype.setImageStyle = function(imageStyle, declutterGroup) {\n  const anchor = imageStyle.getAnchor();\n  const size = imageStyle.getSize();\n  const hitDetectionImage = imageStyle.getHitDetectionImage(1);\n  const image = imageStyle.getImage(1);\n  const origin = imageStyle.getOrigin();\n  this.anchorX_ = anchor[0];\n  this.anchorY_ = anchor[1];\n  this.declutterGroup_ = /** @type {module:ol/render/canvas~DeclutterGroup} */ (declutterGroup);\n  this.hitDetectionImage_ = hitDetectionImage;\n  this.image_ = image;\n  this.height_ = size[1];\n  this.opacity_ = imageStyle.getOpacity();\n  this.originX_ = origin[0];\n  this.originY_ = origin[1];\n  this.rotateWithView_ = imageStyle.getRotateWithView();\n  this.rotation_ = imageStyle.getRotation();\n  this.scale_ = imageStyle.getScale();\n  this.snapToPixel_ = imageStyle.getSnapToPixel();\n  this.width_ = size[0];\n};\nexport default CanvasImageReplay;\n","/**\n * @module ol/render/canvas/LineStringReplay\n */\nimport {inherits} from '../../index.js';\nimport CanvasInstruction, {strokeInstruction, beginPathInstruction} from '../canvas/Instruction.js';\nimport CanvasReplay from '../canvas/Replay.js';\n\n/**\n * @constructor\n * @extends {module:ol/render/canvas/Replay}\n * @param {number} tolerance Tolerance.\n * @param {module:ol/extent~Extent} maxExtent Maximum extent.\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {boolean} overlaps The replay can have overlapping geometries.\n * @param {?} declutterTree Declutter tree.\n * @struct\n */\nconst CanvasLineStringReplay = function(\n  tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n  CanvasReplay.call(this,\n    tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n};\n\ninherits(CanvasLineStringReplay, CanvasReplay);\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @private\n * @return {number} end.\n */\nCanvasLineStringReplay.prototype.drawFlatCoordinates_ = function(flatCoordinates, offset, end, stride) {\n  const myBegin = this.coordinates.length;\n  const myEnd = this.appendFlatCoordinates(\n    flatCoordinates, offset, end, stride, false, false);\n  const moveToLineToInstruction = [CanvasInstruction.MOVE_TO_LINE_TO, myBegin, myEnd];\n  this.instructions.push(moveToLineToInstruction);\n  this.hitDetectionInstructions.push(moveToLineToInstruction);\n  return end;\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasLineStringReplay.prototype.drawLineString = function(lineStringGeometry, feature) {\n  const state = this.state;\n  const strokeStyle = state.strokeStyle;\n  const lineWidth = state.lineWidth;\n  if (strokeStyle === undefined || lineWidth === undefined) {\n    return;\n  }\n  this.updateStrokeStyle(state, this.applyStroke);\n  this.beginGeometry(lineStringGeometry, feature);\n  this.hitDetectionInstructions.push([\n    CanvasInstruction.SET_STROKE_STYLE,\n    state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n    state.miterLimit, state.lineDash, state.lineDashOffset\n  ], beginPathInstruction);\n  const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n  const stride = lineStringGeometry.getStride();\n  this.drawFlatCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n  this.hitDetectionInstructions.push(strokeInstruction);\n  this.endGeometry(lineStringGeometry, feature);\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasLineStringReplay.prototype.drawMultiLineString = function(multiLineStringGeometry, feature) {\n  const state = this.state;\n  const strokeStyle = state.strokeStyle;\n  const lineWidth = state.lineWidth;\n  if (strokeStyle === undefined || lineWidth === undefined) {\n    return;\n  }\n  this.updateStrokeStyle(state, this.applyStroke);\n  this.beginGeometry(multiLineStringGeometry, feature);\n  this.hitDetectionInstructions.push([\n    CanvasInstruction.SET_STROKE_STYLE,\n    state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n    state.miterLimit, state.lineDash, state.lineDashOffset\n  ], beginPathInstruction);\n  const ends = multiLineStringGeometry.getEnds();\n  const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n  const stride = multiLineStringGeometry.getStride();\n  let offset = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    offset = this.drawFlatCoordinates_(flatCoordinates, offset, ends[i], stride);\n  }\n  this.hitDetectionInstructions.push(strokeInstruction);\n  this.endGeometry(multiLineStringGeometry, feature);\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasLineStringReplay.prototype.finish = function() {\n  const state = this.state;\n  if (state.lastStroke != undefined && state.lastStroke != this.coordinates.length) {\n    this.instructions.push(strokeInstruction);\n  }\n  this.reverseHitDetectionInstructions();\n  this.state = null;\n};\n\n\n/**\n * @inheritDoc.\n */\nCanvasLineStringReplay.prototype.applyStroke = function(state) {\n  if (state.lastStroke != undefined && state.lastStroke != this.coordinates.length) {\n    this.instructions.push(strokeInstruction);\n    state.lastStroke = this.coordinates.length;\n  }\n  state.lastStroke = 0;\n  CanvasReplay.prototype.applyStroke.call(this, state);\n  this.instructions.push(beginPathInstruction);\n};\nexport default CanvasLineStringReplay;\n","/**\n * @module ol/render/canvas/PolygonReplay\n */\nimport {inherits} from '../../index.js';\nimport {asString} from '../../color.js';\nimport {snap} from '../../geom/flat/simplify.js';\nimport {defaultFillStyle} from '../canvas.js';\nimport CanvasInstruction, {\n  fillInstruction, strokeInstruction, beginPathInstruction, closePathInstruction\n} from '../canvas/Instruction.js';\nimport CanvasReplay from '../canvas/Replay.js';\n\n\n/**\n * @constructor\n * @extends {module:ol/render/canvas/Replay}\n * @param {number} tolerance Tolerance.\n * @param {module:ol/extent~Extent} maxExtent Maximum extent.\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {boolean} overlaps The replay can have overlapping geometries.\n * @param {?} declutterTree Declutter tree.\n * @struct\n */\nconst CanvasPolygonReplay = function(\n  tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n  CanvasReplay.call(this,\n    tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n};\n\ninherits(CanvasPolygonReplay, CanvasReplay);\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @private\n * @return {number} End.\n */\nCanvasPolygonReplay.prototype.drawFlatCoordinatess_ = function(flatCoordinates, offset, ends, stride) {\n  const state = this.state;\n  const fill = state.fillStyle !== undefined;\n  const stroke = state.strokeStyle != undefined;\n  const numEnds = ends.length;\n  this.instructions.push(beginPathInstruction);\n  this.hitDetectionInstructions.push(beginPathInstruction);\n  for (let i = 0; i < numEnds; ++i) {\n    const end = ends[i];\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatCoordinates(flatCoordinates, offset, end, stride, true, !stroke);\n    const moveToLineToInstruction = [CanvasInstruction.MOVE_TO_LINE_TO, myBegin, myEnd];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    if (stroke) {\n      // Performance optimization: only call closePath() when we have a stroke.\n      // Otherwise the ring is closed already (see appendFlatCoordinates above).\n      this.instructions.push(closePathInstruction);\n      this.hitDetectionInstructions.push(closePathInstruction);\n    }\n    offset = end;\n  }\n  this.hitDetectionInstructions.push(fillInstruction);\n  if (fill) {\n    this.instructions.push(fillInstruction);\n  }\n  if (stroke) {\n    this.instructions.push(strokeInstruction);\n    this.hitDetectionInstructions.push(strokeInstruction);\n  }\n  return offset;\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasPolygonReplay.prototype.drawCircle = function(circleGeometry, feature) {\n  const state = this.state;\n  const fillStyle = state.fillStyle;\n  const strokeStyle = state.strokeStyle;\n  if (fillStyle === undefined && strokeStyle === undefined) {\n    return;\n  }\n  this.setFillStrokeStyles_(circleGeometry);\n  this.beginGeometry(circleGeometry, feature);\n  // always fill the circle for hit detection\n  this.hitDetectionInstructions.push([\n    CanvasInstruction.SET_FILL_STYLE,\n    asString(defaultFillStyle)\n  ]);\n  if (state.strokeStyle !== undefined) {\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n      state.miterLimit, state.lineDash, state.lineDashOffset\n    ]);\n  }\n  const flatCoordinates = circleGeometry.getFlatCoordinates();\n  const stride = circleGeometry.getStride();\n  const myBegin = this.coordinates.length;\n  this.appendFlatCoordinates(\n    flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n  const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n  this.instructions.push(beginPathInstruction, circleInstruction);\n  this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n  this.hitDetectionInstructions.push(fillInstruction);\n  if (state.fillStyle !== undefined) {\n    this.instructions.push(fillInstruction);\n  }\n  if (state.strokeStyle !== undefined) {\n    this.instructions.push(strokeInstruction);\n    this.hitDetectionInstructions.push(strokeInstruction);\n  }\n  this.endGeometry(circleGeometry, feature);\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasPolygonReplay.prototype.drawPolygon = function(polygonGeometry, feature) {\n  const state = this.state;\n  this.setFillStrokeStyles_(polygonGeometry);\n  this.beginGeometry(polygonGeometry, feature);\n  // always fill the polygon for hit detection\n  this.hitDetectionInstructions.push([\n    CanvasInstruction.SET_FILL_STYLE,\n    asString(defaultFillStyle)]\n  );\n  if (state.strokeStyle !== undefined) {\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n      state.miterLimit, state.lineDash, state.lineDashOffset\n    ]);\n  }\n  const ends = polygonGeometry.getEnds();\n  const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n  const stride = polygonGeometry.getStride();\n  this.drawFlatCoordinatess_(flatCoordinates, 0, ends, stride);\n  this.endGeometry(polygonGeometry, feature);\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasPolygonReplay.prototype.drawMultiPolygon = function(multiPolygonGeometry, feature) {\n  const state = this.state;\n  const fillStyle = state.fillStyle;\n  const strokeStyle = state.strokeStyle;\n  if (fillStyle === undefined && strokeStyle === undefined) {\n    return;\n  }\n  this.setFillStrokeStyles_(multiPolygonGeometry);\n  this.beginGeometry(multiPolygonGeometry, feature);\n  // always fill the multi-polygon for hit detection\n  this.hitDetectionInstructions.push([\n    CanvasInstruction.SET_FILL_STYLE,\n    asString(defaultFillStyle)\n  ]);\n  if (state.strokeStyle !== undefined) {\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n      state.miterLimit, state.lineDash, state.lineDashOffset\n    ]);\n  }\n  const endss = multiPolygonGeometry.getEndss();\n  const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n  const stride = multiPolygonGeometry.getStride();\n  let offset = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = this.drawFlatCoordinatess_(flatCoordinates, offset, endss[i], stride);\n  }\n  this.endGeometry(multiPolygonGeometry, feature);\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasPolygonReplay.prototype.finish = function() {\n  this.reverseHitDetectionInstructions();\n  this.state = null;\n  // We want to preserve topology when drawing polygons.  Polygons are\n  // simplified using quantization and point elimination. However, we might\n  // have received a mix of quantized and non-quantized geometries, so ensure\n  // that all are quantized by quantizing all coordinates in the batch.\n  const tolerance = this.tolerance;\n  if (tolerance !== 0) {\n    const coordinates = this.coordinates;\n    for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n      coordinates[i] = snap(coordinates[i], tolerance);\n    }\n  }\n};\n\n\n/**\n * @private\n * @param {module:ol/geom/Geometry|module:ol/render/Feature} geometry Geometry.\n */\nCanvasPolygonReplay.prototype.setFillStrokeStyles_ = function(geometry) {\n  const state = this.state;\n  const fillStyle = state.fillStyle;\n  if (fillStyle !== undefined) {\n    this.updateFillStyle(state, this.createFill, geometry);\n  }\n  if (state.strokeStyle !== undefined) {\n    this.updateStrokeStyle(state, this.applyStroke);\n  }\n};\nexport default CanvasPolygonReplay;\n","/**\n * @module ol/geom/flat/straightchunk\n */\n\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array.<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n","/**\n * @module ol/style/TextPlacement\n */\n\n/**\n * Text placement. One of `'point'`, `'line'`. Default is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n * @enum {string}\n */\nexport default {\n  POINT: 'point',\n  LINE: 'line'\n};\n","/**\n * @module ol/render/canvas/TextReplay\n */\nimport {getUid, inherits} from '../../index.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport {CANVAS_LINE_DASH} from '../../has.js';\nimport {labelCache, measureTextWidth, defaultTextAlign, measureTextHeight, defaultPadding, defaultLineCap, defaultLineDashOffset, defaultLineDash, defaultLineJoin, defaultFillStyle, checkFont, defaultFont, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, defaultTextBaseline} from '../canvas.js';\nimport CanvasInstruction from '../canvas/Instruction.js';\nimport CanvasReplay from '../canvas/Replay.js';\nimport {TEXT_ALIGN} from '../replay.js';\nimport TextPlacement from '../../style/TextPlacement.js';\n\n/**\n * @constructor\n * @extends {module:ol/render/canvas/Replay}\n * @param {number} tolerance Tolerance.\n * @param {module:ol/extent~Extent} maxExtent Maximum extent.\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {boolean} overlaps The replay can have overlapping geometries.\n * @param {?} declutterTree Declutter tree.\n * @struct\n */\nconst CanvasTextReplay = function(\n  tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n  CanvasReplay.call(this,\n    tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n\n  /**\n   * @private\n   * @type {module:ol/render/canvas~DeclutterGroup}\n   */\n  this.declutterGroup_;\n\n  /**\n   * @private\n   * @type {Array.<HTMLCanvasElement>}\n   */\n  this.labels_ = null;\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.text_ = '';\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.textOffsetX_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.textOffsetY_ = 0;\n\n  /**\n   * @private\n   * @type {boolean|undefined}\n   */\n  this.textRotateWithView_ = undefined;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.textRotation_ = 0;\n\n  /**\n   * @private\n   * @type {?module:ol/render/canvas~FillState}\n   */\n  this.textFillState_ = null;\n\n  /**\n   * @type {!Object.<string, module:ol/render/canvas~FillState>}\n   */\n  this.fillStates = {};\n\n  /**\n   * @private\n   * @type {?module:ol/render/canvas~StrokeState}\n   */\n  this.textStrokeState_ = null;\n\n  /**\n   * @type {!Object.<string, module:ol/render/canvas~StrokeState>}\n   */\n  this.strokeStates = {};\n\n  /**\n   * @private\n   * @type {module:ol/render/canvas~TextState}\n   */\n  this.textState_ = /** @type {module:ol/render/canvas~TextState} */ ({});\n\n  /**\n   * @type {!Object.<string, module:ol/render/canvas~TextState>}\n   */\n  this.textStates = {};\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.textKey_ = '';\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.fillKey_ = '';\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.strokeKey_ = '';\n\n  /**\n   * @private\n   * @type {Object.<string, Object.<string, number>>}\n   */\n  this.widths_ = {};\n\n  labelCache.prune();\n\n};\n\ninherits(CanvasTextReplay, CanvasReplay);\n\n\n/**\n * @param {string} font Font to use for measuring.\n * @param {Array.<string>} lines Lines to measure.\n * @param {Array.<number>} widths Array will be populated with the widths of\n * each line.\n * @return {number} Width of the whole text.\n */\nexport function measureTextWidths(font, lines, widths) {\n  const numLines = lines.length;\n  let width = 0;\n  for (let i = 0; i < numLines; ++i) {\n    const currentWidth = measureTextWidth(font, lines[i]);\n    width = Math.max(width, currentWidth);\n    widths.push(currentWidth);\n  }\n  return width;\n}\n\n\n/**\n * @inheritDoc\n */\nCanvasTextReplay.prototype.drawText = function(geometry, feature) {\n  const fillState = this.textFillState_;\n  const strokeState = this.textStrokeState_;\n  const textState = this.textState_;\n  if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n    return;\n  }\n\n  let begin = this.coordinates.length;\n\n  const geometryType = geometry.getType();\n  let flatCoordinates = null;\n  let end = 2;\n  let stride = 2;\n  let i, ii;\n\n  if (textState.placement === TextPlacement.LINE) {\n    if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n      return;\n    }\n    let ends;\n    flatCoordinates = geometry.getFlatCoordinates();\n    stride = geometry.getStride();\n    if (geometryType == GeometryType.LINE_STRING) {\n      ends = [flatCoordinates.length];\n    } else if (geometryType == GeometryType.MULTI_LINE_STRING) {\n      ends = geometry.getEnds();\n    } else if (geometryType == GeometryType.POLYGON) {\n      ends = geometry.getEnds().slice(0, 1);\n    } else if (geometryType == GeometryType.MULTI_POLYGON) {\n      const endss = geometry.getEndss();\n      ends = [];\n      for (i = 0, ii = endss.length; i < ii; ++i) {\n        ends.push(endss[i][0]);\n      }\n    }\n    this.beginGeometry(geometry, feature);\n    const textAlign = textState.textAlign;\n    let flatOffset = 0;\n    let flatEnd;\n    for (let o = 0, oo = ends.length; o < oo; ++o) {\n      if (textAlign == undefined) {\n        const range = matchingChunk(textState.maxAngle, flatCoordinates, flatOffset, ends[o], stride);\n        flatOffset = range[0];\n        flatEnd = range[1];\n      } else {\n        flatEnd = ends[o];\n      }\n      for (i = flatOffset; i < flatEnd; i += stride) {\n        this.coordinates.push(flatCoordinates[i], flatCoordinates[i + 1]);\n      }\n      end = this.coordinates.length;\n      flatOffset = ends[o];\n      this.drawChars_(begin, end, this.declutterGroup_);\n      begin = end;\n    }\n    this.endGeometry(geometry, feature);\n\n  } else {\n    const label = this.getImage(this.text_, this.textKey_, this.fillKey_, this.strokeKey_);\n    const width = label.width / this.pixelRatio;\n    switch (geometryType) {\n      case GeometryType.POINT:\n      case GeometryType.MULTI_POINT:\n        flatCoordinates = geometry.getFlatCoordinates();\n        end = flatCoordinates.length;\n        break;\n      case GeometryType.LINE_STRING:\n        flatCoordinates = /** @type {module:ol/geom/LineString} */ (geometry).getFlatMidpoint();\n        break;\n      case GeometryType.CIRCLE:\n        flatCoordinates = /** @type {module:ol/geom/Circle} */ (geometry).getCenter();\n        break;\n      case GeometryType.MULTI_LINE_STRING:\n        flatCoordinates = /** @type {module:ol/geom/MultiLineString} */ (geometry).getFlatMidpoints();\n        end = flatCoordinates.length;\n        break;\n      case GeometryType.POLYGON:\n        flatCoordinates = /** @type {module:ol/geom/Polygon} */ (geometry).getFlatInteriorPoint();\n        if (!textState.overflow && flatCoordinates[2] / this.resolution < width) {\n          return;\n        }\n        stride = 3;\n        break;\n      case GeometryType.MULTI_POLYGON:\n        const interiorPoints = /** @type {module:ol/geom/MultiPolygon} */ (geometry).getFlatInteriorPoints();\n        flatCoordinates = [];\n        for (i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n          if (textState.overflow || interiorPoints[i + 2] / this.resolution >= width) {\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n        }\n        end = flatCoordinates.length;\n        if (end == 0) {\n          return;\n        }\n        break;\n      default:\n    }\n    end = this.appendFlatCoordinates(flatCoordinates, 0, end, stride, false, false);\n    if (textState.backgroundFill || textState.backgroundStroke) {\n      this.setFillStrokeStyle(textState.backgroundFill, textState.backgroundStroke);\n      if (textState.backgroundFill) {\n        this.updateFillStyle(this.state, this.createFill, geometry);\n        this.hitDetectionInstructions.push(this.createFill(this.state, geometry));\n      }\n      if (textState.backgroundStroke) {\n        this.updateStrokeStyle(this.state, this.applyStroke);\n        this.hitDetectionInstructions.push(this.createStroke(this.state));\n      }\n    }\n    this.beginGeometry(geometry, feature);\n    this.drawTextImage_(label, begin, end);\n    this.endGeometry(geometry, feature);\n  }\n};\n\n\n/**\n * @param {string} text Text.\n * @param {string} textKey Text style key.\n * @param {string} fillKey Fill style key.\n * @param {string} strokeKey Stroke style key.\n * @return {HTMLCanvasElement} Image.\n */\nCanvasTextReplay.prototype.getImage = function(text, textKey, fillKey, strokeKey) {\n  let label;\n  const key = strokeKey + textKey + text + fillKey + this.pixelRatio;\n\n  if (!labelCache.containsKey(key)) {\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] || this.textStrokeState_ : null;\n    const fillState = fillKey ? this.fillStates[fillKey] || this.textFillState_ : null;\n    const textState = this.textStates[textKey] || this.textState_;\n    const pixelRatio = this.pixelRatio;\n    const scale = textState.scale * pixelRatio;\n    const align =  TEXT_ALIGN[textState.textAlign || defaultTextAlign];\n    const strokeWidth = strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const lines = text.split('\\n');\n    const numLines = lines.length;\n    const widths = [];\n    const width = measureTextWidths(textState.font, lines, widths);\n    const lineHeight = measureTextHeight(textState.font);\n    const height = lineHeight * numLines;\n    const renderWidth = (width + strokeWidth);\n    const context = createCanvasContext2D(\n      Math.ceil(renderWidth * scale),\n      Math.ceil((height + strokeWidth) * scale));\n    label = context.canvas;\n    labelCache.set(key, label);\n    if (scale != 1) {\n      context.scale(scale, scale);\n    }\n    context.font = textState.font;\n    if (strokeKey) {\n      context.strokeStyle = strokeState.strokeStyle;\n      context.lineWidth = strokeWidth;\n      context.lineCap = strokeState.lineCap;\n      context.lineJoin = strokeState.lineJoin;\n      context.miterLimit = strokeState.miterLimit;\n      if (CANVAS_LINE_DASH && strokeState.lineDash.length) {\n        context.setLineDash(strokeState.lineDash);\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n    }\n    if (fillKey) {\n      context.fillStyle = fillState.fillStyle;\n    }\n    context.textBaseline = 'middle';\n    context.textAlign = 'center';\n    const leftRight = (0.5 - align);\n    const x = align * label.width / scale + leftRight * strokeWidth;\n    let i;\n    if (strokeKey) {\n      for (i = 0; i < numLines; ++i) {\n        context.strokeText(lines[i], x + leftRight * widths[i], 0.5 * (strokeWidth + lineHeight) + i * lineHeight);\n      }\n    }\n    if (fillKey) {\n      for (i = 0; i < numLines; ++i) {\n        context.fillText(lines[i], x + leftRight * widths[i], 0.5 * (strokeWidth + lineHeight) + i * lineHeight);\n      }\n    }\n  }\n  return labelCache.get(key);\n};\n\n\n/**\n * @private\n * @param {HTMLCanvasElement} label Label.\n * @param {number} begin Begin.\n * @param {number} end End.\n */\nCanvasTextReplay.prototype.drawTextImage_ = function(label, begin, end) {\n  const textState = this.textState_;\n  const strokeState = this.textStrokeState_;\n  const pixelRatio = this.pixelRatio;\n  const align = TEXT_ALIGN[textState.textAlign || defaultTextAlign];\n  const baseline = TEXT_ALIGN[textState.textBaseline];\n  const strokeWidth = strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n  const anchorX = align * label.width / pixelRatio + 2 * (0.5 - align) * strokeWidth;\n  const anchorY = baseline * label.height / pixelRatio + 2 * (0.5 - baseline) * strokeWidth;\n  this.instructions.push([CanvasInstruction.DRAW_IMAGE, begin, end,\n    label, (anchorX - this.textOffsetX_) * pixelRatio, (anchorY - this.textOffsetY_) * pixelRatio,\n    this.declutterGroup_, label.height, 1, 0, 0, this.textRotateWithView_, this.textRotation_,\n    1, true, label.width,\n    textState.padding == defaultPadding ?\n      defaultPadding : textState.padding.map(function(p) {\n        return p * pixelRatio;\n      }),\n    !!textState.backgroundFill, !!textState.backgroundStroke\n  ]);\n  this.hitDetectionInstructions.push([CanvasInstruction.DRAW_IMAGE, begin, end,\n    label, (anchorX - this.textOffsetX_) * pixelRatio, (anchorY - this.textOffsetY_) * pixelRatio,\n    this.declutterGroup_, label.height, 1, 0, 0, this.textRotateWithView_, this.textRotation_,\n    1 / pixelRatio, true, label.width, textState.padding,\n    !!textState.backgroundFill, !!textState.backgroundStroke\n  ]);\n};\n\n\n/**\n * @private\n * @param {number} begin Begin.\n * @param {number} end End.\n * @param {module:ol/render/canvas~DeclutterGroup} declutterGroup Declutter group.\n */\nCanvasTextReplay.prototype.drawChars_ = function(begin, end, declutterGroup) {\n  const strokeState = this.textStrokeState_;\n  const textState = this.textState_;\n  const fillState = this.textFillState_;\n\n  const strokeKey = this.strokeKey_;\n  if (strokeState) {\n    if (!(strokeKey in this.strokeStates)) {\n      this.strokeStates[strokeKey] = /** @type {module:ol/render/canvas~StrokeState} */ ({\n        strokeStyle: strokeState.strokeStyle,\n        lineCap: strokeState.lineCap,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineWidth: strokeState.lineWidth,\n        lineJoin: strokeState.lineJoin,\n        miterLimit: strokeState.miterLimit,\n        lineDash: strokeState.lineDash\n      });\n    }\n  }\n  const textKey = this.textKey_;\n  if (!(this.textKey_ in this.textStates)) {\n    this.textStates[this.textKey_] = /** @type {module:ol/render/canvas~TextState} */ ({\n      font: textState.font,\n      textAlign: textState.textAlign || defaultTextAlign,\n      scale: textState.scale\n    });\n  }\n  const fillKey = this.fillKey_;\n  if (fillState) {\n    if (!(fillKey in this.fillStates)) {\n      this.fillStates[fillKey] = /** @type {module:ol/render/canvas~FillState} */ ({\n        fillStyle: fillState.fillStyle\n      });\n    }\n  }\n\n  const pixelRatio = this.pixelRatio;\n  const baseline = TEXT_ALIGN[textState.textBaseline];\n\n  const offsetY = this.textOffsetY_ * pixelRatio;\n  const text = this.text_;\n  const font = textState.font;\n  const textScale = textState.scale;\n  const strokeWidth = strokeState ? strokeState.lineWidth * textScale / 2 : 0;\n  let widths = this.widths_[font];\n  if (!widths) {\n    this.widths_[font] = widths = {};\n  }\n  this.instructions.push([CanvasInstruction.DRAW_CHARS,\n    begin, end, baseline, declutterGroup,\n    textState.overflow, fillKey, textState.maxAngle,\n    function(text) {\n      let width = widths[text];\n      if (!width) {\n        width = widths[text] = measureTextWidth(font, text);\n      }\n      return width * textScale * pixelRatio;\n    },\n    offsetY, strokeKey, strokeWidth * pixelRatio, text, textKey, 1\n  ]);\n  this.hitDetectionInstructions.push([CanvasInstruction.DRAW_CHARS,\n    begin, end, baseline, declutterGroup,\n    textState.overflow, fillKey, textState.maxAngle,\n    function(text) {\n      let width = widths[text];\n      if (!width) {\n        width = widths[text] = measureTextWidth(font, text);\n      }\n      return width * textScale;\n    },\n    offsetY, strokeKey, strokeWidth, text, textKey, 1 / pixelRatio\n  ]);\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasTextReplay.prototype.setTextStyle = function(textStyle, declutterGroup) {\n  let textState, fillState, strokeState;\n  if (!textStyle) {\n    this.text_ = '';\n  } else {\n    this.declutterGroup_ = /** @type {module:ol/render/canvas~DeclutterGroup} */ (declutterGroup);\n\n    const textFillStyle = textStyle.getFill();\n    if (!textFillStyle) {\n      fillState = this.textFillState_ = null;\n    } else {\n      fillState = this.textFillState_;\n      if (!fillState) {\n        fillState = this.textFillState_ = /** @type {module:ol/render/canvas~FillState} */ ({});\n      }\n      fillState.fillStyle = asColorLike(\n        textFillStyle.getColor() || defaultFillStyle);\n    }\n\n    const textStrokeStyle = textStyle.getStroke();\n    if (!textStrokeStyle) {\n      strokeState = this.textStrokeState_ = null;\n    } else {\n      strokeState = this.textStrokeState_;\n      if (!strokeState) {\n        strokeState = this.textStrokeState_ = /** @type {module:ol/render/canvas~StrokeState} */ ({});\n      }\n      const lineDash = textStrokeStyle.getLineDash();\n      const lineDashOffset = textStrokeStyle.getLineDashOffset();\n      const lineWidth = textStrokeStyle.getWidth();\n      const miterLimit = textStrokeStyle.getMiterLimit();\n      strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n      strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n      strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n      strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n      strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n      strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n      strokeState.strokeStyle = asColorLike(\n        textStrokeStyle.getColor() || defaultStrokeStyle);\n    }\n\n    textState = this.textState_;\n    const font = textStyle.getFont() || defaultFont;\n    checkFont(font);\n    const textScale = textStyle.getScale();\n    textState.overflow = textStyle.getOverflow();\n    textState.font = font;\n    textState.maxAngle = textStyle.getMaxAngle();\n    textState.placement = textStyle.getPlacement();\n    textState.textAlign = textStyle.getTextAlign();\n    textState.textBaseline = textStyle.getTextBaseline() || defaultTextBaseline;\n    textState.backgroundFill = textStyle.getBackgroundFill();\n    textState.backgroundStroke = textStyle.getBackgroundStroke();\n    textState.padding = textStyle.getPadding() || defaultPadding;\n    textState.scale = textScale === undefined ? 1 : textScale;\n\n    const textOffsetX = textStyle.getOffsetX();\n    const textOffsetY = textStyle.getOffsetY();\n    const textRotateWithView = textStyle.getRotateWithView();\n    const textRotation = textStyle.getRotation();\n    this.text_ = textStyle.getText() || '';\n    this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n    this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n    this.textRotateWithView_ = textRotateWithView === undefined ? false : textRotateWithView;\n    this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n    this.strokeKey_ = strokeState ?\n      (typeof strokeState.strokeStyle == 'string' ? strokeState.strokeStyle : getUid(strokeState.strokeStyle)) +\n      strokeState.lineCap + strokeState.lineDashOffset + '|' + strokeState.lineWidth +\n      strokeState.lineJoin + strokeState.miterLimit + '[' + strokeState.lineDash.join() + ']' :\n      '';\n    this.textKey_ = textState.font + textState.scale + (textState.textAlign || '?');\n    this.fillKey_ = fillState ?\n      (typeof fillState.fillStyle == 'string' ? fillState.fillStyle : ('|' + getUid(fillState.fillStyle))) :\n      '';\n  }\n};\nexport default CanvasTextReplay;\n","/**\n * @module ol/render/canvas/ReplayGroup\n */\nimport {inherits} from '../../index.js';\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {isEmpty} from '../../obj.js';\nimport ReplayGroup from '../ReplayGroup.js';\nimport ReplayType from '../ReplayType.js';\nimport CanvasReplay from '../canvas/Replay.js';\nimport CanvasImageReplay from '../canvas/ImageReplay.js';\nimport CanvasLineStringReplay from '../canvas/LineStringReplay.js';\nimport CanvasPolygonReplay from '../canvas/PolygonReplay.js';\nimport CanvasTextReplay from '../canvas/TextReplay.js';\nimport {ORDER} from '../replay.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\n\n\n/**\n * @type {Object.<module:ol/render/ReplayType,\n *                function(new: module:ol/render/canvas/Replay, number, module:ol/extent~Extent,\n *                number, number, boolean, Array.<module:ol/render/canvas~DeclutterGroup>)>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': CanvasPolygonReplay,\n  'Default': CanvasReplay,\n  'Image': CanvasImageReplay,\n  'LineString': CanvasLineStringReplay,\n  'Polygon': CanvasPolygonReplay,\n  'Text': CanvasTextReplay\n};\n\n\n/**\n * @constructor\n * @extends {module:ol/render/ReplayGroup}\n * @param {number} tolerance Tolerance.\n * @param {module:ol/extent~Extent} maxExtent Max extent.\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {boolean} overlaps The replay group can have overlapping geometries.\n * @param {?} declutterTree Declutter tree\n * for declutter processing in postrender.\n * @param {number=} opt_renderBuffer Optional rendering buffer.\n * @struct\n */\nconst CanvasReplayGroup = function(\n  tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree, opt_renderBuffer) {\n  ReplayGroup.call(this);\n\n  /**\n   * Declutter tree.\n   * @private\n   */\n  this.declutterTree_ = declutterTree;\n\n  /**\n   * @type {module:ol/render/canvas~DeclutterGroup}\n   * @private\n   */\n  this.declutterGroup_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.tolerance_ = tolerance;\n\n  /**\n   * @private\n   * @type {module:ol/extent~Extent}\n   */\n  this.maxExtent_ = maxExtent;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.overlaps_ = overlaps;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.pixelRatio_ = pixelRatio;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.resolution_ = resolution;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.renderBuffer_ = opt_renderBuffer;\n\n  /**\n   * @private\n   * @type {!Object.<string, !Object.<module:ol/render/ReplayType, module:ol/render/canvas/Replay>>}\n   */\n  this.replaysByZIndex_ = {};\n\n  /**\n   * @private\n   * @type {CanvasRenderingContext2D}\n   */\n  this.hitDetectionContext_ = createCanvasContext2D(1, 1);\n\n  /**\n   * @private\n   * @type {module:ol/transform~Transform}\n   */\n  this.hitDetectionTransform_ = createTransform();\n};\n\ninherits(CanvasReplayGroup, ReplayGroup);\n\n\n/**\n * This cache is used for storing calculated pixel circles for increasing performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object.<number, Array.<Array.<(boolean|undefined)>>>}\n */\nconst circleArrayCache = {\n  0: [[true]]\n};\n\n\n/**\n * This method fills a row in the array from the given coordinate to the\n * middle with `true`.\n * @param {Array.<Array.<(boolean|undefined)>>} array The array that will be altered.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n */\nfunction fillCircleArrayRowToMiddle(array, x, y) {\n  let i;\n  const radius = Math.floor(array.length / 2);\n  if (x >= radius) {\n    for (i = radius; i < x; i++) {\n      array[i][y] = true;\n    }\n  } else if (x < radius) {\n    for (i = x + 1; i < radius; i++) {\n      array[i][y] = true;\n    }\n  }\n}\n\n\n/**\n * This methods creates a circle inside a fitting array. Points inside the\n * circle are marked by true, points on the outside are undefined.\n * It uses the midpoint circle algorithm.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @returns {Array.<Array.<(boolean|undefined)>>} An array with marked circle points.\n */\nexport function getCircleArray(radius) {\n  if (circleArrayCache[radius] !== undefined) {\n    return circleArrayCache[radius];\n  }\n\n  const arraySize = radius * 2 + 1;\n  const arr = new Array(arraySize);\n  for (let i = 0; i < arraySize; i++) {\n    arr[i] = new Array(arraySize);\n  }\n\n  let x = radius;\n  let y = 0;\n  let error = 0;\n\n  while (x >= y) {\n    fillCircleArrayRowToMiddle(arr, radius + x, radius + y);\n    fillCircleArrayRowToMiddle(arr, radius + y, radius + x);\n    fillCircleArrayRowToMiddle(arr, radius - y, radius + x);\n    fillCircleArrayRowToMiddle(arr, radius - x, radius + y);\n    fillCircleArrayRowToMiddle(arr, radius - x, radius - y);\n    fillCircleArrayRowToMiddle(arr, radius - y, radius - x);\n    fillCircleArrayRowToMiddle(arr, radius + y, radius - x);\n    fillCircleArrayRowToMiddle(arr, radius + x, radius - y);\n\n    y++;\n    error += 1 + 2 * y;\n    if (2 * (error - x) + 1 > 0) {\n      x -= 1;\n      error += 1 - 2 * x;\n    }\n  }\n\n  circleArrayCache[radius] = arr;\n  return arr;\n}\n\n\n/**\n * @param {!Object.<string, Array.<*>>} declutterReplays Declutter replays.\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n */\nexport function replayDeclutter(declutterReplays, context, rotation) {\n  const zs = Object.keys(declutterReplays).map(Number).sort(numberSafeCompareFunction);\n  const skippedFeatureUids = {};\n  for (let z = 0, zz = zs.length; z < zz; ++z) {\n    const replayData = declutterReplays[zs[z].toString()];\n    for (let i = 0, ii = replayData.length; i < ii;) {\n      const replay = replayData[i++];\n      const transform = replayData[i++];\n      replay.replay(context, transform, rotation, skippedFeatureUids);\n    }\n  }\n}\n\n\n/**\n * @param {boolean} group Group with previous replay.\n * @return {module:ol/render/canvas~DeclutterGroup} Declutter instruction group.\n */\nCanvasReplayGroup.prototype.addDeclutter = function(group) {\n  let declutter = null;\n  if (this.declutterTree_) {\n    if (group) {\n      declutter = this.declutterGroup_;\n      /** @type {number} */ (declutter[4])++;\n    } else {\n      declutter = this.declutterGroup_ = createEmpty();\n      declutter.push(1);\n    }\n  }\n  return declutter;\n};\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {module:ol/transform~Transform} transform Transform.\n */\nCanvasReplayGroup.prototype.clip = function(context, transform) {\n  const flatClipCoords = this.getClipCoords(transform);\n  context.beginPath();\n  context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n  context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n  context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n  context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n  context.clip();\n};\n\n\n/**\n * @param {Array.<module:ol/render/ReplayType>} replays Replays.\n * @return {boolean} Has replays of the provided types.\n */\nCanvasReplayGroup.prototype.hasReplays = function(replays) {\n  for (const zIndex in this.replaysByZIndex_) {\n    const candidates = this.replaysByZIndex_[zIndex];\n    for (let i = 0, ii = replays.length; i < ii; ++i) {\n      if (replays[i] in candidates) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\n\n\n/**\n * FIXME empty description for jsdoc\n */\nCanvasReplayGroup.prototype.finish = function() {\n  for (const zKey in this.replaysByZIndex_) {\n    const replays = this.replaysByZIndex_[zKey];\n    for (const replayKey in replays) {\n      replays[replayKey].finish();\n    }\n  }\n};\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {number} hitTolerance Hit tolerance in pixels.\n * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features to skip.\n * @param {function((module:ol/Feature|module:ol/render/Feature)): T} callback Feature callback.\n * @param {Object.<string, module:ol/render/canvas~DeclutterGroup>} declutterReplays Declutter replays.\n * @return {T|undefined} Callback result.\n * @template T\n */\nCanvasReplayGroup.prototype.forEachFeatureAtCoordinate = function(\n  coordinate, resolution, rotation, hitTolerance, skippedFeaturesHash, callback, declutterReplays) {\n\n  hitTolerance = Math.round(hitTolerance);\n  const contextSize = hitTolerance * 2 + 1;\n  const transform = composeTransform(this.hitDetectionTransform_,\n    hitTolerance + 0.5, hitTolerance + 0.5,\n    1 / resolution, -1 / resolution,\n    -rotation,\n    -coordinate[0], -coordinate[1]);\n  const context = this.hitDetectionContext_;\n\n  if (context.canvas.width !== contextSize || context.canvas.height !== contextSize) {\n    context.canvas.width = contextSize;\n    context.canvas.height = contextSize;\n  } else {\n    context.clearRect(0, 0, contextSize, contextSize);\n  }\n\n  /**\n   * @type {module:ol/extent~Extent}\n   */\n  let hitExtent;\n  if (this.renderBuffer_ !== undefined) {\n    hitExtent = createEmpty();\n    extendCoordinate(hitExtent, coordinate);\n    buffer(hitExtent, resolution * (this.renderBuffer_ + hitTolerance), hitExtent);\n  }\n\n  const mask = getCircleArray(hitTolerance);\n  let declutteredFeatures;\n  if (this.declutterTree_) {\n    declutteredFeatures = this.declutterTree_.all().map(function(entry) {\n      return entry.value;\n    });\n  }\n\n  let replayType;\n\n  /**\n   * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n   * @return {?} Callback result.\n   */\n  function featureCallback(feature) {\n    const imageData = context.getImageData(0, 0, contextSize, contextSize).data;\n    for (let i = 0; i < contextSize; i++) {\n      for (let j = 0; j < contextSize; j++) {\n        if (mask[i][j]) {\n          if (imageData[(j * contextSize + i) * 4 + 3] > 0) {\n            let result;\n            if (!(declutteredFeatures && (replayType == ReplayType.IMAGE || replayType == ReplayType.TEXT)) ||\n                declutteredFeatures.indexOf(feature) !== -1) {\n              result = callback(feature);\n            }\n            if (result) {\n              return result;\n            } else {\n              context.clearRect(0, 0, contextSize, contextSize);\n              return undefined;\n            }\n          }\n        }\n      }\n    }\n  }\n\n  /** @type {Array.<number>} */\n  const zs = Object.keys(this.replaysByZIndex_).map(Number);\n  zs.sort(numberSafeCompareFunction);\n\n  let i, j, replays, replay, result;\n  for (i = zs.length - 1; i >= 0; --i) {\n    const zIndexKey = zs[i].toString();\n    replays = this.replaysByZIndex_[zIndexKey];\n    for (j = ORDER.length - 1; j >= 0; --j) {\n      replayType = ORDER[j];\n      replay = replays[replayType];\n      if (replay !== undefined) {\n        if (declutterReplays &&\n            (replayType == ReplayType.IMAGE || replayType == ReplayType.TEXT)) {\n          const declutter = declutterReplays[zIndexKey];\n          if (!declutter) {\n            declutterReplays[zIndexKey] = [replay, transform.slice(0)];\n          } else {\n            declutter.push(replay, transform.slice(0));\n          }\n        } else {\n          result = replay.replayHitDetection(context, transform, rotation,\n            skippedFeaturesHash, featureCallback, hitExtent);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @param {module:ol/transform~Transform} transform Transform.\n * @return {Array.<number>} Clip coordinates.\n */\nCanvasReplayGroup.prototype.getClipCoords = function(transform) {\n  const maxExtent = this.maxExtent_;\n  const minX = maxExtent[0];\n  const minY = maxExtent[1];\n  const maxX = maxExtent[2];\n  const maxY = maxExtent[3];\n  const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n  transform2D(\n    flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n  return flatClipCoords;\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasReplayGroup.prototype.getReplay = function(zIndex, replayType) {\n  const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n  let replays = this.replaysByZIndex_[zIndexKey];\n  if (replays === undefined) {\n    replays = {};\n    this.replaysByZIndex_[zIndexKey] = replays;\n  }\n  let replay = replays[replayType];\n  if (replay === undefined) {\n    const Constructor = BATCH_CONSTRUCTORS[replayType];\n    replay = new Constructor(this.tolerance_, this.maxExtent_,\n      this.resolution_, this.pixelRatio_, this.overlaps_, this.declutterTree_);\n    replays[replayType] = replay;\n  }\n  return replay;\n};\n\n\n/**\n * @return {Object.<string, Object.<module:ol/render/ReplayType, module:ol/render/canvas/Replay>>} Replays.\n */\nCanvasReplayGroup.prototype.getReplays = function() {\n  return this.replaysByZIndex_;\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasReplayGroup.prototype.isEmpty = function() {\n  return isEmpty(this.replaysByZIndex_);\n};\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {module:ol/transform~Transform} transform Transform.\n * @param {number} viewRotation View rotation.\n * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features to skip.\n * @param {Array.<module:ol/render/ReplayType>=} opt_replayTypes Ordered replay types to replay.\n *     Default is {@link module:ol/render/replay~ORDER}\n * @param {Object.<string, module:ol/render/canvas~DeclutterGroup>=} opt_declutterReplays Declutter replays.\n */\nCanvasReplayGroup.prototype.replay = function(context,\n  transform, viewRotation, skippedFeaturesHash, opt_replayTypes, opt_declutterReplays) {\n\n  /** @type {Array.<number>} */\n  const zs = Object.keys(this.replaysByZIndex_).map(Number);\n  zs.sort(numberSafeCompareFunction);\n\n  // setup clipping so that the parts of over-simplified geometries are not\n  // visible outside the current extent when panning\n  context.save();\n  this.clip(context, transform);\n\n  const replayTypes = opt_replayTypes ? opt_replayTypes : ORDER;\n  let i, ii, j, jj, replays, replay;\n  for (i = 0, ii = zs.length; i < ii; ++i) {\n    const zIndexKey = zs[i].toString();\n    replays = this.replaysByZIndex_[zIndexKey];\n    for (j = 0, jj = replayTypes.length; j < jj; ++j) {\n      const replayType = replayTypes[j];\n      replay = replays[replayType];\n      if (replay !== undefined) {\n        if (opt_declutterReplays &&\n            (replayType == ReplayType.IMAGE || replayType == ReplayType.TEXT)) {\n          const declutter = opt_declutterReplays[zIndexKey];\n          if (!declutter) {\n            opt_declutterReplays[zIndexKey] = [replay, transform.slice(0)];\n          } else {\n            declutter.push(replay, transform.slice(0));\n          }\n        } else {\n          replay.replay(context, transform, viewRotation, skippedFeaturesHash);\n        }\n      }\n    }\n  }\n\n  context.restore();\n};\n\nexport default CanvasReplayGroup;\n","/**\n * @module ol/renderer/vector\n */\nimport {getUid} from '../index.js';\nimport ImageState from '../ImageState.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport ReplayType from '../render/ReplayType.js';\n\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n\n/**\n * @const\n * @type {Object.<module:ol/geom/GeometryType,\n *                function(module:ol/render/ReplayGroup, module:ol/geom/Geometry,\n *                         module:ol/style/Style, Object)>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry\n};\n\n\n/**\n * @param {module:ol/Feature|module:ol/render/Feature} feature1 Feature 1.\n * @param {module:ol/Feature|module:ol/render/Feature} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return getUid(feature1) - getUid(feature2);\n}\n\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return SIMPLIFY_TOLERANCE * resolution / pixelRatio;\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/geom/Circle} geometry Geometry.\n * @param {module:ol/style/Style} style Style.\n * @param {module:ol/Feature} feature Feature.\n */\nfunction renderCircleGeometry(replayGroup, geometry, style, feature) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.CIRCLE);\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle) {\n    const textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n * @param {module:ol/style/Style} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(this: T, module:ol/events/Event)} listener Listener function.\n * @param {T} thisArg Value to use as `this` when executing `listener`.\n * @return {boolean} `true` if style is loading.\n * @template T\n */\nexport function renderFeature(replayGroup, feature, style, squaredTolerance, listener, thisArg) {\n  let loading = false;\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    let imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      imageStyle.unlistenImageChange(listener, thisArg);\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n      imageState = imageStyle.getImageState();\n      imageStyle.listenImageChange(listener, thisArg);\n      loading = true;\n    }\n  }\n  renderFeatureInternal(replayGroup, feature, style, squaredTolerance);\n\n  return loading;\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n * @param {module:ol/style/Style} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n */\nfunction renderFeatureInternal(replayGroup, feature, style, squaredTolerance) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.getSimplifiedGeometry(squaredTolerance);\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(replayGroup, simplifiedGeometry, style, feature);\n  }\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/geom/Geometry} geometry Geometry.\n * @param {module:ol/style/Style} style Style.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == GeometryType.GEOMETRY_COLLECTION) {\n    const geometries = /** @type {module:ol/geom/GeometryCollection} */ (geometry).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature);\n    }\n    return;\n  }\n  const replay = replayGroup.getReplay(style.getZIndex(), ReplayType.DEFAULT);\n  replay.drawCustom(/** @type {module:ol/geom/SimpleGeometry} */ (geometry), feature, style.getRenderer());\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/geom/GeometryCollection} geometry Geometry.\n * @param {module:ol/style/Style} style Style.\n * @param {module:ol/Feature} feature Feature.\n */\nfunction renderGeometryCollectionGeometry(replayGroup, geometry, style, feature) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer =\n        GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(replayGroup, geometries[i], style, feature);\n  }\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/geom/LineString|module:ol/render/Feature} geometry Geometry.\n * @param {module:ol/style/Style} style Style.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nfunction renderLineStringGeometry(replayGroup, geometry, style, feature) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.LINE_STRING);\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle) {\n    const textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/geom/MultiLineString|module:ol/render/Feature} geometry Geometry.\n * @param {module:ol/style/Style} style Style.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nfunction renderMultiLineStringGeometry(replayGroup, geometry, style, feature) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.LINE_STRING);\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle) {\n    const textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/geom/MultiPolygon} geometry Geometry.\n * @param {module:ol/style/Style} style Style.\n * @param {module:ol/Feature} feature Feature.\n */\nfunction renderMultiPolygonGeometry(replayGroup, geometry, style, feature) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.POLYGON);\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle) {\n    const textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/geom/Point|module:ol/render/Feature} geometry Geometry.\n * @param {module:ol/style/Style} style Style.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nfunction renderPointGeometry(replayGroup, geometry, style, feature) {\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.IMAGE);\n    imageReplay.setImageStyle(imageStyle, replayGroup.addDeclutter(false));\n    imageReplay.drawPoint(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle) {\n    const textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(!!imageStyle));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/geom/MultiPoint|module:ol/render/Feature} geometry Geometry.\n * @param {module:ol/style/Style} style Style.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nfunction renderMultiPointGeometry(replayGroup, geometry, style, feature) {\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.IMAGE);\n    imageReplay.setImageStyle(imageStyle, replayGroup.addDeclutter(false));\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle) {\n    const textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(!!imageStyle));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/geom/Polygon|module:ol/render/Feature} geometry Geometry.\n * @param {module:ol/style/Style} style Style.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nfunction renderPolygonGeometry(replayGroup, geometry, style, feature) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.POLYGON);\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle) {\n    const textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport {getUid, inherits} from '../../index.js';\nimport LayerType from '../../LayerType.js';\nimport ViewHint from '../../ViewHint.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {listen, unlisten} from '../../events.js';\nimport EventType from '../../events/EventType.js';\nimport rbush from 'rbush';\nimport {buffer, createEmpty, containsExtent, getWidth} from '../../extent.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {labelCache, rotateAtOffset} from '../../render/canvas.js';\nimport CanvasReplayGroup from '../../render/canvas/ReplayGroup.js';\nimport CanvasLayerRenderer from '../canvas/Layer.js';\nimport {defaultOrder as defaultRenderOrder, getTolerance as getRenderTolerance, getSquaredTolerance as getSquaredRenderTolerance, renderFeature} from '../vector.js';\n\n/**\n * @constructor\n * @extends {module:ol/renderer/canvas/Layer}\n * @param {module:ol/layer/Vector} vectorLayer Vector layer.\n * @api\n */\nconst CanvasVectorLayerRenderer = function(vectorLayer) {\n\n  CanvasLayerRenderer.call(this, vectorLayer);\n\n  /**\n   * Declutter tree.\n   * @private\n   */\n  this.declutterTree_ = vectorLayer.getDeclutter() ? rbush(9, undefined) : null;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.dirty_ = false;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.renderedRevision_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.renderedResolution_ = NaN;\n\n  /**\n   * @private\n   * @type {module:ol/extent~Extent}\n   */\n  this.renderedExtent_ = createEmpty();\n\n  /**\n   * @private\n   * @type {function(module:ol/Feature, module:ol/Feature): number|null}\n   */\n  this.renderedRenderOrder_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/render/canvas/ReplayGroup}\n   */\n  this.replayGroup_ = null;\n\n  /**\n   * A new replay group had to be created by `prepareFrame()`\n   * @type {boolean}\n   */\n  this.replayGroupChanged = true;\n\n  /**\n   * @type {CanvasRenderingContext2D}\n   */\n  this.context = createCanvasContext2D();\n\n  listen(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n\n};\n\ninherits(CanvasVectorLayerRenderer, CanvasLayerRenderer);\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {module:ol/layer/Layer} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nCanvasVectorLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.VECTOR;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {module:ol/renderer/Map} mapRenderer The map renderer.\n * @param {module:ol/layer/Layer} layer The layer to be rendererd.\n * @return {module:ol/renderer/canvas/VectorLayer} The layer renderer.\n */\nCanvasVectorLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new CanvasVectorLayerRenderer(/** @type {module:ol/layer/Vector} */ (layer));\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasVectorLayerRenderer.prototype.disposeInternal = function() {\n  unlisten(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n  CanvasLayerRenderer.prototype.disposeInternal.call(this);\n};\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @param {module:ol/layer/Layer~State} layerState Layer state.\n */\nCanvasVectorLayerRenderer.prototype.compose = function(context, frameState, layerState) {\n  const extent = frameState.extent;\n  const pixelRatio = frameState.pixelRatio;\n  const skippedFeatureUids = layerState.managed ?\n    frameState.skippedFeatureUids : {};\n  const viewState = frameState.viewState;\n  const projection = viewState.projection;\n  const rotation = viewState.rotation;\n  const projectionExtent = projection.getExtent();\n  const vectorSource = /** @type {module:ol/source/Vector} */ (this.getLayer().getSource());\n\n  let transform = this.getTransform(frameState, 0);\n\n  // clipped rendering if layer extent is set\n  const clipExtent = layerState.extent;\n  const clipped = clipExtent !== undefined;\n  if (clipped) {\n    this.clip(context, frameState,  /** @type {module:ol/extent~Extent} */ (clipExtent));\n  }\n  const replayGroup = this.replayGroup_;\n  if (replayGroup && !replayGroup.isEmpty()) {\n    if (this.declutterTree_) {\n      this.declutterTree_.clear();\n    }\n    const layer = /** @type {module:ol/layer/Vector} */ (this.getLayer());\n    let drawOffsetX = 0;\n    let drawOffsetY = 0;\n    let replayContext;\n    const transparentLayer = layerState.opacity !== 1;\n    const hasRenderListeners = layer.hasListener(RenderEventType.RENDER);\n    if (transparentLayer || hasRenderListeners) {\n      let drawWidth = context.canvas.width;\n      let drawHeight = context.canvas.height;\n      if (rotation) {\n        const drawSize = Math.round(Math.sqrt(drawWidth * drawWidth + drawHeight * drawHeight));\n        drawOffsetX = (drawSize - drawWidth) / 2;\n        drawOffsetY = (drawSize - drawHeight) / 2;\n        drawWidth = drawHeight = drawSize;\n      }\n      // resize and clear\n      this.context.canvas.width = drawWidth;\n      this.context.canvas.height = drawHeight;\n      replayContext = this.context;\n    } else {\n      replayContext = context;\n    }\n\n    const alpha = replayContext.globalAlpha;\n    if (!transparentLayer) {\n      // for performance reasons, context.save / context.restore is not used\n      // to save and restore the transformation matrix and the opacity.\n      // see http://jsperf.com/context-save-restore-versus-variable\n      replayContext.globalAlpha = layerState.opacity;\n    }\n\n    if (replayContext != context) {\n      replayContext.translate(drawOffsetX, drawOffsetY);\n    }\n\n    const width = frameState.size[0] * pixelRatio;\n    const height = frameState.size[1] * pixelRatio;\n    rotateAtOffset(replayContext, -rotation,\n      width / 2, height / 2);\n    replayGroup.replay(replayContext, transform, rotation, skippedFeatureUids);\n    if (vectorSource.getWrapX() && projection.canWrapX() &&\n        !containsExtent(projectionExtent, extent)) {\n      let startX = extent[0];\n      const worldWidth = getWidth(projectionExtent);\n      let world = 0;\n      let offsetX;\n      while (startX < projectionExtent[0]) {\n        --world;\n        offsetX = worldWidth * world;\n        transform = this.getTransform(frameState, offsetX);\n        replayGroup.replay(replayContext, transform, rotation, skippedFeatureUids);\n        startX += worldWidth;\n      }\n      world = 0;\n      startX = extent[2];\n      while (startX > projectionExtent[2]) {\n        ++world;\n        offsetX = worldWidth * world;\n        transform = this.getTransform(frameState, offsetX);\n        replayGroup.replay(replayContext, transform, rotation, skippedFeatureUids);\n        startX -= worldWidth;\n      }\n    }\n    rotateAtOffset(replayContext, rotation,\n      width / 2, height / 2);\n\n    if (replayContext != context) {\n      if (hasRenderListeners) {\n        this.dispatchRenderEvent(replayContext, frameState, transform);\n      }\n      if (transparentLayer) {\n        const mainContextAlpha = context.globalAlpha;\n        context.globalAlpha = layerState.opacity;\n        context.drawImage(replayContext.canvas, -drawOffsetX, -drawOffsetY);\n        context.globalAlpha = mainContextAlpha;\n      } else {\n        context.drawImage(replayContext.canvas, -drawOffsetX, -drawOffsetY);\n      }\n      replayContext.translate(-drawOffsetX, -drawOffsetY);\n    }\n\n    if (!transparentLayer) {\n      replayContext.globalAlpha = alpha;\n    }\n  }\n\n  if (clipped) {\n    context.restore();\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasVectorLayerRenderer.prototype.composeFrame = function(frameState, layerState, context) {\n  const transform = this.getTransform(frameState, 0);\n  this.preCompose(context, frameState, transform);\n  this.compose(context, frameState, layerState);\n  this.postCompose(context, frameState, layerState, transform);\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasVectorLayerRenderer.prototype.forEachFeatureAtCoordinate = function(coordinate, frameState, hitTolerance, callback, thisArg) {\n  if (!this.replayGroup_) {\n    return undefined;\n  } else {\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const layer = /** @type {module:ol/layer/Vector} */ (this.getLayer());\n    /** @type {!Object.<string, boolean>} */\n    const features = {};\n    const result = this.replayGroup_.forEachFeatureAtCoordinate(coordinate, resolution, rotation, hitTolerance, {},\n      /**\n       * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n       * @return {?} Callback result.\n       */\n      function(feature) {\n        const key = getUid(feature).toString();\n        if (!(key in features)) {\n          features[key] = true;\n          return callback.call(thisArg, feature, layer);\n        }\n      }, null);\n    return result;\n  }\n};\n\n\n/**\n * @param {module:ol/events/Event} event Event.\n */\nCanvasVectorLayerRenderer.prototype.handleFontsChanged_ = function(event) {\n  const layer = this.getLayer();\n  if (layer.getVisible() && this.replayGroup_) {\n    layer.changed();\n  }\n};\n\n\n/**\n * Handle changes in image style state.\n * @param {module:ol/events/Event} event Image style change event.\n * @private\n */\nCanvasVectorLayerRenderer.prototype.handleStyleImageChange_ = function(event) {\n  this.renderIfReadyAndVisible();\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasVectorLayerRenderer.prototype.prepareFrame = function(frameState, layerState) {\n  const vectorLayer = /** @type {module:ol/layer/Vector} */ (this.getLayer());\n  const vectorSource = vectorLayer.getSource();\n\n  const animating = frameState.viewHints[ViewHint.ANIMATING];\n  const interacting = frameState.viewHints[ViewHint.INTERACTING];\n  const updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n  const updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n  if (!this.dirty_ && (!updateWhileAnimating && animating) ||\n      (!updateWhileInteracting && interacting)) {\n    return true;\n  }\n\n  const frameStateExtent = frameState.extent;\n  const viewState = frameState.viewState;\n  const projection = viewState.projection;\n  const resolution = viewState.resolution;\n  const pixelRatio = frameState.pixelRatio;\n  const vectorLayerRevision = vectorLayer.getRevision();\n  const vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n  let vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n  if (vectorLayerRenderOrder === undefined) {\n    vectorLayerRenderOrder = defaultRenderOrder;\n  }\n\n  const extent = buffer(frameStateExtent,\n    vectorLayerRenderBuffer * resolution);\n  const projectionExtent = viewState.projection.getExtent();\n\n  if (vectorSource.getWrapX() && viewState.projection.canWrapX() &&\n      !containsExtent(projectionExtent, frameState.extent)) {\n    // For the replay group, we need an extent that intersects the real world\n    // (-180° to +180°). To support geometries in a coordinate range from -540°\n    // to +540°, we add at least 1 world width on each side of the projection\n    // extent. If the viewport is wider than the world, we need to add half of\n    // the viewport width to make sure we cover the whole viewport.\n    const worldWidth = getWidth(projectionExtent);\n    const gutter = Math.max(getWidth(extent) / 2, worldWidth);\n    extent[0] = projectionExtent[0] - gutter;\n    extent[2] = projectionExtent[2] + gutter;\n  }\n\n  if (!this.dirty_ &&\n      this.renderedResolution_ == resolution &&\n      this.renderedRevision_ == vectorLayerRevision &&\n      this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n      containsExtent(this.renderedExtent_, extent)) {\n    this.replayGroupChanged = false;\n    return true;\n  }\n\n  this.replayGroup_ = null;\n\n  this.dirty_ = false;\n\n  const replayGroup = new CanvasReplayGroup(\n    getRenderTolerance(resolution, pixelRatio), extent, resolution,\n    pixelRatio, vectorSource.getOverlaps(), this.declutterTree_, vectorLayer.getRenderBuffer());\n  vectorSource.loadFeatures(extent, resolution, projection);\n  /**\n   * @param {module:ol/Feature} feature Feature.\n   * @this {module:ol/renderer/canvas/VectorLayer}\n   */\n  const render = function(feature) {\n    let styles;\n    const styleFunction = feature.getStyleFunction() || vectorLayer.getStyleFunction();\n    if (styleFunction) {\n      styles = styleFunction(feature, resolution);\n    }\n    if (styles) {\n      const dirty = this.renderFeature(\n        feature, resolution, pixelRatio, styles, replayGroup);\n      this.dirty_ = this.dirty_ || dirty;\n    }\n  }.bind(this);\n  if (vectorLayerRenderOrder) {\n    /** @type {Array.<module:ol/Feature>} */\n    const features = [];\n    vectorSource.forEachFeatureInExtent(extent,\n      /**\n       * @param {module:ol/Feature} feature Feature.\n       */\n      function(feature) {\n        features.push(feature);\n      }, this);\n    features.sort(vectorLayerRenderOrder);\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      render(features[i]);\n    }\n  } else {\n    vectorSource.forEachFeatureInExtent(extent, render, this);\n  }\n  replayGroup.finish();\n\n  this.renderedResolution_ = resolution;\n  this.renderedRevision_ = vectorLayerRevision;\n  this.renderedRenderOrder_ = vectorLayerRenderOrder;\n  this.renderedExtent_ = extent;\n  this.replayGroup_ = replayGroup;\n\n  this.replayGroupChanged = true;\n  return true;\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature.\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {(module:ol/style/Style|Array.<module:ol/style/Style>)} styles The style or array of styles.\n * @param {module:ol/render/canvas/ReplayGroup} replayGroup Replay group.\n * @return {boolean} `true` if an image is loading.\n */\nCanvasVectorLayerRenderer.prototype.renderFeature = function(feature, resolution, pixelRatio, styles, replayGroup) {\n  if (!styles) {\n    return false;\n  }\n  let loading = false;\n  if (Array.isArray(styles)) {\n    for (let i = 0, ii = styles.length; i < ii; ++i) {\n      loading = renderFeature(\n        replayGroup, feature, styles[i],\n        getSquaredRenderTolerance(resolution, pixelRatio),\n        this.handleStyleImageChange_, this) || loading;\n    }\n  } else {\n    loading = renderFeature(\n      replayGroup, feature, styles,\n      getSquaredRenderTolerance(resolution, pixelRatio),\n      this.handleStyleImageChange_, this);\n  }\n  return loading;\n};\nexport default CanvasVectorLayerRenderer;\n","/**\n * @module ol/layer/VectorTileRenderType\n */\n\n/**\n * @enum {string}\n * Render mode for vector tiles:\n *  * `'image'`: Vector tiles are rendered as images. Great performance, but\n *    point symbols and texts are always rotated with the view and pixels are\n *    scaled during zoom animations.\n *  * `'hybrid'`: Polygon and line elements are rendered as images, so pixels\n *    are scaled during zoom animations. Point symbols and texts are accurately\n *    rendered as vectors and can stay upright on rotated views.\n *  * `'vector'`: Vector tiles are rendered as vectors. Most accurate rendering\n *    even during animations, but slower performance than the other options.\n * @api\n */\nexport default {\n  IMAGE: 'image',\n  HYBRID: 'hybrid',\n  VECTOR: 'vector'\n};\n","/**\n * @module ol/renderer/canvas/VectorTileLayer\n */\nimport {getUid, inherits} from '../../index.js';\nimport LayerType from '../../LayerType.js';\nimport TileState from '../../TileState.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {listen, unlisten} from '../../events.js';\nimport EventType from '../../events/EventType.js';\nimport rbush from 'rbush';\nimport {buffer, containsCoordinate, equals, getIntersection, getTopLeft, intersects} from '../../extent.js';\nimport VectorTileRenderType from '../../layer/VectorTileRenderType.js';\nimport {equivalent as equivalentProjection} from '../../proj.js';\nimport Units from '../../proj/Units.js';\nimport ReplayType from '../../render/ReplayType.js';\nimport {labelCache, rotateAtOffset} from '../../render/canvas.js';\nimport CanvasReplayGroup, {replayDeclutter} from '../../render/canvas/ReplayGroup.js';\nimport {ORDER} from '../../render/replay.js';\nimport CanvasTileLayerRenderer from '../canvas/TileLayer.js';\nimport {getSquaredTolerance as getSquaredRenderTolerance, renderFeature} from '../vector.js';\nimport {\n  create as createTransform,\n  compose as composeTransform,\n  reset as resetTransform,\n  scale as scaleTransform,\n  translate as translateTransform\n} from '../../transform.js';\n\n\n/**\n * @type {!Object.<string, Array.<module:ol/render/ReplayType>>}\n */\nconst IMAGE_REPLAYS = {\n  'image': [ReplayType.POLYGON, ReplayType.CIRCLE,\n    ReplayType.LINE_STRING, ReplayType.IMAGE, ReplayType.TEXT],\n  'hybrid': [ReplayType.POLYGON, ReplayType.LINE_STRING]\n};\n\n\n/**\n * @type {!Object.<string, Array.<module:ol/render/ReplayType>>}\n */\nconst VECTOR_REPLAYS = {\n  'image': [ReplayType.DEFAULT],\n  'hybrid': [ReplayType.IMAGE, ReplayType.TEXT, ReplayType.DEFAULT],\n  'vector': ORDER\n};\n\n\n/**\n * @constructor\n * @extends {module:ol/renderer/canvas/TileLayer}\n * @param {module:ol/layer/VectorTile} layer VectorTile layer.\n * @api\n */\nconst CanvasVectorTileLayerRenderer = function(layer) {\n\n  /**\n   * @type {CanvasRenderingContext2D}\n   */\n  this.context = null;\n\n  CanvasTileLayerRenderer.call(this, layer);\n\n  /**\n   * Declutter tree.\n   * @private\n   */\n  this.declutterTree_ = layer.getDeclutter() ? rbush(9, undefined) : null;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.dirty_ = false;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.renderedLayerRevision_;\n\n  /**\n   * @private\n   * @type {module:ol/transform~Transform}\n   */\n  this.tmpTransform_ = createTransform();\n\n  // Use lower resolution for pure vector rendering. Closest resolution otherwise.\n  this.zDirection = layer.getRenderMode() == VectorTileRenderType.VECTOR ? 1 : 0;\n\n  listen(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n\n};\n\ninherits(CanvasVectorTileLayerRenderer, CanvasTileLayerRenderer);\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {module:ol/layer/Layer} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nCanvasVectorTileLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.VECTOR_TILE;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {module:ol/renderer/Map} mapRenderer The map renderer.\n * @param {module:ol/layer/Layer} layer The layer to be rendererd.\n * @return {module:ol/renderer/canvas/VectorTileLayer} The layer renderer.\n */\nCanvasVectorTileLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new CanvasVectorTileLayerRenderer(/** @type {module:ol/layer/VectorTile} */ (layer));\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasVectorTileLayerRenderer.prototype.disposeInternal = function() {\n  unlisten(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n  CanvasTileLayerRenderer.prototype.disposeInternal.call(this);\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasVectorTileLayerRenderer.prototype.getTile = function(z, x, y, pixelRatio, projection) {\n  const tile = CanvasTileLayerRenderer.prototype.getTile.call(this, z, x, y, pixelRatio, projection);\n  if (tile.getState() === TileState.LOADED) {\n    this.createReplayGroup_(tile, pixelRatio, projection);\n    if (this.context) {\n      this.renderTileImage_(tile, pixelRatio, projection);\n    }\n  }\n  return tile;\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasVectorTileLayerRenderer.prototype.prepareFrame = function(frameState, layerState) {\n  const layer = this.getLayer();\n  const layerRevision = layer.getRevision();\n  if (this.renderedLayerRevision_ != layerRevision) {\n    this.renderedTiles.length = 0;\n    const renderMode = layer.getRenderMode();\n    if (!this.context && renderMode != VectorTileRenderType.VECTOR) {\n      this.context = createCanvasContext2D();\n    }\n    if (this.context && renderMode == VectorTileRenderType.VECTOR) {\n      this.context = null;\n    }\n  }\n  this.renderedLayerRevision_ = layerRevision;\n  return CanvasTileLayerRenderer.prototype.prepareFrame.apply(this, arguments);\n};\n\n\n/**\n * @param {module:ol/VectorImageTile} tile Tile.\n * @param {number} pixelRatio Pixel ratio.\n * @param {module:ol/proj/Projection} projection Projection.\n * @private\n */\nCanvasVectorTileLayerRenderer.prototype.createReplayGroup_ = function(tile, pixelRatio, projection) {\n  const layer = this.getLayer();\n  const revision = layer.getRevision();\n  const renderOrder = /** @type {module:ol/render~OrderFunction} */ (layer.getRenderOrder()) || null;\n\n  const replayState = tile.getReplayState(layer);\n  if (!replayState.dirty && replayState.renderedRevision == revision &&\n      replayState.renderedRenderOrder == renderOrder) {\n    return;\n  }\n\n  const source = /** @type {module:ol/source/VectorTile} */ (layer.getSource());\n  const sourceTileGrid = source.getTileGrid();\n  const tileGrid = source.getTileGridForProjection(projection);\n  const resolution = tileGrid.getResolution(tile.tileCoord[0]);\n  const tileExtent = tile.extent;\n\n  const zIndexKeys = {};\n  for (let t = 0, tt = tile.tileKeys.length; t < tt; ++t) {\n    const sourceTile = tile.getTile(tile.tileKeys[t]);\n    if (sourceTile.getState() != TileState.LOADED) {\n      continue;\n    }\n\n    const sourceTileCoord = sourceTile.tileCoord;\n    const sourceTileExtent = sourceTileGrid.getTileCoordExtent(sourceTileCoord);\n    const sharedExtent = getIntersection(tileExtent, sourceTileExtent);\n    const bufferedExtent = equals(sourceTileExtent, sharedExtent) ? null :\n      buffer(sharedExtent, layer.getRenderBuffer() * resolution, this.tmpExtent);\n    const tileProjection = sourceTile.getProjection();\n    let reproject = false;\n    if (!equivalentProjection(projection, tileProjection)) {\n      reproject = true;\n      sourceTile.setProjection(projection);\n    }\n    replayState.dirty = false;\n    const replayGroup = new CanvasReplayGroup(0, sharedExtent, resolution,\n      pixelRatio, source.getOverlaps(), this.declutterTree_, layer.getRenderBuffer());\n    const squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n\n    /**\n     * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n     * @this {module:ol/renderer/canvas/VectorTileLayer}\n     */\n    const render = function(feature) {\n      let styles;\n      const styleFunction = feature.getStyleFunction() || layer.getStyleFunction();\n      if (styleFunction) {\n        styles = styleFunction(feature, resolution);\n      }\n      if (styles) {\n        const dirty = this.renderFeature(feature, squaredTolerance, styles, replayGroup);\n        this.dirty_ = this.dirty_ || dirty;\n        replayState.dirty = replayState.dirty || dirty;\n      }\n    };\n\n    const features = sourceTile.getFeatures();\n    if (renderOrder && renderOrder !== replayState.renderedRenderOrder) {\n      features.sort(renderOrder);\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      const feature = features[i];\n      if (reproject) {\n        if (tileProjection.getUnits() == Units.TILE_PIXELS) {\n          // projected tile extent\n          tileProjection.setWorldExtent(sourceTileExtent);\n          // tile extent in tile pixel space\n          tileProjection.setExtent(sourceTile.getExtent());\n        }\n        feature.getGeometry().transform(tileProjection, projection);\n      }\n      if (!bufferedExtent || intersects(bufferedExtent, feature.getGeometry().getExtent())) {\n        render.call(this, feature);\n      }\n    }\n    replayGroup.finish();\n    for (const r in replayGroup.getReplays()) {\n      zIndexKeys[r] = true;\n    }\n    sourceTile.setReplayGroup(layer, tile.tileCoord.toString(), replayGroup);\n  }\n  replayState.renderedRevision = revision;\n  replayState.renderedRenderOrder = renderOrder;\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasVectorTileLayerRenderer.prototype.forEachFeatureAtCoordinate = function(coordinate, frameState, hitTolerance, callback, thisArg) {\n  const resolution = frameState.viewState.resolution;\n  const rotation = frameState.viewState.rotation;\n  hitTolerance = hitTolerance == undefined ? 0 : hitTolerance;\n  const layer = this.getLayer();\n  /** @type {!Object.<string, boolean>} */\n  const features = {};\n\n  /** @type {Array.<module:ol/VectorImageTile>} */\n  const renderedTiles = this.renderedTiles;\n\n  let bufferedExtent, found;\n  let i, ii, replayGroup;\n  for (i = 0, ii = renderedTiles.length; i < ii; ++i) {\n    const tile = renderedTiles[i];\n    bufferedExtent = buffer(tile.extent, hitTolerance * resolution, bufferedExtent);\n    if (!containsCoordinate(bufferedExtent, coordinate)) {\n      continue;\n    }\n    for (let t = 0, tt = tile.tileKeys.length; t < tt; ++t) {\n      const sourceTile = tile.getTile(tile.tileKeys[t]);\n      if (sourceTile.getState() != TileState.LOADED) {\n        continue;\n      }\n      replayGroup = sourceTile.getReplayGroup(layer, tile.tileCoord.toString());\n      found = found || replayGroup.forEachFeatureAtCoordinate(coordinate, resolution, rotation, hitTolerance, {},\n        /**\n         * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n         * @return {?} Callback result.\n         */\n        function(feature) {\n          const key = getUid(feature).toString();\n          if (!(key in features)) {\n            features[key] = true;\n            return callback.call(thisArg, feature, layer);\n          }\n        }, null);\n    }\n  }\n  return found;\n};\n\n\n/**\n * @param {module:ol/VectorTile} tile Tile.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @return {module:ol/transform~Transform} transform Transform.\n * @private\n */\nCanvasVectorTileLayerRenderer.prototype.getReplayTransform_ = function(tile, frameState) {\n  const layer = this.getLayer();\n  const source = /** @type {module:ol/source/VectorTile} */ (layer.getSource());\n  const tileGrid = source.getTileGrid();\n  const tileCoord = tile.tileCoord;\n  const tileResolution = tileGrid.getResolution(tileCoord[0]);\n  const viewState = frameState.viewState;\n  const pixelRatio = frameState.pixelRatio;\n  const renderResolution = viewState.resolution / pixelRatio;\n  const tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent);\n  const center = viewState.center;\n  const origin = getTopLeft(tileExtent);\n  const size = frameState.size;\n  const offsetX = Math.round(pixelRatio * size[0] / 2);\n  const offsetY = Math.round(pixelRatio * size[1] / 2);\n  return composeTransform(this.tmpTransform_,\n    offsetX, offsetY,\n    tileResolution / renderResolution, tileResolution / renderResolution,\n    viewState.rotation,\n    (origin[0] - center[0]) / tileResolution,\n    (center[1] - origin[1]) / tileResolution);\n};\n\n\n/**\n * @param {module:ol/events/Event} event Event.\n */\nCanvasVectorTileLayerRenderer.prototype.handleFontsChanged_ = function(event) {\n  const layer = this.getLayer();\n  if (layer.getVisible() && this.renderedLayerRevision_ !== undefined) {\n    layer.changed();\n  }\n};\n\n\n/**\n * Handle changes in image style state.\n * @param {module:ol/events/Event} event Image style change event.\n * @private\n */\nCanvasVectorTileLayerRenderer.prototype.handleStyleImageChange_ = function(event) {\n  this.renderIfReadyAndVisible();\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasVectorTileLayerRenderer.prototype.postCompose = function(context, frameState, layerState) {\n  const layer = this.getLayer();\n  const declutterReplays = layer.getDeclutter() ? {} : null;\n  const source = /** @type {module:ol/source/VectorTile} */ (layer.getSource());\n  const renderMode = layer.getRenderMode();\n  const replayTypes = VECTOR_REPLAYS[renderMode];\n  const pixelRatio = frameState.pixelRatio;\n  const rotation = frameState.viewState.rotation;\n  const size = frameState.size;\n  let offsetX, offsetY;\n  if (rotation) {\n    offsetX = Math.round(pixelRatio * size[0] / 2);\n    offsetY = Math.round(pixelRatio * size[1] / 2);\n    rotateAtOffset(context, -rotation, offsetX, offsetY);\n  }\n  if (declutterReplays) {\n    this.declutterTree_.clear();\n  }\n  const tiles = this.renderedTiles;\n  const tileGrid = source.getTileGridForProjection(frameState.viewState.projection);\n  const clips = [];\n  const zs = [];\n  for (let i = tiles.length - 1; i >= 0; --i) {\n    const tile = /** @type {module:ol/VectorImageTile} */ (tiles[i]);\n    if (tile.getState() == TileState.ABORT) {\n      continue;\n    }\n    const tileCoord = tile.tileCoord;\n    const worldOffset = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent)[0] - tile.extent[0];\n    let transform = undefined;\n    for (let t = 0, tt = tile.tileKeys.length; t < tt; ++t) {\n      const sourceTile = tile.getTile(tile.tileKeys[t]);\n      if (sourceTile.getState() != TileState.LOADED) {\n        continue;\n      }\n      const replayGroup = sourceTile.getReplayGroup(layer, tileCoord.toString());\n      if (renderMode != VectorTileRenderType.VECTOR && !replayGroup.hasReplays(replayTypes)) {\n        continue;\n      }\n      if (!transform) {\n        transform = this.getTransform(frameState, worldOffset);\n      }\n      const currentZ = sourceTile.tileCoord[0];\n      const currentClip = replayGroup.getClipCoords(transform);\n      context.save();\n      context.globalAlpha = layerState.opacity;\n      // Create a clip mask for regions in this low resolution tile that are\n      // already filled by a higher resolution tile\n      for (let j = 0, jj = clips.length; j < jj; ++j) {\n        const clip = clips[j];\n        if (currentZ < zs[j]) {\n          context.beginPath();\n          // counter-clockwise (outer ring) for current tile\n          context.moveTo(currentClip[0], currentClip[1]);\n          context.lineTo(currentClip[2], currentClip[3]);\n          context.lineTo(currentClip[4], currentClip[5]);\n          context.lineTo(currentClip[6], currentClip[7]);\n          // clockwise (inner ring) for higher resolution tile\n          context.moveTo(clip[6], clip[7]);\n          context.lineTo(clip[4], clip[5]);\n          context.lineTo(clip[2], clip[3]);\n          context.lineTo(clip[0], clip[1]);\n          context.clip();\n        }\n      }\n      replayGroup.replay(context, transform, rotation, {}, replayTypes, declutterReplays);\n      context.restore();\n      clips.push(currentClip);\n      zs.push(currentZ);\n    }\n  }\n  if (declutterReplays) {\n    replayDeclutter(declutterReplays, context, rotation);\n  }\n  if (rotation) {\n    rotateAtOffset(context, rotation,\n      /** @type {number} */ (offsetX), /** @type {number} */ (offsetY));\n  }\n  CanvasTileLayerRenderer.prototype.postCompose.apply(this, arguments);\n};\n\n\n/**\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {(module:ol/style/Style|Array.<module:ol/style/Style>)} styles The style or array of styles.\n * @param {module:ol/render/canvas/ReplayGroup} replayGroup Replay group.\n * @return {boolean} `true` if an image is loading.\n */\nCanvasVectorTileLayerRenderer.prototype.renderFeature = function(feature, squaredTolerance, styles, replayGroup) {\n  if (!styles) {\n    return false;\n  }\n  let loading = false;\n  if (Array.isArray(styles)) {\n    for (let i = 0, ii = styles.length; i < ii; ++i) {\n      loading = renderFeature(\n        replayGroup, feature, styles[i], squaredTolerance,\n        this.handleStyleImageChange_, this) || loading;\n    }\n  } else {\n    loading = renderFeature(\n      replayGroup, feature, styles, squaredTolerance,\n      this.handleStyleImageChange_, this);\n  }\n  return loading;\n};\n\n\n/**\n * @param {module:ol/VectorImageTile} tile Tile.\n * @param {number} pixelRatio Pixel ratio.\n * @param {module:ol/proj/Projection} projection Projection.\n * @private\n */\nCanvasVectorTileLayerRenderer.prototype.renderTileImage_ = function(\n  tile, pixelRatio, projection) {\n  const layer = this.getLayer();\n  const replayState = tile.getReplayState(layer);\n  const revision = layer.getRevision();\n  const replays = IMAGE_REPLAYS[layer.getRenderMode()];\n  if (replays && replayState.renderedTileRevision !== revision) {\n    replayState.renderedTileRevision = revision;\n    const tileCoord = tile.wrappedTileCoord;\n    const z = tileCoord[0];\n    const source = /** @type {module:ol/source/VectorTile} */ (layer.getSource());\n    const tileGrid = source.getTileGridForProjection(projection);\n    const resolution = tileGrid.getResolution(z);\n    const context = tile.getContext(layer);\n    const size = source.getTilePixelSize(z, pixelRatio, projection);\n    context.canvas.width = size[0];\n    context.canvas.height = size[1];\n    const tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent);\n    for (let i = 0, ii = tile.tileKeys.length; i < ii; ++i) {\n      const sourceTile = tile.getTile(tile.tileKeys[i]);\n      if (sourceTile.getState() != TileState.LOADED) {\n        continue;\n      }\n      const pixelScale = pixelRatio / resolution;\n      const transform = resetTransform(this.tmpTransform_);\n      scaleTransform(transform, pixelScale, -pixelScale);\n      translateTransform(transform, -tileExtent[0], -tileExtent[3]);\n      const replayGroup = sourceTile.getReplayGroup(layer, tile.tileCoord.toString());\n      replayGroup.replay(context, transform, 0, {}, replays);\n    }\n  }\n};\n\nexport default CanvasVectorTileLayerRenderer;\n","/**\n * @module ol/Map\n */\nimport {inherits} from './index.js';\nimport PluggableMap from './PluggableMap.js';\nimport {defaults as defaultControls} from './control/util.js';\nimport {defaults as defaultInteractions} from './interaction.js';\nimport {assign} from './obj.js';\nimport CanvasImageLayerRenderer from './renderer/canvas/ImageLayer.js';\nimport CanvasMapRenderer from './renderer/canvas/Map.js';\nimport CanvasTileLayerRenderer from './renderer/canvas/TileLayer.js';\nimport CanvasVectorLayerRenderer from './renderer/canvas/VectorLayer.js';\nimport CanvasVectorTileLayerRenderer from './renderer/canvas/VectorTileLayer.js';\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map';\n *     import View from 'ol/View';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *\n *     var map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM()\n *         })\n *       ],\n *       target: 'map'\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~Group}\n * is a subclass of {@link module:ol/layer/Base}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @constructor\n * @extends {module:ol/PluggableMap}\n * @param {module:ol/PluggableMap~MapOptions} options Map options.\n * @fires module:ol/MapBrowserEvent~MapBrowserEvent\n * @fires module:ol/MapEvent~MapEvent\n * @fires module:ol/render/Event~RenderEvent#postcompose\n * @fires module:ol/render/Event~RenderEvent#precompose\n * @api\n */\nconst Map = function(options) {\n  options = assign({}, options);\n  if (!options.controls) {\n    options.controls = defaultControls();\n  }\n  if (!options.interactions) {\n    options.interactions = defaultInteractions();\n  }\n\n  PluggableMap.call(this, options);\n};\n\ninherits(Map, PluggableMap);\n\nMap.prototype.createRenderer = function() {\n  const renderer = new CanvasMapRenderer(this);\n  renderer.registerLayerRenderers([\n    CanvasImageLayerRenderer,\n    CanvasTileLayerRenderer,\n    CanvasVectorLayerRenderer,\n    CanvasVectorTileLayerRenderer\n  ]);\n  return renderer;\n};\n\nexport default Map;\n","/**\n * @module ol/control/util\n */\nimport Collection from '../Collection.js';\nimport Attribution from './Attribution.js';\nimport Rotate from './Rotate.js';\nimport Zoom from './Zoom.js';\n\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {module:ol/control/Attribution~Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {module:ol/control/Rotate~Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {module:ol/control/Zoom~Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n * @api\n */\n\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {module:ol/control/util~DefaultsOptions=} opt_options\n * Defaults options.\n * @return {module:ol/Collection.<module:ol/control/Control>}\n * Controls.\n * @function module:ol/control.defaults\n * @api\n */\nexport function defaults(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl = options.attribution !== undefined ?\n    options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/interaction\n */\nimport Collection from './Collection.js';\nimport Kinetic from './Kinetic.js';\nimport DoubleClickZoom from './interaction/DoubleClickZoom.js';\nimport DragPan from './interaction/DragPan.js';\nimport DragRotate from './interaction/DragRotate.js';\nimport DragZoom from './interaction/DragZoom.js';\nimport KeyboardPan from './interaction/KeyboardPan.js';\nimport KeyboardZoom from './interaction/KeyboardZoom.js';\nimport MouseWheelZoom from './interaction/MouseWheelZoom.js';\nimport PinchRotate from './interaction/PinchRotate.js';\nimport PinchZoom from './interaction/PinchZoom.js';\n\nexport {default as DoubleClickZoom} from './interaction/DoubleClickZoom.js';\nexport {default as DragAndDrop} from './interaction/DragAndDrop.js';\nexport {default as DragBox} from './interaction/DragBox.js';\nexport {default as DragPan} from './interaction/DragPan.js';\nexport {default as DragRotate} from './interaction/DragRotate.js';\nexport {default as DragRotateAndZoom} from './interaction/DragRotateAndZoom.js';\nexport {default as DragZoom} from './interaction/DragZoom.js';\nexport {default as Draw} from './interaction/Draw.js';\nexport {default as Extent} from './interaction/Extent.js';\nexport {default as Interaction} from './interaction/Interaction.js';\nexport {default as KeyboardPan} from './interaction/KeyboardPan.js';\nexport {default as KeyboardZoom} from './interaction/KeyboardZoom.js';\nexport {default as Modify} from './interaction/Modify.js';\nexport {default as MouseWheelZoom} from './interaction/MouseWheelZoom.js';\nexport {default as PinchRotate} from './interaction/PinchRotate.js';\nexport {default as PinchZoom} from './interaction/PinchZoom.js';\nexport {default as Pointer} from './interaction/Pointer.js';\nexport {default as Select} from './interaction/Select.js';\nexport {default as Snap} from './interaction/Snap.js';\nexport {default as Translate} from './interaction/Translate.js';\n\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [constrainResolution=false] Zoom to the closest integer\n * zoom level after the wheel/trackpad or pinch gesture ends.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or\n * mousewheel zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction} instances and insert\n * them into a {@link module:ol/Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. The default set of\n * interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {module:ol/interaction/Interaction~DefaultsOptions=} opt_options\n * Defaults options.\n * @return {module:ol/Collection.<module:ol/interaction/Interaction>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate = options.altShiftDragRotate !== undefined ?\n    options.altShiftDragRotate : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom = options.doubleClickZoom !== undefined ?\n    options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(new DoubleClickZoom({\n      delta: options.zoomDelta,\n      duration: options.zoomDuration\n    }));\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(new DragPan({\n      kinetic: kinetic\n    }));\n  }\n\n  const pinchRotate = options.pinchRotate !== undefined ? options.pinchRotate :\n    true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(new PinchZoom({\n      constrainResolution: options.constrainResolution,\n      duration: options.zoomDuration\n    }));\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(new KeyboardZoom({\n      delta: options.zoomDelta,\n      duration: options.zoomDuration\n    }));\n  }\n\n  const mouseWheelZoom = options.mouseWheelZoom !== undefined ?\n    options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(new MouseWheelZoom({\n      constrainResolution: options.constrainResolution,\n      duration: options.zoomDuration\n    }));\n  }\n\n  const shiftDragZoom = options.shiftDragZoom !== undefined ?\n    options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(new DragZoom({\n      duration: options.zoomDuration\n    }));\n  }\n\n  return interactions;\n\n}\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError'\n};\n","/**\n * @module ol/layer/Tile\n */\nimport {inherits} from '../index.js';\nimport LayerType from '../LayerType.js';\nimport Layer from '../layer/Layer.js';\nimport TileProperty from '../layer/TileProperty.js';\nimport {assign} from '../obj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {module:ol/extent~Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex=0] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {module:ol/source/Tile} [source] Source for this layer.\n * @property {module:ol/PluggableMap} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n */\n\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @constructor\n * @extends {module:ol/layer/Layer}\n * @fires module:ol/render/Event~RenderEvent\n * @param {module:ol/layer/Tile~Options=} opt_options Tile layer options.\n * @api\n */\nconst TileLayer = function(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  const baseOptions = assign({}, options);\n\n  delete baseOptions.preload;\n  delete baseOptions.useInterimTilesOnError;\n  Layer.call(this,  /** @type {module:ol/layer/Layer~Options} */ (baseOptions));\n\n  this.setPreload(options.preload !== undefined ? options.preload : 0);\n  this.setUseInterimTilesOnError(options.useInterimTilesOnError !== undefined ?\n    options.useInterimTilesOnError : true);\n\n  /**\n   * The layer type.\n   * @protected\n   * @type {module:ol/LayerType}\n   */\n  this.type = LayerType.TILE;\n\n};\n\ninherits(TileLayer, Layer);\n\n\n/**\n * Return the level as number to which we will preload tiles up to.\n * @return {number} The level to preload tiles up to.\n * @observable\n * @api\n */\nTileLayer.prototype.getPreload = function() {\n  return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n};\n\n\n/**\n * Return the associated {@link module:ol/source/Tile tilesource} of the layer.\n * @function\n * @return {module:ol/source/Tile} Source.\n * @api\n */\nTileLayer.prototype.getSource;\n\n\n/**\n * Set the level as number to which we will preload tiles up to.\n * @param {number} preload The level to preload tiles up to.\n * @observable\n * @api\n */\nTileLayer.prototype.setPreload = function(preload) {\n  this.set(TileProperty.PRELOAD, preload);\n};\n\n\n/**\n * Whether we use interim tiles on error.\n * @return {boolean} Use interim tiles on error.\n * @observable\n * @api\n */\nTileLayer.prototype.getUseInterimTilesOnError = function() {\n  return /** @type {boolean} */ (this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR));\n};\n\n\n/**\n * Set whether we use interim tiles on error.\n * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n * @observable\n * @api\n */\nTileLayer.prototype.setUseInterimTilesOnError = function(useInterimTilesOnError) {\n  this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n};\nexport default TileLayer;\n","/**\n * @module ol/Tile\n */\nimport {inherits} from './index.js';\nimport TileState from './TileState.js';\nimport {easeIn} from './easing.js';\nimport EventTarget from './events/EventTarget.js';\nimport EventType from './events/EventType.js';\n\n\n/**\n * A function that takes an {@link module:ol/Tile} for the tile and a\n * `{string}` for the url as arguments.\n *\n * @typedef {function(module:ol/Tile, string)} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~Tile} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(module:ol/tilecoord~TileCoord, number,\n *           module:ol/proj/Projection): (string|undefined)} UrlFunction\n * @api\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @api\n */\n\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @constructor\n * @abstract\n * @extends {module:ol/events/EventTarget}\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @param {module:ol/TileState} state State.\n * @param {module:ol/Tile~Options=} opt_options Tile options.\n */\nconst Tile = function(tileCoord, state, opt_options) {\n  EventTarget.call(this);\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @type {module:ol/tilecoord~TileCoord}\n   */\n  this.tileCoord = tileCoord;\n\n  /**\n   * @protected\n   * @type {module:ol/TileState}\n   */\n  this.state = state;\n\n  /**\n   * An \"interim\" tile for this tile. The interim tile may be used while this\n   * one is loading, for \"smooth\" transitions when changing params/dimensions\n   * on the source.\n   * @type {module:ol/Tile}\n   */\n  this.interimTile = null;\n\n  /**\n   * A key assigned to the tile. This is used by the tile source to determine\n   * if this tile can effectively be used, or if a new tile should be created\n   * and this one be used as an interim tile for this new tile.\n   * @type {string}\n   */\n  this.key = '';\n\n  /**\n   * The duration for the opacity transition.\n   * @type {number}\n   */\n  this.transition_ = options.transition === undefined ? 250 : options.transition;\n\n  /**\n   * Lookup of start times for rendering transitions.  If the start time is\n   * equal to -1, the transition is complete.\n   * @type {Object.<number, number>}\n   */\n  this.transitionStarts_ = {};\n\n};\n\ninherits(Tile, EventTarget);\n\n\n/**\n * @protected\n */\nTile.prototype.changed = function() {\n  this.dispatchEvent(EventType.CHANGE);\n};\n\n\n/**\n * @return {string} Key.\n */\nTile.prototype.getKey = function() {\n  return this.key + '/' + this.tileCoord;\n};\n\n/**\n * Get the interim tile most suitable for rendering using the chain of interim\n * tiles. This corresponds to the  most recent tile that has been loaded, if no\n * such tile exists, the original tile is returned.\n * @return {!module:ol/Tile} Best tile for rendering.\n */\nTile.prototype.getInterimTile = function() {\n  if (!this.interimTile) {\n    //empty chain\n    return this;\n  }\n  let tile = this.interimTile;\n\n  // find the first loaded tile and return it. Since the chain is sorted in\n  // decreasing order of creation time, there is no need to search the remainder\n  // of the list (all those tiles correspond to older requests and will be\n  // cleaned up by refreshInterimChain)\n  do {\n    if (tile.getState() == TileState.LOADED) {\n      return tile;\n    }\n    tile = tile.interimTile;\n  } while (tile);\n\n  // we can not find a better tile\n  return this;\n};\n\n/**\n * Goes through the chain of interim tiles and discards sections of the chain\n * that are no longer relevant.\n */\nTile.prototype.refreshInterimChain = function() {\n  if (!this.interimTile) {\n    return;\n  }\n\n  let tile = this.interimTile;\n  let prev = this;\n\n  do {\n    if (tile.getState() == TileState.LOADED) {\n      //we have a loaded tile, we can discard the rest of the list\n      //we would could abort any LOADING tile request\n      //older than this tile (i.e. any LOADING tile following this entry in the chain)\n      tile.interimTile = null;\n      break;\n    } else if (tile.getState() == TileState.LOADING) {\n      //keep this LOADING tile any loaded tiles later in the chain are\n      //older than this tile, so we're still interested in the request\n      prev = tile;\n    } else if (tile.getState() == TileState.IDLE) {\n      //the head of the list is the most current tile, we don't need\n      //to start any other requests for this chain\n      prev.interimTile = tile.interimTile;\n    } else {\n      prev = tile;\n    }\n    tile = prev.interimTile;\n  } while (tile);\n};\n\n/**\n * Get the tile coordinate for this tile.\n * @return {module:ol/tilecoord~TileCoord} The tile coordinate.\n * @api\n */\nTile.prototype.getTileCoord = function() {\n  return this.tileCoord;\n};\n\n\n/**\n * @return {module:ol/TileState} State.\n */\nTile.prototype.getState = function() {\n  return this.state;\n};\n\n/**\n * @param {module:ol/TileState} state State.\n */\nTile.prototype.setState = function(state) {\n  this.state = state;\n  this.changed();\n};\n\n/**\n * Load the image or retry if loading previously failed.\n * Loading is taken care of by the tile queue, and calling this method is\n * only needed for preloading or for reloading in case of an error.\n * @abstract\n * @api\n */\nTile.prototype.load = function() {};\n\n/**\n * Get the alpha value for rendering.\n * @param {number} id An id for the renderer.\n * @param {number} time The render frame time.\n * @return {number} A number between 0 and 1.\n */\nTile.prototype.getAlpha = function(id, time) {\n  if (!this.transition_) {\n    return 1;\n  }\n\n  let start = this.transitionStarts_[id];\n  if (!start) {\n    start = time;\n    this.transitionStarts_[id] = start;\n  } else if (start === -1) {\n    return 1;\n  }\n\n  const delta = time - start + (1000 / 60); // avoid rendering at 0\n  if (delta >= this.transition_) {\n    return 1;\n  }\n  return easeIn(delta / this.transition_);\n};\n\n/**\n * Determine if a tile is in an alpha transition.  A tile is considered in\n * transition if tile.getAlpha() has not yet been called or has been called\n * and returned 1.\n * @param {number} id An id for the renderer.\n * @return {boolean} The tile is in transition.\n */\nTile.prototype.inTransition = function(id) {\n  if (!this.transition_) {\n    return false;\n  }\n  return this.transitionStarts_[id] !== -1;\n};\n\n/**\n * Mark a transition as complete.\n * @param {number} id An id for the renderer.\n */\nTile.prototype.endTransition = function(id) {\n  if (this.transition_) {\n    this.transitionStarts_[id] = -1;\n  }\n};\nexport default Tile;\n","/**\n * @module ol/ImageTile\n */\nimport {inherits} from './index.js';\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenOnce, unlistenByKey} from './events.js';\nimport EventType from './events/EventType.js';\n\n/**\n * @typedef {function(new: module:ol/ImageTile, module:ol/tilecoord~TileCoord,\n * module:ol/TileState, string, ?string, module:ol/Tile~LoadFunction)} TileClass\n * @api\n */\n\n/**\n * @constructor\n * @extends {module:ol/Tile}\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @param {module:ol/TileState} state State.\n * @param {string} src Image source URI.\n * @param {?string} crossOrigin Cross origin.\n * @param {module:ol/Tile~LoadFunction} tileLoadFunction Tile load function.\n * @param {module:ol/Tile~Options=} opt_options Tile options.\n */\nconst ImageTile = function(tileCoord, state, src, crossOrigin, tileLoadFunction, opt_options) {\n\n  Tile.call(this, tileCoord, state, opt_options);\n\n  /**\n   * @private\n   * @type {?string}\n   */\n  this.crossOrigin_ = crossOrigin;\n\n  /**\n   * Image URI\n   *\n   * @private\n   * @type {string}\n   */\n  this.src_ = src;\n\n  /**\n   * @private\n   * @type {Image|HTMLCanvasElement}\n   */\n  this.image_ = new Image();\n  if (crossOrigin !== null) {\n    this.image_.crossOrigin = crossOrigin;\n  }\n\n  /**\n   * @private\n   * @type {Array.<module:ol/events~EventsKey>}\n   */\n  this.imageListenerKeys_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/Tile~LoadFunction}\n   */\n  this.tileLoadFunction_ = tileLoadFunction;\n\n};\n\ninherits(ImageTile, Tile);\n\n\n/**\n * @inheritDoc\n */\nImageTile.prototype.disposeInternal = function() {\n  if (this.state == TileState.LOADING) {\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n  }\n  if (this.interimTile) {\n    this.interimTile.dispose();\n  }\n  this.state = TileState.ABORT;\n  this.changed();\n  Tile.prototype.disposeInternal.call(this);\n};\n\n\n/**\n * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n * @api\n */\nImageTile.prototype.getImage = function() {\n  return this.image_;\n};\n\n\n/**\n * @inheritDoc\n */\nImageTile.prototype.getKey = function() {\n  return this.src_;\n};\n\n\n/**\n * Tracks loading or read errors.\n *\n * @private\n */\nImageTile.prototype.handleImageError_ = function() {\n  this.state = TileState.ERROR;\n  this.unlistenImage_();\n  this.image_ = getBlankImage();\n  this.changed();\n};\n\n\n/**\n * Tracks successful image load.\n *\n * @private\n */\nImageTile.prototype.handleImageLoad_ = function() {\n  if (this.image_.naturalWidth && this.image_.naturalHeight) {\n    this.state = TileState.LOADED;\n  } else {\n    this.state = TileState.EMPTY;\n  }\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nImageTile.prototype.load = function() {\n  if (this.state == TileState.ERROR) {\n    this.state = TileState.IDLE;\n    this.image_ = new Image();\n    if (this.crossOrigin_ !== null) {\n      this.image_.crossOrigin = this.crossOrigin_;\n    }\n  }\n  if (this.state == TileState.IDLE) {\n    this.state = TileState.LOADING;\n    this.changed();\n    this.imageListenerKeys_ = [\n      listenOnce(this.image_, EventType.ERROR,\n        this.handleImageError_, this),\n      listenOnce(this.image_, EventType.LOAD,\n        this.handleImageLoad_, this)\n    ];\n    this.tileLoadFunction_(this, this.src_);\n  }\n};\n\n\n/**\n * Discards event handlers which listen for load completion or errors.\n *\n * @private\n */\nImageTile.prototype.unlistenImage_ = function() {\n  this.imageListenerKeys_.forEach(unlistenByKey);\n  this.imageListenerKeys_ = null;\n};\n\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/tilecoord\n */\n\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z`, `x`, and `y`. `z` is the zoom level.\n * @typedef {Array.<number>} TileCoord\n * @api\n */\n\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {module:ol/tilecoord~TileCoord=} opt_tileCoord Tile coordinate.\n * @return {module:ol/tilecoord~TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, opt_tileCoord) {\n  if (opt_tileCoord !== undefined) {\n    opt_tileCoord[0] = z;\n    opt_tileCoord[1] = x;\n    opt_tileCoord[2] = y;\n    return opt_tileCoord;\n  } else {\n    return [z, x, y];\n  }\n}\n\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n\n/**\n * Get the key for a tile coord.\n * @param {module:ol/tilecoord~TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {module:ol/tilecoord~TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n\n/**\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n\n/**\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coord.\n * @return {string} Quad key.\n */\nexport function quadKey(tileCoord) {\n  const z = tileCoord[0];\n  const digits = new Array(z);\n  let mask = 1 << (z - 1);\n  let i, charCode;\n  for (i = 0; i < z; ++i) {\n    // 48 is charCode for 0 - '0'.charCodeAt(0)\n    charCode = 48;\n    if (tileCoord[1] & mask) {\n      charCode += 1;\n    }\n    if (tileCoord[2] & mask) {\n      charCode += 2;\n    }\n    digits[i] = String.fromCharCode(charCode);\n    mask >>= 1;\n  }\n  return digits.join('');\n}\n\n\n/**\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @param {!module:ol/tilegrid/TileGrid} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const extent = tileGrid.getExtent();\n  let tileRange;\n  if (!extent) {\n    tileRange = tileGrid.getFullTileRange(z);\n  } else {\n    tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n  }\n  if (!tileRange) {\n    return true;\n  } else {\n    return tileRange.containsXY(x, y);\n  }\n}\n","/**\n * @module ol/TileCache\n */\nimport {inherits} from './index.js';\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\n/**\n * @constructor\n * @extends {module:ol/structs/LRUCache.<module:ol/Tile>}\n * @param {number=} opt_highWaterMark High water mark.\n * @struct\n */\nconst TileCache = function(opt_highWaterMark) {\n\n  LRUCache.call(this, opt_highWaterMark);\n\n};\n\ninherits(TileCache, LRUCache);\n\n\n/**\n * @param {!Object.<string, module:ol/TileRange>} usedTiles Used tiles.\n */\nTileCache.prototype.expireCache = function(usedTiles) {\n  while (this.canExpireCache()) {\n    const tile = this.peekLast();\n    const zKey = tile.tileCoord[0].toString();\n    if (zKey in usedTiles && usedTiles[zKey].contains(tile.tileCoord)) {\n      break;\n    } else {\n      this.pop().dispose();\n    }\n  }\n};\n\n\n/**\n * Prune all tiles from the cache that don't have the same z as the newest tile.\n */\nTileCache.prototype.pruneExceptNewestZ = function() {\n  if (this.getCount() === 0) {\n    return;\n  }\n  const key = this.peekFirstKey();\n  const tileCoord = fromKey(key);\n  const z = tileCoord[0];\n  this.forEach(function(tile) {\n    if (tile.tileCoord[0] !== z) {\n      this.remove(getKey(tile.tileCoord));\n      tile.dispose();\n    }\n  }, this);\n};\nexport default TileCache;\n","/**\n * @module ol/reproj\n */\nimport {createCanvasContext2D} from './dom.js';\nimport {containsCoordinate, createEmpty, extend, getHeight, getTopLeft, getWidth} from './extent.js';\nimport {solveLinearSystem} from './math.js';\nimport {getPointResolution, transform} from './proj.js';\n\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {module:ol/proj/Projection} sourceProj Source projection.\n * @param {module:ol/proj/Projection} targetProj Target projection.\n * @param {module:ol/coordinate~Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(sourceProj, targetProj,\n  targetCenter, targetResolution) {\n\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(targetProj, targetResolution, targetCenter);\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor = getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n        sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n\n/**\n * Enlarge the clipping triangle point by 1 pixel to ensure the edges overlap\n * in order to mask gaps caused by antialiasing.\n *\n * @param {number} centroidX Centroid of the triangle (x coordinate in pixels).\n * @param {number} centroidY Centroid of the triangle (y coordinate in pixels).\n * @param {number} x X coordinate of the point (in pixels).\n * @param {number} y Y coordinate of the point (in pixels).\n * @return {module:ol/coordinate~Coordinate} New point 1 px farther from the centroid.\n */\nfunction enlargeClipPoint(centroidX, centroidY, x, y) {\n  const dX = x - centroidX;\n  const dY = y - centroidY;\n  const distance = Math.sqrt(dX * dX + dY * dY);\n  return [Math.round(x + dX / distance), Math.round(y + dY / distance)];\n}\n\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {module:ol/extent~Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {module:ol/extent~Extent} targetExtent Target extent.\n * @param {module:ol/reproj/Triangulation} triangulation\n * Calculated triangulation.\n * @param {Array.<{extent: module:ol/extent~Extent,\n *                 image: (HTMLCanvasElement|Image|HTMLVideoElement)}>} sources\n * Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean=} opt_renderEdges Render reprojection edges.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(width, height, pixelRatio,\n  sourceResolution, sourceExtent, targetResolution, targetExtent,\n  triangulation, sources, gutter, opt_renderEdges) {\n\n  const context = createCanvasContext2D(Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height));\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function(src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  const canvasWidthInUnits = getWidth(sourceDataExtent);\n  const canvasHeightInUnits = getHeight(sourceDataExtent);\n  const stitchContext = createCanvasContext2D(\n    Math.round(pixelRatio * canvasWidthInUnits / sourceResolution),\n    Math.round(pixelRatio * canvasHeightInUnits / sourceResolution));\n\n  const stitchScale = pixelRatio / sourceResolution;\n\n  sources.forEach(function(src, i, arr) {\n    const xPos = src.extent[0] - sourceDataExtent[0];\n    const yPos = -(src.extent[3] - sourceDataExtent[3]);\n    const srcWidth = getWidth(src.extent);\n    const srcHeight = getHeight(src.extent);\n\n    stitchContext.drawImage(\n      src.image,\n      gutter, gutter,\n      src.image.width - 2 * gutter, src.image.height - 2 * gutter,\n      xPos * stitchScale, yPos * stitchScale,\n      srcWidth * stitchScale, srcHeight * stitchScale);\n  });\n\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function(triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0], y0 = source[0][1];\n    let x1 = source[1][0], y1 = source[1][1];\n    let x2 = source[2][0], y2 = source[2][1];\n    const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n    const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n    const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n    const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n    const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n    const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0]\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n    const centroidX = (u0 + u1 + u2) / 3;\n    const centroidY = (v0 + v1 + v2) / 3;\n    const p0 = enlargeClipPoint(centroidX, centroidY, u0, v0);\n    const p1 = enlargeClipPoint(centroidX, centroidY, u1, v1);\n    const p2 = enlargeClipPoint(centroidX, centroidY, u2, v2);\n\n    context.moveTo(p1[0], p1[1]);\n    context.lineTo(p0[0], p0[1]);\n    context.lineTo(p2[0], p2[1]);\n    context.clip();\n\n    context.transform(\n      affineCoefs[0], affineCoefs[2], affineCoefs[1], affineCoefs[3], u0, v0);\n\n    context.translate(sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY);\n\n    context.scale(sourceResolution / pixelRatio,\n      -sourceResolution / pixelRatio);\n\n    context.drawImage(stitchContext.canvas, 0, 0);\n    context.restore();\n  });\n\n  if (opt_renderEdges) {\n    context.save();\n\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function(triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {boundingExtent, createEmpty, extendCoordinate, getBottomLeft, getBottomRight,\n  getTopLeft, getTopRight, getWidth, intersects} from '../extent.js';\nimport {modulo} from '../math.js';\nimport {getTransform} from '../proj.js';\n\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array.<module:ol/coordinate~Coordinate>} source\n * @property {Array.<module:ol/coordinate~Coordinate>} target\n */\n\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n *\n * @param {module:ol/proj/Projection} sourceProj Source projection.\n * @param {module:ol/proj/Projection} targetProj Target projection.\n * @param {module:ol/extent~Extent} targetExtent Target extent to triangulate.\n * @param {module:ol/extent~Extent} maxSourceExtent Maximal source extent that can be used.\n * @param {number} errorThreshold Acceptable error (in source units).\n * @constructor\n */\nconst Triangulation = function(sourceProj, targetProj, targetExtent,\n  maxSourceExtent, errorThreshold) {\n\n  /**\n   * @type {module:ol/proj/Projection}\n   * @private\n   */\n  this.sourceProj_ = sourceProj;\n\n  /**\n   * @type {module:ol/proj/Projection}\n   * @private\n   */\n  this.targetProj_ = targetProj;\n\n  /** @type {!Object.<string, module:ol/coordinate~Coordinate>} */\n  let transformInvCache = {};\n  const transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n  /**\n   * @param {module:ol/coordinate~Coordinate} c A coordinate.\n   * @return {module:ol/coordinate~Coordinate} Transformed coordinate.\n   * @private\n   */\n  this.transformInv_ = function(c) {\n    const key = c[0] + '/' + c[1];\n    if (!transformInvCache[key]) {\n      transformInvCache[key] = transformInv(c);\n    }\n    return transformInvCache[key];\n  };\n\n  /**\n   * @type {module:ol/extent~Extent}\n   * @private\n   */\n  this.maxSourceExtent_ = maxSourceExtent;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n  /**\n   * @type {Array.<module:ol/reproj/Triangulation~Triangle>}\n   * @private\n   */\n  this.triangles_ = [];\n\n  /**\n   * Indicates that the triangulation crosses edge of the source projection.\n   * @type {boolean}\n   * @private\n   */\n  this.wrapsXInSource_ = false;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.canWrapXInSource_ = this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      (getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent()));\n\n  /**\n   * @type {?number}\n   * @private\n   */\n  this.sourceWorldWidth_ = this.sourceProj_.getExtent() ?\n    getWidth(this.sourceProj_.getExtent()) : null;\n\n  /**\n   * @type {?number}\n   * @private\n   */\n  this.targetWorldWidth_ = this.targetProj_.getExtent() ?\n    getWidth(this.targetProj_.getExtent()) : null;\n\n  const destinationTopLeft = getTopLeft(targetExtent);\n  const destinationTopRight = getTopRight(targetExtent);\n  const destinationBottomRight = getBottomRight(targetExtent);\n  const destinationBottomLeft = getBottomLeft(targetExtent);\n  const sourceTopLeft = this.transformInv_(destinationTopLeft);\n  const sourceTopRight = this.transformInv_(destinationTopRight);\n  const sourceBottomRight = this.transformInv_(destinationBottomRight);\n  const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n  this.addQuad_(\n    destinationTopLeft, destinationTopRight,\n    destinationBottomRight, destinationBottomLeft,\n    sourceTopLeft, sourceTopRight, sourceBottomRight, sourceBottomLeft,\n    MAX_SUBDIVISION);\n\n  if (this.wrapsXInSource_) {\n    let leftBound = Infinity;\n    this.triangles_.forEach(function(triangle, i, arr) {\n      leftBound = Math.min(leftBound,\n        triangle.source[0][0], triangle.source[1][0], triangle.source[2][0]);\n    });\n\n    // Shift triangles to be as close to `leftBound` as possible\n    // (if the distance is more than `worldWidth / 2` it can be closer.\n    this.triangles_.forEach(function(triangle) {\n      if (Math.max(triangle.source[0][0], triangle.source[1][0],\n        triangle.source[2][0]) - leftBound > this.sourceWorldWidth_ / 2) {\n        const newTriangle = [[triangle.source[0][0], triangle.source[0][1]],\n          [triangle.source[1][0], triangle.source[1][1]],\n          [triangle.source[2][0], triangle.source[2][1]]];\n        if ((newTriangle[0][0] - leftBound) > this.sourceWorldWidth_ / 2) {\n          newTriangle[0][0] -= this.sourceWorldWidth_;\n        }\n        if ((newTriangle[1][0] - leftBound) > this.sourceWorldWidth_ / 2) {\n          newTriangle[1][0] -= this.sourceWorldWidth_;\n        }\n        if ((newTriangle[2][0] - leftBound) > this.sourceWorldWidth_ / 2) {\n          newTriangle[2][0] -= this.sourceWorldWidth_;\n        }\n\n        // Rarely (if the extent contains both the dateline and prime meridian)\n        // the shift can in turn break some triangles.\n        // Detect this here and don't shift in such cases.\n        const minX = Math.min(\n          newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n        const maxX = Math.max(\n          newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n        if ((maxX - minX) < this.sourceWorldWidth_ / 2) {\n          triangle.source = newTriangle;\n        }\n      }\n    }.bind(this));\n  }\n\n  transformInvCache = {};\n};\n\n\n/**\n * Adds triangle to the triangulation.\n * @param {module:ol/coordinate~Coordinate} a The target a coordinate.\n * @param {module:ol/coordinate~Coordinate} b The target b coordinate.\n * @param {module:ol/coordinate~Coordinate} c The target c coordinate.\n * @param {module:ol/coordinate~Coordinate} aSrc The source a coordinate.\n * @param {module:ol/coordinate~Coordinate} bSrc The source b coordinate.\n * @param {module:ol/coordinate~Coordinate} cSrc The source c coordinate.\n * @private\n */\nTriangulation.prototype.addTriangle_ = function(a, b, c,\n  aSrc, bSrc, cSrc) {\n  this.triangles_.push({\n    source: [aSrc, bSrc, cSrc],\n    target: [a, b, c]\n  });\n};\n\n\n/**\n * Adds quad (points in clock-wise order) to the triangulation\n * (and reprojects the vertices) if valid.\n * Performs quad subdivision if needed to increase precision.\n *\n * @param {module:ol/coordinate~Coordinate} a The target a coordinate.\n * @param {module:ol/coordinate~Coordinate} b The target b coordinate.\n * @param {module:ol/coordinate~Coordinate} c The target c coordinate.\n * @param {module:ol/coordinate~Coordinate} d The target d coordinate.\n * @param {module:ol/coordinate~Coordinate} aSrc The source a coordinate.\n * @param {module:ol/coordinate~Coordinate} bSrc The source b coordinate.\n * @param {module:ol/coordinate~Coordinate} cSrc The source c coordinate.\n * @param {module:ol/coordinate~Coordinate} dSrc The source d coordinate.\n * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n * @private\n */\nTriangulation.prototype.addQuad_ = function(a, b, c, d,\n  aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n\n  const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n  const sourceCoverageX = this.sourceWorldWidth_ ?\n    getWidth(sourceQuadExtent) / this.sourceWorldWidth_ : null;\n  const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n  // when the quad is wrapped in the source projection\n  // it covers most of the projection extent, but not fully\n  const wrapsX = this.sourceProj_.canWrapX() &&\n               sourceCoverageX > 0.5 && sourceCoverageX < 1;\n\n  let needsSubdivision = false;\n\n  if (maxSubdivision > 0) {\n    if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n      const targetQuadExtent = boundingExtent([a, b, c, d]);\n      const targetCoverageX = getWidth(targetQuadExtent) / this.targetWorldWidth_;\n      needsSubdivision |=\n          targetCoverageX > MAX_TRIANGLE_WIDTH;\n    }\n    if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n      needsSubdivision |=\n          sourceCoverageX > MAX_TRIANGLE_WIDTH;\n    }\n  }\n\n  if (!needsSubdivision && this.maxSourceExtent_) {\n    if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n      // whole quad outside source projection extent -> ignore\n      return;\n    }\n  }\n\n  if (!needsSubdivision) {\n    if (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) || !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) || !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) || !isFinite(dSrc[1])) {\n      if (maxSubdivision > 0) {\n        needsSubdivision = true;\n      } else {\n        return;\n      }\n    }\n  }\n\n  if (maxSubdivision > 0) {\n    if (!needsSubdivision) {\n      const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n      const centerSrc = this.transformInv_(center);\n\n      let dx;\n      if (wrapsX) {\n        const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n             modulo(cSrc[0], sourceWorldWidth)) / 2;\n        dx = centerSrcEstimX -\n            modulo(centerSrc[0], sourceWorldWidth);\n      } else {\n        dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n      }\n      const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n      const centerSrcErrorSquared = dx * dx + dy * dy;\n      needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n    }\n    if (needsSubdivision) {\n      if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n        // split horizontally (top & bottom)\n        const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n        const bcSrc = this.transformInv_(bc);\n        const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n        const daSrc = this.transformInv_(da);\n\n        this.addQuad_(\n          a, b, bc, da, aSrc, bSrc, bcSrc, daSrc, maxSubdivision - 1);\n        this.addQuad_(\n          da, bc, c, d, daSrc, bcSrc, cSrc, dSrc, maxSubdivision - 1);\n      } else {\n        // split vertically (left & right)\n        const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n        const abSrc = this.transformInv_(ab);\n        const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n        const cdSrc = this.transformInv_(cd);\n\n        this.addQuad_(\n          a, ab, cd, d, aSrc, abSrc, cdSrc, dSrc, maxSubdivision - 1);\n        this.addQuad_(\n          ab, b, c, cd, abSrc, bSrc, cSrc, cdSrc, maxSubdivision - 1);\n      }\n      return;\n    }\n  }\n\n  if (wrapsX) {\n    if (!this.canWrapXInSource_) {\n      return;\n    }\n    this.wrapsXInSource_ = true;\n  }\n\n  this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n  this.addTriangle_(a, b, c, aSrc, bSrc, cSrc);\n};\n\n\n/**\n * Calculates extent of the 'source' coordinates from all the triangles.\n *\n * @return {module:ol/extent~Extent} Calculated extent.\n */\nTriangulation.prototype.calculateSourceExtent = function() {\n  const extent = createEmpty();\n\n  this.triangles_.forEach(function(triangle, i, arr) {\n    const src = triangle.source;\n    extendCoordinate(extent, src[0]);\n    extendCoordinate(extent, src[1]);\n    extendCoordinate(extent, src[2]);\n  });\n\n  return extent;\n};\n\n\n/**\n * @return {Array.<module:ol/reproj/Triangulation~Triangle>} Array of the calculated triangles.\n */\nTriangulation.prototype.getTriangles = function() {\n  return this.triangles_;\n};\nexport default Triangulation;\n","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\nimport {inherits} from '../index.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getArea, getCenter, getIntersection} from '../extent.js';\nimport {clamp} from '../math.js';\nimport {calculateSourceResolution, render as renderReprojected} from '../reproj.js';\nimport Triangulation from '../reproj/Triangulation.js';\n\n\n/**\n * @typedef {function(number, number, number, number) : module:ol/Tile} FunctionType\n */\n\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n * @constructor\n * @extends {module:ol/Tile}\n * @param {module:ol/proj/Projection} sourceProj Source projection.\n * @param {module:ol/tilegrid/TileGrid} sourceTileGrid Source tile grid.\n * @param {module:ol/proj/Projection} targetProj Target projection.\n * @param {module:ol/tilegrid/TileGrid} targetTileGrid Target tile grid.\n * @param {module:ol/tilecoord~TileCoord} tileCoord Coordinate of the tile.\n * @param {module:ol/tilecoord~TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} gutter Gutter of the source tiles.\n * @param {module:ol/reproj/Tile~FunctionType} getTileFunction\n *     Function returning source tiles (z, x, y, pixelRatio).\n * @param {number=} opt_errorThreshold Acceptable reprojection error (in px).\n * @param {boolean=} opt_renderEdges Render reprojection edges.\n */\nconst ReprojTile = function(sourceProj, sourceTileGrid,\n  targetProj, targetTileGrid, tileCoord, wrappedTileCoord,\n  pixelRatio, gutter, getTileFunction,\n  opt_errorThreshold, opt_renderEdges) {\n  Tile.call(this, tileCoord, TileState.IDLE);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.renderEdges_ = opt_renderEdges !== undefined ? opt_renderEdges : false;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.pixelRatio_ = pixelRatio;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.gutter_ = gutter;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement}\n   */\n  this.canvas_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/tilegrid/TileGrid}\n   */\n  this.sourceTileGrid_ = sourceTileGrid;\n\n  /**\n   * @private\n   * @type {module:ol/tilegrid/TileGrid}\n   */\n  this.targetTileGrid_ = targetTileGrid;\n\n  /**\n   * @private\n   * @type {module:ol/tilecoord~TileCoord}\n   */\n  this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n  /**\n   * @private\n   * @type {!Array.<module:ol/Tile>}\n   */\n  this.sourceTiles_ = [];\n\n  /**\n   * @private\n   * @type {Array.<module:ol/events~EventsKey>}\n   */\n  this.sourcesListenerKeys_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.sourceZ_ = 0;\n\n  const targetExtent = targetTileGrid.getTileCoordExtent(this.wrappedTileCoord_);\n  const maxTargetExtent = this.targetTileGrid_.getExtent();\n  let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n  const limitedTargetExtent = maxTargetExtent ?\n    getIntersection(targetExtent, maxTargetExtent) : targetExtent;\n\n  if (getArea(limitedTargetExtent) === 0) {\n    // Tile is completely outside range -> EMPTY\n    // TODO: is it actually correct that the source even creates the tile ?\n    this.state = TileState.EMPTY;\n    return;\n  }\n\n  const sourceProjExtent = sourceProj.getExtent();\n  if (sourceProjExtent) {\n    if (!maxSourceExtent) {\n      maxSourceExtent = sourceProjExtent;\n    } else {\n      maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n    }\n  }\n\n  const targetResolution = targetTileGrid.getResolution(\n    this.wrappedTileCoord_[0]);\n\n  const targetCenter = getCenter(limitedTargetExtent);\n  const sourceResolution = calculateSourceResolution(\n    sourceProj, targetProj, targetCenter, targetResolution);\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    // invalid sourceResolution -> EMPTY\n    // probably edges of the projections when no extent is defined\n    this.state = TileState.EMPTY;\n    return;\n  }\n\n  const errorThresholdInPixels = opt_errorThreshold !== undefined ?\n    opt_errorThreshold : ERROR_THRESHOLD;\n\n  /**\n   * @private\n   * @type {!module:ol/reproj/Triangulation}\n   */\n  this.triangulation_ = new Triangulation(\n    sourceProj, targetProj, limitedTargetExtent, maxSourceExtent,\n    sourceResolution * errorThresholdInPixels);\n\n  if (this.triangulation_.getTriangles().length === 0) {\n    // no valid triangles -> EMPTY\n    this.state = TileState.EMPTY;\n    return;\n  }\n\n  this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n  let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n  if (maxSourceExtent) {\n    if (sourceProj.canWrapX()) {\n      sourceExtent[1] = clamp(\n        sourceExtent[1], maxSourceExtent[1], maxSourceExtent[3]);\n      sourceExtent[3] = clamp(\n        sourceExtent[3], maxSourceExtent[1], maxSourceExtent[3]);\n    } else {\n      sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n    }\n  }\n\n  if (!getArea(sourceExtent)) {\n    this.state = TileState.EMPTY;\n  } else {\n    const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n      sourceExtent, this.sourceZ_);\n\n    for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n      for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n        const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n        if (tile) {\n          this.sourceTiles_.push(tile);\n        }\n      }\n    }\n\n    if (this.sourceTiles_.length === 0) {\n      this.state = TileState.EMPTY;\n    }\n  }\n};\n\ninherits(ReprojTile, Tile);\n\n\n/**\n * @inheritDoc\n */\nReprojTile.prototype.disposeInternal = function() {\n  if (this.state == TileState.LOADING) {\n    this.unlistenSources_();\n  }\n  Tile.prototype.disposeInternal.call(this);\n};\n\n\n/**\n * Get the HTML Canvas element for this tile.\n * @return {HTMLCanvasElement} Canvas.\n */\nReprojTile.prototype.getImage = function() {\n  return this.canvas_;\n};\n\n\n/**\n * @private\n */\nReprojTile.prototype.reproject_ = function() {\n  const sources = [];\n  this.sourceTiles_.forEach(function(tile, i, arr) {\n    if (tile && tile.getState() == TileState.LOADED) {\n      sources.push({\n        extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n        image: tile.getImage()\n      });\n    }\n  }.bind(this));\n  this.sourceTiles_.length = 0;\n\n  if (sources.length === 0) {\n    this.state = TileState.ERROR;\n  } else {\n    const z = this.wrappedTileCoord_[0];\n    const size = this.targetTileGrid_.getTileSize(z);\n    const width = typeof size === 'number' ? size : size[0];\n    const height = typeof size === 'number' ? size : size[1];\n    const targetResolution = this.targetTileGrid_.getResolution(z);\n    const sourceResolution = this.sourceTileGrid_.getResolution(this.sourceZ_);\n\n    const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n      this.wrappedTileCoord_);\n    this.canvas_ = renderReprojected(width, height, this.pixelRatio_,\n      sourceResolution, this.sourceTileGrid_.getExtent(),\n      targetResolution, targetExtent, this.triangulation_, sources,\n      this.gutter_, this.renderEdges_);\n\n    this.state = TileState.LOADED;\n  }\n  this.changed();\n};\n\n\n/**\n * @inheritDoc\n */\nReprojTile.prototype.load = function() {\n  if (this.state == TileState.IDLE) {\n    this.state = TileState.LOADING;\n    this.changed();\n\n    let leftToLoad = 0;\n\n    this.sourcesListenerKeys_ = [];\n    this.sourceTiles_.forEach(function(tile, i, arr) {\n      const state = tile.getState();\n      if (state == TileState.IDLE || state == TileState.LOADING) {\n        leftToLoad++;\n\n        const sourceListenKey = listen(tile, EventType.CHANGE,\n          function(e) {\n            const state = tile.getState();\n            if (state == TileState.LOADED ||\n                  state == TileState.ERROR ||\n                  state == TileState.EMPTY) {\n              unlistenByKey(sourceListenKey);\n              leftToLoad--;\n              if (leftToLoad === 0) {\n                this.unlistenSources_();\n                this.reproject_();\n              }\n            }\n          }, this);\n        this.sourcesListenerKeys_.push(sourceListenKey);\n      }\n    }.bind(this));\n\n    this.sourceTiles_.forEach(function(tile, i, arr) {\n      const state = tile.getState();\n      if (state == TileState.IDLE) {\n        tile.load();\n      }\n    });\n\n    if (leftToLoad === 0) {\n      setTimeout(this.reproject_.bind(this), 0);\n    }\n  }\n};\n\n\n/**\n * @private\n */\nReprojTile.prototype.unlistenSources_ = function() {\n  this.sourcesListenerKeys_.forEach(unlistenByKey);\n  this.sourcesListenerKeys_ = null;\n};\nexport default ReprojTile;\n","/**\n * @module ol/tileurlfunction\n */\nimport {assert} from './asserts.js';\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n\n/**\n * @param {string} template Template.\n * @param {module:ol/tilegrid/TileGrid} tileGrid Tile grid.\n * @return {module:ol/Tile~UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  const zRegEx = /\\{z\\}/g;\n  const xRegEx = /\\{x\\}/g;\n  const yRegEx = /\\{y\\}/g;\n  const dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {module:ol/tilecoord~TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {module:ol/proj/Projection} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function(tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        return template.replace(zRegEx, tileCoord[0].toString())\n          .replace(xRegEx, tileCoord[1].toString())\n          .replace(yRegEx, function() {\n            const y = -tileCoord[2] - 1;\n            return y.toString();\n          })\n          .replace(dashYRegEx, function() {\n            const z = tileCoord[0];\n            const range = tileGrid.getFullTileRange(z);\n            assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n            const y = range.getHeight() + tileCoord[2];\n            return y.toString();\n          });\n      }\n    }\n  );\n}\n\n\n/**\n * @param {Array.<string>} templates Templates.\n * @param {module:ol/tilegrid/TileGrid} tileGrid Tile grid.\n * @return {module:ol/Tile~UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n\n/**\n * @param {Array.<module:ol/Tile~UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {module:ol/Tile~UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {module:ol/tilecoord~TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {module:ol/proj/Projection} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function(tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        const h = tileCoordHash(tileCoord);\n        const index = modulo(h, tileUrlFunctions.length);\n        return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n      }\n    }\n  );\n}\n\n\n/**\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {module:ol/proj/Projection} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n\n/**\n * @param {string} url URL.\n * @return {Array.<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport TileRange, {createOrUpdate as createOrUpdateTileRange} from '../TileRange.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {clamp} from '../math.js';\nimport {toSize} from '../size.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/extent~Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {module:ol/coordinate~Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and upwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array.<module:ol/coordinate~Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and upwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array.<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array.<module:ol/size~Size>} [sizes] Sizes.\n * @property {number|module:ol/size~Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array.<module:ol/size~Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n *\n * @constructor\n * @param {module:ol/tilegrid/TileGrid~Options} options Tile grid options.\n * @struct\n * @api\n */\nconst TileGrid = function(options) {\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n  /**\n   * @private\n   * @type {!Array.<number>}\n   */\n  this.resolutions_ = options.resolutions;\n  assert(isSorted(this.resolutions_, function(a, b) {\n    return b - a;\n  }, true), 17); // `resolutions` must be sorted in descending order\n\n\n  // check if we've got a consistent zoom factor and origin\n  let zoomFactor;\n  if (!options.origins) {\n    for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n      if (!zoomFactor) {\n        zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n      } else {\n        if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n          zoomFactor = undefined;\n          break;\n        }\n      }\n    }\n  }\n\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.zoomFactor_ = zoomFactor;\n\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.maxZoom = this.resolutions_.length - 1;\n\n  /**\n   * @private\n   * @type {module:ol/coordinate~Coordinate}\n   */\n  this.origin_ = options.origin !== undefined ? options.origin : null;\n\n  /**\n   * @private\n   * @type {Array.<module:ol/coordinate~Coordinate>}\n   */\n  this.origins_ = null;\n  if (options.origins !== undefined) {\n    this.origins_ = options.origins;\n    assert(this.origins_.length == this.resolutions_.length,\n      20); // Number of `origins` and `resolutions` must be equal\n  }\n\n  const extent = options.extent;\n\n  if (extent !== undefined &&\n      !this.origin_ && !this.origins_) {\n    this.origin_ = getTopLeft(extent);\n  }\n\n  assert(\n    (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n    18); // Either `origin` or `origins` must be configured, never both\n\n  /**\n   * @private\n   * @type {Array.<number|module:ol/size~Size>}\n   */\n  this.tileSizes_ = null;\n  if (options.tileSizes !== undefined) {\n    this.tileSizes_ = options.tileSizes;\n    assert(this.tileSizes_.length == this.resolutions_.length,\n      19); // Number of `tileSizes` and `resolutions` must be equal\n  }\n\n  /**\n   * @private\n   * @type {number|module:ol/size~Size}\n   */\n  this.tileSize_ = options.tileSize !== undefined ?\n    options.tileSize :\n    !this.tileSizes_ ? DEFAULT_TILE_SIZE : null;\n  assert(\n    (!this.tileSize_ && this.tileSizes_) ||\n      (this.tileSize_ && !this.tileSizes_),\n    22); // Either `tileSize` or `tileSizes` must be configured, never both\n\n  /**\n   * @private\n   * @type {module:ol/extent~Extent}\n   */\n  this.extent_ = extent !== undefined ? extent : null;\n\n\n  /**\n   * @private\n   * @type {Array.<module:ol/TileRange>}\n   */\n  this.fullTileRanges_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/size~Size}\n   */\n  this.tmpSize_ = [0, 0];\n\n  if (options.sizes !== undefined) {\n    this.fullTileRanges_ = options.sizes.map(function(size, z) {\n      const tileRange = new TileRange(\n        Math.min(0, size[0]), Math.max(size[0] - 1, -1),\n        Math.min(0, size[1]), Math.max(size[1] - 1, -1));\n      return tileRange;\n    }, this);\n  } else if (extent) {\n    this.calculateTileRanges_(extent);\n  }\n\n};\n\n\n/**\n * @private\n * @type {module:ol/tilecoord~TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n\n/**\n * Call a function with each tile coordinate for a given extent and zoom level.\n *\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} zoom Integer zoom level.\n * @param {function(module:ol/tilecoord~TileCoord)} callback Function called with each tile coordinate.\n * @api\n */\nTileGrid.prototype.forEachTileCoord = function(extent, zoom, callback) {\n  const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n  for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n    for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n      callback([zoom, i, j]);\n    }\n  }\n};\n\n\n/**\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @param {function(this: T, number, module:ol/TileRange): boolean} callback Callback.\n * @param {T=} opt_this The object to use as `this` in `callback`.\n * @param {module:ol/TileRange=} opt_tileRange Temporary module:ol/TileRange object.\n * @param {module:ol/extent~Extent=} opt_extent Temporary module:ol/extent~Extent object.\n * @return {boolean} Callback succeeded.\n * @template T\n */\nTileGrid.prototype.forEachTileCoordParentTileRange = function(tileCoord, callback, opt_this, opt_tileRange, opt_extent) {\n  let tileRange, x, y;\n  let tileCoordExtent = null;\n  let z = tileCoord[0] - 1;\n  if (this.zoomFactor_ === 2) {\n    x = tileCoord[1];\n    y = tileCoord[2];\n  } else {\n    tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n  }\n  while (z >= this.minZoom) {\n    if (this.zoomFactor_ === 2) {\n      x = Math.floor(x / 2);\n      y = Math.floor(y / 2);\n      tileRange = createOrUpdateTileRange(x, x, y, y, opt_tileRange);\n    } else {\n      tileRange = this.getTileRangeForExtentAndZ(tileCoordExtent, z, opt_tileRange);\n    }\n    if (callback.call(opt_this, z, tileRange)) {\n      return true;\n    }\n    --z;\n  }\n  return false;\n};\n\n\n/**\n * Get the extent for this tile grid, if it was configured.\n * @return {module:ol/extent~Extent} Extent.\n */\nTileGrid.prototype.getExtent = function() {\n  return this.extent_;\n};\n\n\n/**\n * Get the maximum zoom level for the grid.\n * @return {number} Max zoom.\n * @api\n */\nTileGrid.prototype.getMaxZoom = function() {\n  return this.maxZoom;\n};\n\n\n/**\n * Get the minimum zoom level for the grid.\n * @return {number} Min zoom.\n * @api\n */\nTileGrid.prototype.getMinZoom = function() {\n  return this.minZoom;\n};\n\n\n/**\n * Get the origin for the grid at the given zoom level.\n * @param {number} z Integer zoom level.\n * @return {module:ol/coordinate~Coordinate} Origin.\n * @api\n */\nTileGrid.prototype.getOrigin = function(z) {\n  if (this.origin_) {\n    return this.origin_;\n  } else {\n    return this.origins_[z];\n  }\n};\n\n\n/**\n * Get the resolution for the given zoom level.\n * @param {number} z Integer zoom level.\n * @return {number} Resolution.\n * @api\n */\nTileGrid.prototype.getResolution = function(z) {\n  return this.resolutions_[z];\n};\n\n\n/**\n * Get the list of resolutions for the tile grid.\n * @return {Array.<number>} Resolutions.\n * @api\n */\nTileGrid.prototype.getResolutions = function() {\n  return this.resolutions_;\n};\n\n\n/**\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @param {module:ol/TileRange=} opt_tileRange Temporary module:ol/TileRange object.\n * @param {module:ol/extent~Extent=} opt_extent Temporary module:ol/extent~Extent object.\n * @return {module:ol/TileRange} Tile range.\n */\nTileGrid.prototype.getTileCoordChildTileRange = function(tileCoord, opt_tileRange, opt_extent) {\n  if (tileCoord[0] < this.maxZoom) {\n    if (this.zoomFactor_ === 2) {\n      const minX = tileCoord[1] * 2;\n      const minY = tileCoord[2] * 2;\n      return createOrUpdateTileRange(minX, minX + 1, minY, minY + 1, opt_tileRange);\n    }\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n    return this.getTileRangeForExtentAndZ(\n      tileCoordExtent, tileCoord[0] + 1, opt_tileRange);\n  }\n  return null;\n};\n\n\n/**\n * Get the extent for a tile range.\n * @param {number} z Integer zoom level.\n * @param {module:ol/TileRange} tileRange Tile range.\n * @param {module:ol/extent~Extent=} opt_extent Temporary module:ol/extent~Extent object.\n * @return {module:ol/extent~Extent} Extent.\n */\nTileGrid.prototype.getTileRangeExtent = function(z, tileRange, opt_extent) {\n  const origin = this.getOrigin(z);\n  const resolution = this.getResolution(z);\n  const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n  const minX = origin[0] + tileRange.minX * tileSize[0] * resolution;\n  const maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;\n  const minY = origin[1] + tileRange.minY * tileSize[1] * resolution;\n  const maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n};\n\n\n/**\n * Get a tile range for the given extent and integer zoom level.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} z Integer zoom level.\n * @param {module:ol/TileRange=} opt_tileRange Temporary tile range object.\n * @return {module:ol/TileRange} Tile range.\n */\nTileGrid.prototype.getTileRangeForExtentAndZ = function(extent, z, opt_tileRange) {\n  const tileCoord = tmpTileCoord;\n  this.getTileCoordForXYAndZ_(extent[0], extent[1], z, false, tileCoord);\n  const minX = tileCoord[1];\n  const minY = tileCoord[2];\n  this.getTileCoordForXYAndZ_(extent[2], extent[3], z, true, tileCoord);\n  return createOrUpdateTileRange(minX, tileCoord[1], minY, tileCoord[2], opt_tileRange);\n};\n\n\n/**\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @return {module:ol/coordinate~Coordinate} Tile center.\n */\nTileGrid.prototype.getTileCoordCenter = function(tileCoord) {\n  const origin = this.getOrigin(tileCoord[0]);\n  const resolution = this.getResolution(tileCoord[0]);\n  const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n  return [\n    origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n    origin[1] + (tileCoord[2] + 0.5) * tileSize[1] * resolution\n  ];\n};\n\n\n/**\n * Get the extent of a tile coordinate.\n *\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @param {module:ol/extent~Extent=} opt_extent Temporary extent object.\n * @return {module:ol/extent~Extent} Extent.\n * @api\n */\nTileGrid.prototype.getTileCoordExtent = function(tileCoord, opt_extent) {\n  const origin = this.getOrigin(tileCoord[0]);\n  const resolution = this.getResolution(tileCoord[0]);\n  const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n  const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n  const minY = origin[1] + tileCoord[2] * tileSize[1] * resolution;\n  const maxX = minX + tileSize[0] * resolution;\n  const maxY = minY + tileSize[1] * resolution;\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n};\n\n\n/**\n * Get the tile coordinate for the given map coordinate and resolution.  This\n * method considers that coordinates that intersect tile boundaries should be\n * assigned the higher tile coordinate.\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {module:ol/tilecoord~TileCoord=} opt_tileCoord Destination module:ol/tilecoord~TileCoord object.\n * @return {module:ol/tilecoord~TileCoord} Tile coordinate.\n * @api\n */\nTileGrid.prototype.getTileCoordForCoordAndResolution = function(coordinate, resolution, opt_tileCoord) {\n  return this.getTileCoordForXYAndResolution_(\n    coordinate[0], coordinate[1], resolution, false, opt_tileCoord);\n};\n\n\n/**\n * Note that this method should not be called for resolutions that correspond\n * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} resolution Resolution (for a non-integer zoom level).\n * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n *     intersections go to the higher tile coordinate, let edge intersections\n *     go to the lower tile coordinate.\n * @param {module:ol/tilecoord~TileCoord=} opt_tileCoord Temporary module:ol/tilecoord~TileCoord object.\n * @return {module:ol/tilecoord~TileCoord} Tile coordinate.\n * @private\n */\nTileGrid.prototype.getTileCoordForXYAndResolution_ = function(\n  x, y, resolution, reverseIntersectionPolicy, opt_tileCoord) {\n  const z = this.getZForResolution(resolution);\n  const scale = resolution / this.getResolution(z);\n  const origin = this.getOrigin(z);\n  const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n  const adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n  const adjustY = reverseIntersectionPolicy ? 0 : 0.5;\n  const xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n  const yFromOrigin = Math.floor((y - origin[1]) / resolution + adjustY);\n  let tileCoordX = scale * xFromOrigin / tileSize[0];\n  let tileCoordY = scale * yFromOrigin / tileSize[1];\n\n  if (reverseIntersectionPolicy) {\n    tileCoordX = Math.ceil(tileCoordX) - 1;\n    tileCoordY = Math.ceil(tileCoordY) - 1;\n  } else {\n    tileCoordX = Math.floor(tileCoordX);\n    tileCoordY = Math.floor(tileCoordY);\n  }\n\n  return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n};\n\n\n/**\n * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n * they should have separate implementations.  This method is for integer zoom\n * levels.  The other method should only be called for resolutions corresponding\n * to non-integer zoom levels.\n * @param {number} x Map x coordinate.\n * @param {number} y Map y coordinate.\n * @param {number} z Integer zoom level.\n * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n *     intersections go to the higher tile coordinate, let edge intersections\n *     go to the lower tile coordinate.\n * @param {module:ol/tilecoord~TileCoord=} opt_tileCoord Temporary module:ol/tilecoord~TileCoord object.\n * @return {module:ol/tilecoord~TileCoord} Tile coordinate.\n * @private\n */\nTileGrid.prototype.getTileCoordForXYAndZ_ = function(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n  const origin = this.getOrigin(z);\n  const resolution = this.getResolution(z);\n  const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n  const adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n  const adjustY = reverseIntersectionPolicy ? 0 : 0.5;\n  const xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n  const yFromOrigin = Math.floor((y - origin[1]) / resolution + adjustY);\n  let tileCoordX = xFromOrigin / tileSize[0];\n  let tileCoordY = yFromOrigin / tileSize[1];\n\n  if (reverseIntersectionPolicy) {\n    tileCoordX = Math.ceil(tileCoordX) - 1;\n    tileCoordY = Math.ceil(tileCoordY) - 1;\n  } else {\n    tileCoordX = Math.floor(tileCoordX);\n    tileCoordY = Math.floor(tileCoordY);\n  }\n\n  return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n};\n\n\n/**\n * Get a tile coordinate given a map coordinate and zoom level.\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {number} z Zoom level.\n * @param {module:ol/tilecoord~TileCoord=} opt_tileCoord Destination module:ol/tilecoord~TileCoord object.\n * @return {module:ol/tilecoord~TileCoord} Tile coordinate.\n * @api\n */\nTileGrid.prototype.getTileCoordForCoordAndZ = function(coordinate, z, opt_tileCoord) {\n  return this.getTileCoordForXYAndZ_(\n    coordinate[0], coordinate[1], z, false, opt_tileCoord);\n};\n\n\n/**\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @return {number} Tile resolution.\n */\nTileGrid.prototype.getTileCoordResolution = function(tileCoord) {\n  return this.resolutions_[tileCoord[0]];\n};\n\n\n/**\n * Get the tile size for a zoom level. The type of the return value matches the\n * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n * get an `module:ol/size~Size`, run the result through `module:ol/size~Size.toSize()`.\n * @param {number} z Z.\n * @return {number|module:ol/size~Size} Tile size.\n * @api\n */\nTileGrid.prototype.getTileSize = function(z) {\n  if (this.tileSize_) {\n    return this.tileSize_;\n  } else {\n    return this.tileSizes_[z];\n  }\n};\n\n\n/**\n * @param {number} z Zoom level.\n * @return {module:ol/TileRange} Extent tile range for the specified zoom level.\n */\nTileGrid.prototype.getFullTileRange = function(z) {\n  if (!this.fullTileRanges_) {\n    return null;\n  } else {\n    return this.fullTileRanges_[z];\n  }\n};\n\n\n/**\n * @param {number} resolution Resolution.\n * @param {number=} opt_direction If 0, the nearest resolution will be used.\n *     If 1, the nearest lower resolution will be used. If -1, the nearest\n *     higher resolution will be used. Default is 0.\n * @return {number} Z.\n * @api\n */\nTileGrid.prototype.getZForResolution = function(resolution, opt_direction) {\n  const z = linearFindNearest(this.resolutions_, resolution, opt_direction || 0);\n  return clamp(z, this.minZoom, this.maxZoom);\n};\n\n\n/**\n * @param {!module:ol/extent~Extent} extent Extent for this tile grid.\n * @private\n */\nTileGrid.prototype.calculateTileRanges_ = function(extent) {\n  const length = this.resolutions_.length;\n  const fullTileRanges = new Array(length);\n  for (let z = this.minZoom; z < length; ++z) {\n    fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n  }\n  this.fullTileRanges_ = fullTileRanges;\n};\nexport default TileGrid;\n","/**\n * @module ol/tilegrid\n */\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {toSize} from './size.js';\nimport {containsCoordinate, createOrUpdate, getCorner, getHeight, getWidth} from './extent.js';\nimport Corner from './extent/Corner.js';\nimport {assign} from './obj.js';\nimport {get as getProjection, METERS_PER_UNIT} from './proj.js';\nimport Units from './proj/Units.js';\nimport TileGrid from './tilegrid/TileGrid.js';\n\n\n/**\n * @param {module:ol/proj/Projection} projection Projection.\n * @return {!module:ol/tilegrid/TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n\n/**\n * @param {module:ol/tilegrid/TileGrid} tileGrid Tile grid.\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @param {module:ol/proj/Projection} projection Projection.\n * @return {module:ol/tilecoord~TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil((projectionExtent[0] - center[0]) / worldWidth);\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  } else {\n    return tileCoord;\n  }\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|module:ol/size~Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {module:ol/extent/Corner=} opt_corner Extent corner (default is `'top-left'`).\n * @return {!module:ol/tilegrid/TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner) {\n  const corner = opt_corner !== undefined ? opt_corner : Corner.TOP_LEFT;\n\n  const resolutions = resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: opt_tileSize\n  });\n}\n\n\n/**\n * @typedef {Object} XYZOptions\n * @property {module:ol/extent~Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. The zero level of the grid is defined by the resolution at which one tile fits in the\n * provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|module:ol/size~Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {module:ol/tilegrid~XYZOptions=} opt_options Tile grid options.\n * @return {!module:ol/tilegrid/TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(opt_options) {\n  const options = /** @type {module:ol/tilegrid/TileGrid~Options} */ ({});\n  assign(options, opt_options !== undefined ?\n    opt_options : /** @type {module:ol/tilegrid~XYZOptions} */ ({}));\n  if (options.extent === undefined) {\n    options.extent = getProjection('EPSG:3857').getExtent();\n  }\n  options.resolutions = resolutionsFromExtent(\n    options.extent, options.maxZoom, options.tileSize);\n  delete options.maxZoom;\n\n  return new TileGrid(options);\n}\n\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|module:ol/size~Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @return {!Array.<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize) {\n  const maxZoom = opt_maxZoom !== undefined ?\n    opt_maxZoom : DEFAULT_MAX_ZOOM;\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  const tileSize = toSize(opt_tileSize !== undefined ?\n    opt_tileSize : DEFAULT_TILE_SIZE);\n  const maxResolution = Math.max(\n    width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n\n/**\n * @param {module:ol/proj~ProjectionLike} projection Projection.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|module:ol/size~Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {module:ol/extent/Corner=} opt_corner Extent corner (default is `'top-left'`).\n * @return {!module:ol/tilegrid/TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, opt_maxZoom, opt_tileSize, opt_corner) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner);\n}\n\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {module:ol/proj~ProjectionLike} projection Projection.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half = 180 * METERS_PER_UNIT[Units.DEGREES] / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/source/Tile\n */\nimport {inherits} from '../index.js';\nimport {UNDEFINED} from '../functions.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport Event from '../events/Event.js';\nimport {equivalent} from '../proj.js';\nimport {toSize, scale as scaleSize} from '../size.js';\nimport Source from '../source/Source.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {wrapX, getForProjection as getTileGridForProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions]\n * @property {number} [cacheSize]\n * @property {module:ol/extent~Extent} [extent]\n * @property {boolean} [opaque]\n * @property {number} [tilePixelRatio]\n * @property {module:ol/proj~ProjectionLike} [projection]\n * @property {module:ol/source/State} [state]\n * @property {module:ol/tilegrid/TileGrid} [tileGrid]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n *\n * @constructor\n * @abstract\n * @extends {module:ol/source/Source}\n * @param {module:ol/source/Tile~Options=} options SourceTile source options.\n * @api\n */\nconst TileSource = function(options) {\n\n  Source.call(this, {\n    attributions: options.attributions,\n    extent: options.extent,\n    projection: options.projection,\n    state: options.state,\n    wrapX: options.wrapX\n  });\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.tilePixelRatio_ = options.tilePixelRatio !== undefined ?\n    options.tilePixelRatio : 1;\n\n  /**\n   * @protected\n   * @type {module:ol/tilegrid/TileGrid}\n   */\n  this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n  /**\n   * @protected\n   * @type {module:ol/TileCache}\n   */\n  this.tileCache = new TileCache(options.cacheSize);\n\n  /**\n   * @protected\n   * @type {module:ol/size~Size}\n   */\n  this.tmpSize = [0, 0];\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.key_ = '';\n\n  /**\n   * @protected\n   * @type {module:ol/Tile~Options}\n   */\n  this.tileOptions = {transition: options.transition};\n\n};\n\ninherits(TileSource, Source);\n\n\n/**\n * @return {boolean} Can expire cache.\n */\nTileSource.prototype.canExpireCache = function() {\n  return this.tileCache.canExpireCache();\n};\n\n\n/**\n * @param {module:ol/proj/Projection} projection Projection.\n * @param {!Object.<string, module:ol/TileRange>} usedTiles Used tiles.\n */\nTileSource.prototype.expireCache = function(projection, usedTiles) {\n  const tileCache = this.getTileCacheForProjection(projection);\n  if (tileCache) {\n    tileCache.expireCache(usedTiles);\n  }\n};\n\n\n/**\n * @param {module:ol/proj/Projection} projection Projection.\n * @param {number} z Zoom level.\n * @param {module:ol/TileRange} tileRange Tile range.\n * @param {function(module:ol/Tile):(boolean|undefined)} callback Called with each\n *     loaded tile.  If the callback returns `false`, the tile will not be\n *     considered loaded.\n * @return {boolean} The tile range is fully covered with loaded tiles.\n */\nTileSource.prototype.forEachLoadedTile = function(projection, z, tileRange, callback) {\n  const tileCache = this.getTileCacheForProjection(projection);\n  if (!tileCache) {\n    return false;\n  }\n\n  let covered = true;\n  let tile, tileCoordKey, loaded;\n  for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n    for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n      tileCoordKey = getKeyZXY(z, x, y);\n      loaded = false;\n      if (tileCache.containsKey(tileCoordKey)) {\n        tile = /** @type {!module:ol/Tile} */ (tileCache.get(tileCoordKey));\n        loaded = tile.getState() === TileState.LOADED;\n        if (loaded) {\n          loaded = (callback(tile) !== false);\n        }\n      }\n      if (!loaded) {\n        covered = false;\n      }\n    }\n  }\n  return covered;\n};\n\n\n/**\n * @param {module:ol/proj/Projection} projection Projection.\n * @return {number} Gutter.\n */\nTileSource.prototype.getGutter = function(projection) {\n  return 0;\n};\n\n\n/**\n * Return the key to be used for all tiles in the source.\n * @return {string} The key for all tiles.\n * @protected\n */\nTileSource.prototype.getKey = function() {\n  return this.key_;\n};\n\n\n/**\n * Set the value to be used as the key for all tiles in the source.\n * @param {string} key The key for tiles.\n * @protected\n */\nTileSource.prototype.setKey = function(key) {\n  if (this.key_ !== key) {\n    this.key_ = key;\n    this.changed();\n  }\n};\n\n\n/**\n * @param {module:ol/proj/Projection} projection Projection.\n * @return {boolean} Opaque.\n */\nTileSource.prototype.getOpaque = function(projection) {\n  return this.opaque_;\n};\n\n\n/**\n * @inheritDoc\n */\nTileSource.prototype.getResolutions = function() {\n  return this.tileGrid.getResolutions();\n};\n\n\n/**\n * @abstract\n * @param {number} z Tile coordinate z.\n * @param {number} x Tile coordinate x.\n * @param {number} y Tile coordinate y.\n * @param {number} pixelRatio Pixel ratio.\n * @param {module:ol/proj/Projection} projection Projection.\n * @return {!module:ol/Tile} Tile.\n */\nTileSource.prototype.getTile = function(z, x, y, pixelRatio, projection) {};\n\n\n/**\n * Return the tile grid of the tile source.\n * @return {module:ol/tilegrid/TileGrid} Tile grid.\n * @api\n */\nTileSource.prototype.getTileGrid = function() {\n  return this.tileGrid;\n};\n\n\n/**\n * @param {module:ol/proj/Projection} projection Projection.\n * @return {!module:ol/tilegrid/TileGrid} Tile grid.\n */\nTileSource.prototype.getTileGridForProjection = function(projection) {\n  if (!this.tileGrid) {\n    return getTileGridForProjection(projection);\n  } else {\n    return this.tileGrid;\n  }\n};\n\n\n/**\n * @param {module:ol/proj/Projection} projection Projection.\n * @return {module:ol/TileCache} Tile cache.\n * @protected\n */\nTileSource.prototype.getTileCacheForProjection = function(projection) {\n  const thisProj = this.getProjection();\n  if (thisProj && !equivalent(thisProj, projection)) {\n    return null;\n  } else {\n    return this.tileCache;\n  }\n};\n\n\n/**\n * Get the tile pixel ratio for this source. Subclasses may override this\n * method, which is meant to return a supported pixel ratio that matches the\n * provided `pixelRatio` as close as possible.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Tile pixel ratio.\n */\nTileSource.prototype.getTilePixelRatio = function(pixelRatio) {\n  return this.tilePixelRatio_;\n};\n\n\n/**\n * @param {number} z Z.\n * @param {number} pixelRatio Pixel ratio.\n * @param {module:ol/proj/Projection} projection Projection.\n * @return {module:ol/size~Size} Tile size.\n */\nTileSource.prototype.getTilePixelSize = function(z, pixelRatio, projection) {\n  const tileGrid = this.getTileGridForProjection(projection);\n  const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n  const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n  if (tilePixelRatio == 1) {\n    return tileSize;\n  } else {\n    return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n  }\n};\n\n\n/**\n * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n * is outside the resolution and extent range of the tile grid, `null` will be\n * returned.\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @param {module:ol/proj/Projection=} opt_projection Projection.\n * @return {module:ol/tilecoord~TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n *     null if no tile URL should be created for the passed `tileCoord`.\n */\nTileSource.prototype.getTileCoordForTileUrlFunction = function(tileCoord, opt_projection) {\n  const projection = opt_projection !== undefined ?\n    opt_projection : this.getProjection();\n  const tileGrid = this.getTileGridForProjection(projection);\n  if (this.getWrapX() && projection.isGlobal()) {\n    tileCoord = wrapX(tileGrid, tileCoord, projection);\n  }\n  return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n};\n\n\n/**\n * @inheritDoc\n */\nTileSource.prototype.refresh = function() {\n  this.tileCache.clear();\n  this.changed();\n};\n\n\n/**\n * Marks a tile coord as being used, without triggering a load.\n * @param {number} z Tile coordinate z.\n * @param {number} x Tile coordinate x.\n * @param {number} y Tile coordinate y.\n * @param {module:ol/proj/Projection} projection Projection.\n */\nTileSource.prototype.useTile = UNDEFINED;\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n *\n * @constructor\n * @extends {module:ol/events/Event}\n * @param {string} type Type.\n * @param {module:ol/Tile} tile The tile.\n */\nexport const TileSourceEvent = function(type, tile) {\n\n  Event.call(this, type);\n\n  /**\n   * The tile related to the event.\n   * @type {module:ol/Tile}\n   * @api\n   */\n  this.tile = tile;\n\n};\ninherits(TileSourceEvent, Event);\n\nexport default TileSource;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile~TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile~TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error.\n   * @event module:ol/source/Tile~TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror'\n\n};\n","/**\n * @module ol/source/UrlTile\n */\nimport {getUid, inherits} from '../index.js';\nimport TileState from '../TileState.js';\nimport {expandUrl, createFromTemplates, nullTileUrlFunction} from '../tileurlfunction.js';\nimport TileSource, {TileSourceEvent} from '../source/Tile.js';\nimport TileEventType from '../source/TileEventType.js';\nimport {getKeyZXY} from '../tilecoord.js';\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions]\n * @property {number} [cacheSize]\n * @property {module:ol/extent~Extent} [extent]\n * @property {boolean} [opaque]\n * @property {module:ol/proj~ProjectionLike} [projection]\n * @property {module:ol/source/State} [state]\n * @property {module:ol/tilegrid/TileGrid} [tileGrid]\n * @property {module:ol/Tile~LoadFunction} tileLoadFunction\n * @property {number} [tilePixelRatio]\n * @property {module:ol/Tile~UrlFunction} [tileUrlFunction]\n * @property {string} [url]\n * @property {Array.<string>} [urls]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n */\n\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @constructor\n * @abstract\n * @fires module:ol/source/TileEvent\n * @extends {module:ol/source/Tile}\n * @param {module:ol/source/UrlTile~Options=} options Image tile options.\n */\nconst UrlTile = function(options) {\n\n  TileSource.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    extent: options.extent,\n    opaque: options.opaque,\n    projection: options.projection,\n    state: options.state,\n    tileGrid: options.tileGrid,\n    tilePixelRatio: options.tilePixelRatio,\n    wrapX: options.wrapX,\n    transition: options.transition\n  });\n\n  /**\n   * @protected\n   * @type {module:ol/Tile~LoadFunction}\n   */\n  this.tileLoadFunction = options.tileLoadFunction;\n\n  /**\n   * @protected\n   * @type {module:ol/Tile~UrlFunction}\n   */\n  this.tileUrlFunction = this.fixedTileUrlFunction ?\n    this.fixedTileUrlFunction.bind(this) : nullTileUrlFunction;\n\n  /**\n   * @protected\n   * @type {!Array.<string>|null}\n   */\n  this.urls = null;\n\n  if (options.urls) {\n    this.setUrls(options.urls);\n  } else if (options.url) {\n    this.setUrl(options.url);\n  }\n  if (options.tileUrlFunction) {\n    this.setTileUrlFunction(options.tileUrlFunction);\n  }\n\n  /**\n   * @private\n   * @type {!Object.<number, boolean>}\n   */\n  this.tileLoadingKeys_ = {};\n\n};\n\ninherits(UrlTile, TileSource);\n\n\n/**\n * @type {module:ol/Tile~UrlFunction|undefined}\n * @protected\n */\nUrlTile.prototype.fixedTileUrlFunction;\n\n/**\n * Return the tile load function of the source.\n * @return {module:ol/Tile~LoadFunction} TileLoadFunction\n * @api\n */\nUrlTile.prototype.getTileLoadFunction = function() {\n  return this.tileLoadFunction;\n};\n\n\n/**\n * Return the tile URL function of the source.\n * @return {module:ol/Tile~UrlFunction} TileUrlFunction\n * @api\n */\nUrlTile.prototype.getTileUrlFunction = function() {\n  return this.tileUrlFunction;\n};\n\n\n/**\n * Return the URLs used for this source.\n * When a tileUrlFunction is used instead of url or urls,\n * null will be returned.\n * @return {!Array.<string>|null} URLs.\n * @api\n */\nUrlTile.prototype.getUrls = function() {\n  return this.urls;\n};\n\n\n/**\n * Handle tile change events.\n * @param {module:ol/events/Event} event Event.\n * @protected\n */\nUrlTile.prototype.handleTileChange = function(event) {\n  const tile = /** @type {module:ol/Tile} */ (event.target);\n  const uid = getUid(tile);\n  const tileState = tile.getState();\n  let type;\n  if (tileState == TileState.LOADING) {\n    this.tileLoadingKeys_[uid] = true;\n    type = TileEventType.TILELOADSTART;\n  } else if (uid in this.tileLoadingKeys_) {\n    delete this.tileLoadingKeys_[uid];\n    type = tileState == TileState.ERROR ? TileEventType.TILELOADERROR :\n      (tileState == TileState.LOADED || tileState == TileState.ABORT) ?\n        TileEventType.TILELOADEND : undefined;\n  }\n  if (type != undefined) {\n    this.dispatchEvent(new TileSourceEvent(type, tile));\n  }\n};\n\n\n/**\n * Set the tile load function of the source.\n * @param {module:ol/Tile~LoadFunction} tileLoadFunction Tile load function.\n * @api\n */\nUrlTile.prototype.setTileLoadFunction = function(tileLoadFunction) {\n  this.tileCache.clear();\n  this.tileLoadFunction = tileLoadFunction;\n  this.changed();\n};\n\n\n/**\n * Set the tile URL function of the source.\n * @param {module:ol/Tile~UrlFunction} tileUrlFunction Tile URL function.\n * @param {string=} opt_key Optional new tile key for the source.\n * @api\n */\nUrlTile.prototype.setTileUrlFunction = function(tileUrlFunction, opt_key) {\n  this.tileUrlFunction = tileUrlFunction;\n  this.tileCache.pruneExceptNewestZ();\n  if (typeof opt_key !== 'undefined') {\n    this.setKey(opt_key);\n  } else {\n    this.changed();\n  }\n};\n\n\n/**\n * Set the URL to use for requests.\n * @param {string} url URL.\n * @api\n */\nUrlTile.prototype.setUrl = function(url) {\n  const urls = this.urls = expandUrl(url);\n  this.setTileUrlFunction(this.fixedTileUrlFunction ?\n    this.fixedTileUrlFunction.bind(this) :\n    createFromTemplates(urls, this.tileGrid), url);\n};\n\n\n/**\n * Set the URLs to use for requests.\n * @param {Array.<string>} urls URLs.\n * @api\n */\nUrlTile.prototype.setUrls = function(urls) {\n  this.urls = urls;\n  const key = urls.join('\\n');\n  this.setTileUrlFunction(this.fixedTileUrlFunction ?\n    this.fixedTileUrlFunction.bind(this) :\n    createFromTemplates(urls, this.tileGrid), key);\n};\n\n\n/**\n * @inheritDoc\n */\nUrlTile.prototype.useTile = function(z, x, y) {\n  const tileCoordKey = getKeyZXY(z, x, y);\n  if (this.tileCache.containsKey(tileCoordKey)) {\n    this.tileCache.get(tileCoordKey);\n  }\n};\nexport default UrlTile;\n","/**\n * @module ol/source/TileImage\n */\nimport {ENABLE_RASTER_REPROJECTION} from '../reproj/common.js';\nimport {getUid, inherits} from '../index.js';\nimport ImageTile from '../ImageTile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport UrlTile from '../source/UrlTile.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image} for more detail.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {module:ol/proj~ProjectionLike} projection Projection.\n * @property {boolean} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {module:ol/source/State} [state] Source state.\n * @property {module:ol/ImageTile~TileClass} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {module:ol/tilegrid/TileGrid} [tileGrid] Tile grid.\n * @property {module:ol/Tile~LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {module:ol/Tile~UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array.<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @constructor\n * @fires module:ol/source/Tile~TileSourceEvent\n * @extends {module:ol/source/UrlTile}\n * @param {module:ol/source/TileImage~Options=} options Image tile options.\n * @api\n */\nconst TileImage = function(options) {\n\n  UrlTile.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    extent: options.extent,\n    opaque: options.opaque,\n    projection: options.projection,\n    state: options.state,\n    tileGrid: options.tileGrid,\n    tileLoadFunction: options.tileLoadFunction ?\n      options.tileLoadFunction : defaultTileLoadFunction,\n    tilePixelRatio: options.tilePixelRatio,\n    tileUrlFunction: options.tileUrlFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX,\n    transition: options.transition\n  });\n\n  /**\n   * @protected\n   * @type {?string}\n   */\n  this.crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n  /**\n   * @protected\n   * @type {function(new: module:ol/ImageTile, module:ol/tilecoord~TileCoord, module:ol/TileState, string,\n   *        ?string, module:ol/Tile~LoadFunction, module:ol/Tile~Options=)}\n   */\n  this.tileClass = options.tileClass !== undefined ?\n    options.tileClass : ImageTile;\n\n  /**\n   * @protected\n   * @type {!Object.<string, module:ol/TileCache>}\n   */\n  this.tileCacheForProjection = {};\n\n  /**\n   * @protected\n   * @type {!Object.<string, module:ol/tilegrid/TileGrid>}\n   */\n  this.tileGridForProjection = {};\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.renderReprojectionEdges_ = false;\n};\n\ninherits(TileImage, UrlTile);\n\n\n/**\n * @inheritDoc\n */\nTileImage.prototype.canExpireCache = function() {\n  if (!ENABLE_RASTER_REPROJECTION) {\n    return UrlTile.prototype.canExpireCache.call(this);\n  }\n  if (this.tileCache.canExpireCache()) {\n    return true;\n  } else {\n    for (const key in this.tileCacheForProjection) {\n      if (this.tileCacheForProjection[key].canExpireCache()) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\n\n\n/**\n * @inheritDoc\n */\nTileImage.prototype.expireCache = function(projection, usedTiles) {\n  if (!ENABLE_RASTER_REPROJECTION) {\n    UrlTile.prototype.expireCache.call(this, projection, usedTiles);\n    return;\n  }\n  const usedTileCache = this.getTileCacheForProjection(projection);\n\n  this.tileCache.expireCache(this.tileCache == usedTileCache ? usedTiles : {});\n  for (const id in this.tileCacheForProjection) {\n    const tileCache = this.tileCacheForProjection[id];\n    tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nTileImage.prototype.getGutter = function(projection) {\n  if (ENABLE_RASTER_REPROJECTION &&\n      this.getProjection() && projection && !equivalent(this.getProjection(), projection)) {\n    return 0;\n  } else {\n    return this.getGutterInternal();\n  }\n};\n\n\n/**\n * @protected\n * @return {number} Gutter.\n */\nTileImage.prototype.getGutterInternal = function() {\n  return 0;\n};\n\n\n/**\n * @inheritDoc\n */\nTileImage.prototype.getOpaque = function(projection) {\n  if (ENABLE_RASTER_REPROJECTION &&\n      this.getProjection() && projection && !equivalent(this.getProjection(), projection)) {\n    return false;\n  } else {\n    return UrlTile.prototype.getOpaque.call(this, projection);\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nTileImage.prototype.getTileGridForProjection = function(projection) {\n  if (!ENABLE_RASTER_REPROJECTION) {\n    return UrlTile.prototype.getTileGridForProjection.call(this, projection);\n  }\n  const thisProj = this.getProjection();\n  if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n    return this.tileGrid;\n  } else {\n    const projKey = getUid(projection).toString();\n    if (!(projKey in this.tileGridForProjection)) {\n      this.tileGridForProjection[projKey] = getTileGridForProjection(projection);\n    }\n    return (\n      /** @type {!module:ol/tilegrid/TileGrid} */ (this.tileGridForProjection[projKey])\n    );\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nTileImage.prototype.getTileCacheForProjection = function(projection) {\n  if (!ENABLE_RASTER_REPROJECTION) {\n    return UrlTile.prototype.getTileCacheForProjection.call(this, projection);\n  }\n  const thisProj = this.getProjection(); if (!thisProj || equivalent(thisProj, projection)) {\n    return this.tileCache;\n  } else {\n    const projKey = getUid(projection).toString();\n    if (!(projKey in this.tileCacheForProjection)) {\n      this.tileCacheForProjection[projKey] = new TileCache(this.tileCache.highWaterMark);\n    }\n    return this.tileCacheForProjection[projKey];\n  }\n};\n\n\n/**\n * @param {number} z Tile coordinate z.\n * @param {number} x Tile coordinate x.\n * @param {number} y Tile coordinate y.\n * @param {number} pixelRatio Pixel ratio.\n * @param {module:ol/proj/Projection} projection Projection.\n * @param {string} key The key set on the tile.\n * @return {!module:ol/Tile} Tile.\n * @private\n */\nTileImage.prototype.createTile_ = function(z, x, y, pixelRatio, projection, key) {\n  const tileCoord = [z, x, y];\n  const urlTileCoord = this.getTileCoordForTileUrlFunction(\n    tileCoord, projection);\n  const tileUrl = urlTileCoord ?\n    this.tileUrlFunction(urlTileCoord, pixelRatio, projection) : undefined;\n  const tile = new this.tileClass(\n    tileCoord,\n    tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n    tileUrl !== undefined ? tileUrl : '',\n    this.crossOrigin,\n    this.tileLoadFunction,\n    this.tileOptions);\n  tile.key = key;\n  listen(tile, EventType.CHANGE,\n    this.handleTileChange, this);\n  return tile;\n};\n\n\n/**\n * @inheritDoc\n */\nTileImage.prototype.getTile = function(z, x, y, pixelRatio, projection) {\n  const sourceProjection = /** @type {!module:ol/proj/Projection} */ (this.getProjection());\n  if (!ENABLE_RASTER_REPROJECTION ||\n      !sourceProjection || !projection || equivalent(sourceProjection, projection)) {\n    return this.getTileInternal(z, x, y, pixelRatio, sourceProjection || projection);\n  } else {\n    const cache = this.getTileCacheForProjection(projection);\n    const tileCoord = [z, x, y];\n    let tile;\n    const tileCoordKey = getKey(tileCoord);\n    if (cache.containsKey(tileCoordKey)) {\n      tile = /** @type {!module:ol/Tile} */ (cache.get(tileCoordKey));\n    }\n    const key = this.getKey();\n    if (tile && tile.key == key) {\n      return tile;\n    } else {\n      const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n      const targetTileGrid = this.getTileGridForProjection(projection);\n      const wrappedTileCoord =\n          this.getTileCoordForTileUrlFunction(tileCoord, projection);\n      const newTile = new ReprojTile(\n        sourceProjection, sourceTileGrid,\n        projection, targetTileGrid,\n        tileCoord, wrappedTileCoord, this.getTilePixelRatio(pixelRatio),\n        this.getGutterInternal(),\n        function(z, x, y, pixelRatio) {\n          return this.getTileInternal(z, x, y, pixelRatio, sourceProjection);\n        }.bind(this), this.reprojectionErrorThreshold_,\n        this.renderReprojectionEdges_);\n      newTile.key = key;\n\n      if (tile) {\n        newTile.interimTile = tile;\n        newTile.refreshInterimChain();\n        cache.replace(tileCoordKey, newTile);\n      } else {\n        cache.set(tileCoordKey, newTile);\n      }\n      return newTile;\n    }\n  }\n};\n\n\n/**\n * @param {number} z Tile coordinate z.\n * @param {number} x Tile coordinate x.\n * @param {number} y Tile coordinate y.\n * @param {number} pixelRatio Pixel ratio.\n * @param {!module:ol/proj/Projection} projection Projection.\n * @return {!module:ol/Tile} Tile.\n * @protected\n */\nTileImage.prototype.getTileInternal = function(z, x, y, pixelRatio, projection) {\n  let tile = null;\n  const tileCoordKey = getKeyZXY(z, x, y);\n  const key = this.getKey();\n  if (!this.tileCache.containsKey(tileCoordKey)) {\n    tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n    this.tileCache.set(tileCoordKey, tile);\n  } else {\n    tile = this.tileCache.get(tileCoordKey);\n    if (tile.key != key) {\n      // The source's params changed. If the tile has an interim tile and if we\n      // can use it then we use it. Otherwise we create a new tile.  In both\n      // cases we attempt to assign an interim tile to the new tile.\n      const interimTile = tile;\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n      //make the new tile the head of the list,\n      if (interimTile.getState() == TileState.IDLE) {\n        //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n        tile.interimTile = interimTile.interimTile;\n      } else {\n        tile.interimTile = interimTile;\n      }\n      tile.refreshInterimChain();\n      this.tileCache.replace(tileCoordKey, tile);\n    }\n  }\n  return tile;\n};\n\n\n/**\n * Sets whether to render reprojection edges or not (usually for debugging).\n * @param {boolean} render Render the edges.\n * @api\n */\nTileImage.prototype.setRenderReprojectionEdges = function(render) {\n  if (!ENABLE_RASTER_REPROJECTION ||\n      this.renderReprojectionEdges_ == render) {\n    return;\n  }\n  this.renderReprojectionEdges_ = render;\n  for (const id in this.tileCacheForProjection) {\n    this.tileCacheForProjection[id].clear();\n  }\n  this.changed();\n};\n\n\n/**\n * Sets the tile grid to use when reprojecting the tiles to the given\n * projection instead of the default tile grid for the projection.\n *\n * This can be useful when the default tile grid cannot be created\n * (e.g. projection has no extent defined) or\n * for optimization reasons (custom tile size, resolutions, ...).\n *\n * @param {module:ol/proj~ProjectionLike} projection Projection.\n * @param {module:ol/tilegrid/TileGrid} tilegrid Tile grid to use for the projection.\n * @api\n */\nTileImage.prototype.setTileGridForProjection = function(projection, tilegrid) {\n  if (ENABLE_RASTER_REPROJECTION) {\n    const proj = getProjection(projection);\n    if (proj) {\n      const projKey = getUid(proj).toString();\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] = tilegrid;\n      }\n    }\n  }\n};\n\n\n/**\n * @param {module:ol/ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  imageTile.getImage().src = src;\n}\n\nexport default TileImage;\n","/**\n * @module ol/source/XYZ\n */\nimport {inherits} from '../index.js';\nimport TileImage from '../source/TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image} for more detail.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {module:ol/proj~ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {boolean} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=18] Optional max zoom level.\n * @property {number} [minZoom=0] Optional min zoom level.\n * @property {module:ol/tilegrid/TileGrid} [tileGrid] Tile grid.\n * @property {module:ol/Tile~LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|module:ol/size~Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * @property {module:ol/Tile~UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if url or urls are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array.<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case,\n * {@link module:ol/source/TileImage} can be used with a `tileUrlFunction`\n * such as:\n *\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *        coordinate[1] + '/' + coordinate[2] + '.png';\n *    }\n *\n *\n * @constructor\n * @extends {module:ol/source/TileImage}\n * @param {module:ol/source/XYZ~Options=} opt_options XYZ options.\n * @api\n */\nconst XYZ = function(opt_options) {\n  const options = opt_options || {};\n  const projection = options.projection !== undefined ?\n    options.projection : 'EPSG:3857';\n\n  const tileGrid = options.tileGrid !== undefined ? options.tileGrid :\n    createXYZ({\n      extent: extentFromProjection(projection),\n      maxZoom: options.maxZoom,\n      minZoom: options.minZoom,\n      tileSize: options.tileSize\n    });\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: options.opaque,\n    projection: projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileGrid: tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    tilePixelRatio: options.tilePixelRatio,\n    tileUrlFunction: options.tileUrlFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n};\n\ninherits(XYZ, TileImage);\nexport default XYZ;\n","/**\n * @module ol/layer/Image\n */\nimport {inherits} from '../index.js';\nimport LayerType from '../LayerType.js';\nimport Layer from '../layer/Layer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {module:ol/extent~Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex=0] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {module:ol/PluggableMap} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {module:ol/source/Image} [source] Source for this layer.\n */\n\n\n/**\n * @classdesc\n * Server-rendered images that are available for arbitrary extents and\n * resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @constructor\n * @extends {module:ol/layer/Layer}\n * @fires module:ol/render/Event~RenderEvent\n * @param {module:ol/layer/Image~Options=} opt_options Layer options.\n * @api\n */\nconst ImageLayer = function(opt_options) {\n  const options = opt_options ? opt_options : {};\n  Layer.call(this,  /** @type {module:ol/layer/Layer~Options} */ (options));\n\n  /**\n   * The layer type.\n   * @protected\n   * @type {module:ol/LayerType}\n   */\n  this.type = LayerType.IMAGE;\n\n};\n\ninherits(ImageLayer, Layer);\n\n\n/**\n * Return the associated {@link module:ol/source/Image source} of the image layer.\n * @function\n * @return {module:ol/source/Image} Source.\n * @api\n */\nImageLayer.prototype.getSource;\nexport default ImageLayer;\n","/**\n * @module ol/reproj/Image\n */\nimport {ERROR_THRESHOLD} from './common.js';\nimport {inherits} from '../index.js';\nimport ImageBase from '../ImageBase.js';\nimport ImageState from '../ImageState.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getCenter, getIntersection, getHeight, getWidth} from '../extent.js';\nimport {calculateSourceResolution, render as renderReprojected} from '../reproj.js';\nimport Triangulation from '../reproj/Triangulation.js';\n\n\n/**\n * @typedef {function(module:ol/extent~Extent, number, number) : module:ol/ImageBase} FunctionType\n */\n\n\n/**\n * @classdesc\n * Class encapsulating single reprojected image.\n * See {@link module:ol/source/Image~ImageSource}.\n *\n * @constructor\n * @extends {module:ol/ImageBase}\n * @param {module:ol/proj/Projection} sourceProj Source projection (of the data).\n * @param {module:ol/proj/Projection} targetProj Target projection.\n * @param {module:ol/extent~Extent} targetExtent Target extent.\n * @param {number} targetResolution Target resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {module:ol/reproj/Image~FunctionType} getImageFunction\n *     Function returning source images (extent, resolution, pixelRatio).\n */\nconst ReprojImage = function(sourceProj, targetProj,\n  targetExtent, targetResolution, pixelRatio, getImageFunction) {\n\n  /**\n   * @private\n   * @type {module:ol/proj/Projection}\n   */\n  this.targetProj_ = targetProj;\n\n  /**\n   * @private\n   * @type {module:ol/extent~Extent}\n   */\n  this.maxSourceExtent_ = sourceProj.getExtent();\n  const maxTargetExtent = targetProj.getExtent();\n\n  const limitedTargetExtent = maxTargetExtent ?\n    getIntersection(targetExtent, maxTargetExtent) : targetExtent;\n\n  const targetCenter = getCenter(limitedTargetExtent);\n  const sourceResolution = calculateSourceResolution(\n    sourceProj, targetProj, targetCenter, targetResolution);\n\n  const errorThresholdInPixels = ERROR_THRESHOLD;\n\n  /**\n   * @private\n   * @type {!module:ol/reproj/Triangulation}\n   */\n  this.triangulation_ = new Triangulation(\n    sourceProj, targetProj, limitedTargetExtent, this.maxSourceExtent_,\n    sourceResolution * errorThresholdInPixels);\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.targetResolution_ = targetResolution;\n\n  /**\n   * @private\n   * @type {module:ol/extent~Extent}\n   */\n  this.targetExtent_ = targetExtent;\n\n  const sourceExtent = this.triangulation_.calculateSourceExtent();\n\n  /**\n   * @private\n   * @type {module:ol/ImageBase}\n   */\n  this.sourceImage_ =\n      getImageFunction(sourceExtent, sourceResolution, pixelRatio);\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.sourcePixelRatio_ =\n      this.sourceImage_ ? this.sourceImage_.getPixelRatio() : 1;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement}\n   */\n  this.canvas_ = null;\n\n  /**\n   * @private\n   * @type {?module:ol/events~EventsKey}\n   */\n  this.sourceListenerKey_ = null;\n\n\n  let state = ImageState.LOADED;\n\n  if (this.sourceImage_) {\n    state = ImageState.IDLE;\n  }\n\n  ImageBase.call(this, targetExtent, targetResolution, this.sourcePixelRatio_, state);\n};\n\ninherits(ReprojImage, ImageBase);\n\n\n/**\n * @inheritDoc\n */\nReprojImage.prototype.disposeInternal = function() {\n  if (this.state == ImageState.LOADING) {\n    this.unlistenSource_();\n  }\n  ImageBase.prototype.disposeInternal.call(this);\n};\n\n\n/**\n * @inheritDoc\n */\nReprojImage.prototype.getImage = function() {\n  return this.canvas_;\n};\n\n\n/**\n * @return {module:ol/proj/Projection} Projection.\n */\nReprojImage.prototype.getProjection = function() {\n  return this.targetProj_;\n};\n\n\n/**\n * @private\n */\nReprojImage.prototype.reproject_ = function() {\n  const sourceState = this.sourceImage_.getState();\n  if (sourceState == ImageState.LOADED) {\n    const width = getWidth(this.targetExtent_) / this.targetResolution_;\n    const height = getHeight(this.targetExtent_) / this.targetResolution_;\n\n    this.canvas_ = renderReprojected(width, height, this.sourcePixelRatio_,\n      this.sourceImage_.getResolution(), this.maxSourceExtent_,\n      this.targetResolution_, this.targetExtent_, this.triangulation_, [{\n        extent: this.sourceImage_.getExtent(),\n        image: this.sourceImage_.getImage()\n      }], 0);\n  }\n  this.state = sourceState;\n  this.changed();\n};\n\n\n/**\n * @inheritDoc\n */\nReprojImage.prototype.load = function() {\n  if (this.state == ImageState.IDLE) {\n    this.state = ImageState.LOADING;\n    this.changed();\n\n    const sourceState = this.sourceImage_.getState();\n    if (sourceState == ImageState.LOADED || sourceState == ImageState.ERROR) {\n      this.reproject_();\n    } else {\n      this.sourceListenerKey_ = listen(this.sourceImage_,\n        EventType.CHANGE, function(e) {\n          const sourceState = this.sourceImage_.getState();\n          if (sourceState == ImageState.LOADED || sourceState == ImageState.ERROR) {\n            this.unlistenSource_();\n            this.reproject_();\n          }\n        }, this);\n      this.sourceImage_.load();\n    }\n  }\n};\n\n\n/**\n * @private\n */\nReprojImage.prototype.unlistenSource_ = function() {\n  unlistenByKey(/** @type {!module:ol/events~EventsKey} */ (this.sourceListenerKey_));\n  this.sourceListenerKey_ = null;\n};\nexport default ReprojImage;\n","/**\n * @module ol/source/Image\n */\nimport {ENABLE_RASTER_REPROJECTION} from '../reproj/common.js';\nimport {inherits} from '../index.js';\nimport ImageState from '../ImageState.js';\nimport {linearFindNearest} from '../array.js';\nimport Event from '../events/Event.js';\nimport {equals} from '../extent.js';\nimport {equivalent} from '../proj.js';\nimport ReprojImage from '../reproj/Image.js';\nimport Source from '../source/Source.js';\n\n\n/**\n * @enum {string}\n */\nconst ImageSourceEventType = {\n\n  /**\n   * Triggered when an image starts loading.\n   * @event ol/source/Image~ImageSourceEvent#imageloadstart\n   * @api\n   */\n  IMAGELOADSTART: 'imageloadstart',\n\n  /**\n   * Triggered when an image finishes loading.\n   * @event ol/source/Image~ImageSourceEvent#imageloadend\n   * @api\n   */\n  IMAGELOADEND: 'imageloadend',\n\n  /**\n   * Triggered if image loading results in an error.\n   * @event ol/source/Image~ImageSourceEvent#imageloaderror\n   * @api\n   */\n  IMAGELOADERROR: 'imageloaderror'\n\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Image~ImageSource} instances are instances of this\n * type.\n *\n * @constructor\n * @extends {module:ol/events/Event}\n * @param {string} type Type.\n * @param {module:ol/Image} image The image.\n */\nconst ImageSourceEvent = function(type, image) {\n\n  Event.call(this, type);\n\n  /**\n   * The image related to the event.\n   * @type {module:ol/Image}\n   * @api\n   */\n  this.image = image;\n\n};\ninherits(ImageSourceEvent, Event);\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions]\n * @property {module:ol/extent~Extent} [extent]\n * @property {module:ol/proj~ProjectionLike} projection\n * @property {Array.<number>} [resolutions]\n * @property {module:ol/source/State} [state]\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing a single image.\n *\n * @constructor\n * @abstract\n * @extends {module:ol/source/Source}\n * @param {module:ol/source/Image~Options} options Single image source options.\n * @api\n */\nconst ImageSource = function(options) {\n  Source.call(this, {\n    attributions: options.attributions,\n    extent: options.extent,\n    projection: options.projection,\n    state: options.state\n  });\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.resolutions_ = options.resolutions !== undefined ?\n    options.resolutions : null;\n\n\n  /**\n   * @private\n   * @type {module:ol/reproj/Image}\n   */\n  this.reprojectedImage_ = null;\n\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.reprojectedRevision_ = 0;\n};\n\ninherits(ImageSource, Source);\n\n\n/**\n * @return {Array.<number>} Resolutions.\n * @override\n */\nImageSource.prototype.getResolutions = function() {\n  return this.resolutions_;\n};\n\n\n/**\n * @protected\n * @param {number} resolution Resolution.\n * @return {number} Resolution.\n */\nImageSource.prototype.findNearestResolution = function(resolution) {\n  if (this.resolutions_) {\n    const idx = linearFindNearest(this.resolutions_, resolution, 0);\n    resolution = this.resolutions_[idx];\n  }\n  return resolution;\n};\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {module:ol/proj/Projection} projection Projection.\n * @return {module:ol/ImageBase} Single image.\n */\nImageSource.prototype.getImage = function(extent, resolution, pixelRatio, projection) {\n  const sourceProjection = this.getProjection();\n  if (!ENABLE_RASTER_REPROJECTION ||\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)) {\n    if (sourceProjection) {\n      projection = sourceProjection;\n    }\n    return this.getImageInternal(extent, resolution, pixelRatio, projection);\n  } else {\n    if (this.reprojectedImage_) {\n      if (this.reprojectedRevision_ == this.getRevision() &&\n          equivalent(\n            this.reprojectedImage_.getProjection(), projection) &&\n          this.reprojectedImage_.getResolution() == resolution &&\n          equals(this.reprojectedImage_.getExtent(), extent)) {\n        return this.reprojectedImage_;\n      }\n      this.reprojectedImage_.dispose();\n      this.reprojectedImage_ = null;\n    }\n\n    this.reprojectedImage_ = new ReprojImage(\n      sourceProjection, projection, extent, resolution, pixelRatio,\n      function(extent, resolution, pixelRatio) {\n        return this.getImageInternal(extent, resolution,\n          pixelRatio, sourceProjection);\n      }.bind(this));\n    this.reprojectedRevision_ = this.getRevision();\n\n    return this.reprojectedImage_;\n  }\n};\n\n\n/**\n * @abstract\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {module:ol/proj/Projection} projection Projection.\n * @return {module:ol/ImageBase} Single image.\n * @protected\n */\nImageSource.prototype.getImageInternal = function(extent, resolution, pixelRatio, projection) {};\n\n\n/**\n * Handle image change events.\n * @param {module:ol/events/Event} event Event.\n * @protected\n */\nImageSource.prototype.handleImageChange = function(event) {\n  const image = /** @type {module:ol/Image} */ (event.target);\n  switch (image.getState()) {\n    case ImageState.LOADING:\n      this.dispatchEvent(\n        new ImageSourceEvent(ImageSourceEventType.IMAGELOADSTART,\n          image));\n      break;\n    case ImageState.LOADED:\n      this.dispatchEvent(\n        new ImageSourceEvent(ImageSourceEventType.IMAGELOADEND,\n          image));\n      break;\n    case ImageState.ERROR:\n      this.dispatchEvent(\n        new ImageSourceEvent(ImageSourceEventType.IMAGELOADERROR,\n          image));\n      break;\n    default:\n      // pass\n  }\n};\n\n\n/**\n * Default image load function for image sources that use module:ol/Image~Image image\n * instances.\n * @param {module:ol/Image} image Image.\n * @param {string} src Source.\n */\nexport function defaultImageLoadFunction(image, src) {\n  image.getImage().src = src;\n}\n\n\nexport default ImageSource;\n","/**\n * @module ol/source/Raster\n */\nimport {getUid, inherits} from '../index.js';\nimport ImageCanvas from '../ImageCanvas.js';\nimport TileQueue from '../TileQueue.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {listen} from '../events.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport {Processor} from 'pixelworks/lib/index';\nimport {equals, getCenter, getHeight, getWidth} from '../extent.js';\nimport LayerType from '../LayerType.js';\nimport Layer from '../layer/Layer.js';\nimport ImageLayer from '../layer/Image.js';\nimport TileLayer from '../layer/Tile.js';\nimport {assign} from '../obj.js';\nimport CanvasImageLayerRenderer from '../renderer/canvas/ImageLayer.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\nimport ImageSource from '../source/Image.js';\nimport SourceState from '../source/State.js';\nimport TileSource from '../source/Tile.js';\nimport {create as createTransform} from '../transform.js';\n\n\n/**\n * A function that takes an array of input data, performs some operation, and\n * returns an array of output data.\n * For `pixel` type operations, the function will be called with an array of\n * pixels, where each pixel is an array of four numbers (`[r, g, b, a]`) in the\n * range of 0 - 255. It should return a single pixel array.\n * For `'image'` type operations, functions will be called with an array of\n * {@link ImageData https://developer.mozilla.org/en-US/docs/Web/API/ImageData}\n * and should return a single {@link ImageData\n * https://developer.mozilla.org/en-US/docs/Web/API/ImageData}.  The operations\n * are called with a second \"data\" argument, which can be used for storage.  The\n * data object is accessible from raster events, where it can be initialized in\n * \"beforeoperations\" and accessed again in \"afteroperations\".\n *\n * @typedef {function((Array.<Array.<number>>|Array.<ImageData>), Object):\n *     (Array.<number>|ImageData)} Operation\n */\n\n\n/**\n * @enum {string}\n */\nconst RasterEventType = {\n  /**\n   * Triggered before operations are run.\n   * @event ol/source/Raster~RasterSourceEvent#beforeoperations\n   * @api\n   */\n  BEFOREOPERATIONS: 'beforeoperations',\n\n  /**\n   * Triggered after operations are run.\n   * @event ol/source/Raster~RasterSourceEvent#afteroperations\n   * @api\n   */\n  AFTEROPERATIONS: 'afteroperations'\n};\n\n\n/**\n * Raster operation type. Supported values are `'pixel'` and `'image'`.\n * @enum {string}\n */\nconst RasterOperationType = {\n  PIXEL: 'pixel',\n  IMAGE: 'image'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Raster} instances are instances of this\n * type.\n *\n * @constructor\n * @extends {module:ol/events/Event}\n * @param {string} type Type.\n * @param {module:ol/PluggableMap~FrameState} frameState The frame state.\n * @param {Object} data An object made available to operations.\n */\nconst RasterSourceEvent = function(type, frameState, data) {\n  Event.call(this, type);\n\n  /**\n   * The raster extent.\n   * @type {module:ol/extent~Extent}\n   * @api\n   */\n  this.extent = frameState.extent;\n\n  /**\n   * The pixel resolution (map units per pixel).\n   * @type {number}\n   * @api\n   */\n  this.resolution = frameState.viewState.resolution / frameState.pixelRatio;\n\n  /**\n   * An object made available to all operations.  This can be used by operations\n   * as a storage object (e.g. for calculating statistics).\n   * @type {Object}\n   * @api\n   */\n  this.data = data;\n\n};\ninherits(RasterSourceEvent, Event);\n\n/**\n * @typedef {Object} Options\n * @property {Array.<module:ol/source/Source|module:ol/layer/Layer>} sources Input\n * sources or layers. Vector layers must be configured with `renderMode: 'image'`.\n * @property {module:ol/source/Raster~Operation} [operation] Raster operation.\n * The operation will be called with data from input sources\n * and the output will be assigned to the raster source.\n * @property {Object} [lib] Functions that will be made available to operations run in a worker.\n * @property {number} [threads] By default, operations will be run in a single worker thread.\n * To avoid using workers altogether, set `threads: 0`.  For pixel operations, operations can\n * be run in multiple worker threads.  Note that there is additional overhead in\n * transferring data to multiple workers, and that depending on the user's\n * system, it may not be possible to parallelize the work.\n * @property {module:ol/source/Raster~RasterOperationType} [operationType='pixel'] Operation type.\n * Supported values are `'pixel'` and `'image'`.  By default,\n * `'pixel'` operations are assumed, and operations will be called with an\n * array of pixels from input sources.  If set to `'image'`, operations will\n * be called with an array of ImageData objects from input sources.\n */\n\n\n/**\n * @classdesc\n * A source that transforms data from any number of input sources using an\n * {@link module:ol/source/Raster~Operation} function to transform input pixel values into\n * output pixel values.\n *\n * @constructor\n * @extends {module:ol/source/Image}\n * @fires ol/source/Raster~RasterSourceEvent\n * @param {module:ol/source/Raster~Options=} options Options.\n * @api\n */\nconst RasterSource = function(options) {\n\n  /**\n   * @private\n   * @type {*}\n   */\n  this.worker_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/source/Raster~RasterOperationType}\n   */\n  this.operationType_ = options.operationType !== undefined ?\n    options.operationType : RasterOperationType.PIXEL;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.threads_ = options.threads !== undefined ? options.threads : 1;\n\n  /**\n   * @private\n   * @type {Array.<module:ol/renderer/canvas/Layer>}\n   */\n  this.renderers_ = createRenderers(options.sources);\n\n  for (let r = 0, rr = this.renderers_.length; r < rr; ++r) {\n    listen(this.renderers_[r], EventType.CHANGE,\n      this.changed, this);\n  }\n\n  /**\n   * @private\n   * @type {module:ol/TileQueue}\n   */\n  this.tileQueue_ = new TileQueue(\n    function() {\n      return 1;\n    },\n    this.changed.bind(this));\n\n  const layerStatesArray = getLayerStatesArray(this.renderers_);\n  const layerStates = {};\n  for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n    layerStates[getUid(layerStatesArray[i].layer)] = layerStatesArray[i];\n  }\n\n  /**\n   * The most recently requested frame state.\n   * @type {module:ol/PluggableMap~FrameState}\n   * @private\n   */\n  this.requestedFrameState_;\n\n  /**\n   * The most recently rendered image canvas.\n   * @type {module:ol/ImageCanvas}\n   * @private\n   */\n  this.renderedImageCanvas_ = null;\n\n  /**\n   * The most recently rendered revision.\n   * @type {number}\n   */\n  this.renderedRevision_;\n\n  /**\n   * @private\n   * @type {module:ol/PluggableMap~FrameState}\n   */\n  this.frameState_ = {\n    animate: false,\n    coordinateToPixelTransform: createTransform(),\n    extent: null,\n    focus: null,\n    index: 0,\n    layerStates: layerStates,\n    layerStatesArray: layerStatesArray,\n    pixelRatio: 1,\n    pixelToCoordinateTransform: createTransform(),\n    postRenderFunctions: [],\n    size: [0, 0],\n    skippedFeatureUids: {},\n    tileQueue: this.tileQueue_,\n    time: Date.now(),\n    usedTiles: {},\n    viewState: /** @type {module:ol/View~State} */ ({\n      rotation: 0\n    }),\n    viewHints: [],\n    wantedTiles: {}\n  };\n\n  ImageSource.call(this, {});\n\n  if (options.operation !== undefined) {\n    this.setOperation(options.operation, options.lib);\n  }\n\n};\n\ninherits(RasterSource, ImageSource);\n\n\n/**\n * Set the operation.\n * @param {module:ol/source/Raster~Operation} operation New operation.\n * @param {Object=} opt_lib Functions that will be available to operations run\n *     in a worker.\n * @api\n */\nRasterSource.prototype.setOperation = function(operation, opt_lib) {\n  this.worker_ = new Processor({\n    operation: operation,\n    imageOps: this.operationType_ === RasterOperationType.IMAGE,\n    queue: 1,\n    lib: opt_lib,\n    threads: this.threads_\n  });\n  this.changed();\n};\n\n\n/**\n * Update the stored frame state.\n * @param {module:ol/extent~Extent} extent The view extent (in map units).\n * @param {number} resolution The view resolution.\n * @param {module:ol/proj/Projection} projection The view projection.\n * @return {module:ol/PluggableMap~FrameState} The updated frame state.\n * @private\n */\nRasterSource.prototype.updateFrameState_ = function(extent, resolution, projection) {\n\n  const frameState = /** @type {module:ol/PluggableMap~FrameState} */ (assign({}, this.frameState_));\n\n  frameState.viewState = /** @type {module:ol/View~State} */ (assign({}, frameState.viewState));\n\n  const center = getCenter(extent);\n\n  frameState.extent = extent.slice();\n  frameState.focus = center;\n  frameState.size[0] = Math.round(getWidth(extent) / resolution);\n  frameState.size[1] = Math.round(getHeight(extent) / resolution);\n  frameState.time = Date.now();\n  frameState.animate = false;\n\n  const viewState = frameState.viewState;\n  viewState.center = center;\n  viewState.projection = projection;\n  viewState.resolution = resolution;\n  return frameState;\n};\n\n\n/**\n * Determine if all sources are ready.\n * @return {boolean} All sources are ready.\n * @private\n */\nRasterSource.prototype.allSourcesReady_ = function() {\n  let ready = true;\n  let source;\n  for (let i = 0, ii = this.renderers_.length; i < ii; ++i) {\n    source = this.renderers_[i].getLayer().getSource();\n    if (source.getState() !== SourceState.READY) {\n      ready = false;\n      break;\n    }\n  }\n  return ready;\n};\n\n\n/**\n * @inheritDoc\n */\nRasterSource.prototype.getImage = function(extent, resolution, pixelRatio, projection) {\n  if (!this.allSourcesReady_()) {\n    return null;\n  }\n\n  const frameState = this.updateFrameState_(extent, resolution, projection);\n  this.requestedFrameState_ = frameState;\n\n  // check if we can't reuse the existing ol/ImageCanvas\n  if (this.renderedImageCanvas_) {\n    const renderedResolution = this.renderedImageCanvas_.getResolution();\n    const renderedExtent = this.renderedImageCanvas_.getExtent();\n    if (resolution !== renderedResolution || !equals(extent, renderedExtent)) {\n      this.renderedImageCanvas_ = null;\n    }\n  }\n\n  if (!this.renderedImageCanvas_ || this.getRevision() !== this.renderedRevision_) {\n    this.processSources_();\n  }\n\n  frameState.tileQueue.loadMoreTiles(16, 16);\n\n  if (frameState.animate) {\n    requestAnimationFrame(this.changed.bind(this));\n  }\n\n  return this.renderedImageCanvas_;\n};\n\n\n/**\n * Start processing source data.\n * @private\n */\nRasterSource.prototype.processSources_ = function() {\n  const frameState = this.requestedFrameState_;\n  const len = this.renderers_.length;\n  const imageDatas = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    const imageData = getImageData(\n      this.renderers_[i], frameState, frameState.layerStatesArray[i]);\n    if (imageData) {\n      imageDatas[i] = imageData;\n    } else {\n      return;\n    }\n  }\n\n  const data = {};\n  this.dispatchEvent(new RasterSourceEvent(RasterEventType.BEFOREOPERATIONS, frameState, data));\n  this.worker_.process(imageDatas, data, this.onWorkerComplete_.bind(this, frameState));\n};\n\n\n/**\n * Called when pixel processing is complete.\n * @param {module:ol/PluggableMap~FrameState} frameState The frame state.\n * @param {Error} err Any error during processing.\n * @param {ImageData} output The output image data.\n * @param {Object} data The user data.\n * @private\n */\nRasterSource.prototype.onWorkerComplete_ = function(frameState, err, output, data) {\n  if (err || !output) {\n    return;\n  }\n\n  // do nothing if extent or resolution changed\n  const extent = frameState.extent;\n  const resolution = frameState.viewState.resolution;\n  if (resolution !== this.requestedFrameState_.viewState.resolution ||\n      !equals(extent, this.requestedFrameState_.extent)) {\n    return;\n  }\n\n  let context;\n  if (this.renderedImageCanvas_) {\n    context = this.renderedImageCanvas_.getImage().getContext('2d');\n  } else {\n    const width = Math.round(getWidth(extent) / resolution);\n    const height = Math.round(getHeight(extent) / resolution);\n    context = createCanvasContext2D(width, height);\n    this.renderedImageCanvas_ = new ImageCanvas(extent, resolution, 1, context.canvas);\n  }\n  context.putImageData(output, 0, 0);\n\n  this.changed();\n  this.renderedRevision_ = this.getRevision();\n\n  this.dispatchEvent(new RasterSourceEvent(RasterEventType.AFTEROPERATIONS, frameState, data));\n};\n\n\n/**\n * A reusable canvas context.\n * @type {CanvasRenderingContext2D}\n * @private\n */\nlet sharedContext = null;\n\n\n/**\n * Get image data from a renderer.\n * @param {module:ol/renderer/canvas/Layer} renderer Layer renderer.\n * @param {module:ol/PluggableMap~FrameState} frameState The frame state.\n * @param {module:ol/layer/Layer~State} layerState The layer state.\n * @return {ImageData} The image data.\n */\nfunction getImageData(renderer, frameState, layerState) {\n  if (!renderer.prepareFrame(frameState, layerState)) {\n    return null;\n  }\n  const width = frameState.size[0];\n  const height = frameState.size[1];\n  if (!sharedContext) {\n    sharedContext = createCanvasContext2D(width, height);\n  } else {\n    const canvas = sharedContext.canvas;\n    if (canvas.width !== width || canvas.height !== height) {\n      sharedContext = createCanvasContext2D(width, height);\n    } else {\n      sharedContext.clearRect(0, 0, width, height);\n    }\n  }\n  renderer.composeFrame(frameState, layerState, sharedContext);\n  return sharedContext.getImageData(0, 0, width, height);\n}\n\n\n/**\n * Get a list of layer states from a list of renderers.\n * @param {Array.<module:ol/renderer/canvas/Layer>} renderers Layer renderers.\n * @return {Array.<module:ol/layer/Layer~State>} The layer states.\n */\nfunction getLayerStatesArray(renderers) {\n  return renderers.map(function(renderer) {\n    return renderer.getLayer().getLayerState();\n  });\n}\n\n\n/**\n * Create renderers for all sources.\n * @param {Array.<module:ol/source/Source>} sources The sources.\n * @return {Array.<module:ol/renderer/canvas/Layer>} Array of layer renderers.\n */\nfunction createRenderers(sources) {\n  const len = sources.length;\n  const renderers = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    renderers[i] = createRenderer(sources[i]);\n  }\n  return renderers;\n}\n\n\n/**\n * Create a renderer for the provided source.\n * @param {module:ol/source/Source} source The source.\n * @return {module:ol/renderer/canvas/Layer} The renderer.\n */\nfunction createRenderer(source) {\n  let renderer = null;\n  if (source instanceof TileSource) {\n    renderer = createTileRenderer(source);\n  } else if (source instanceof ImageSource) {\n    renderer = createImageRenderer(source);\n  } else if (source instanceof TileLayer) {\n    renderer = new CanvasTileLayerRenderer(source);\n  } else if (source instanceof Layer &&\n      (source.getType() == LayerType.IMAGE || source.getType() == LayerType.VECTOR)) {\n    renderer = new CanvasImageLayerRenderer(source);\n  }\n  return renderer;\n}\n\n\n/**\n * Create an image renderer for the provided source.\n * @param {module:ol/source/Image} source The source.\n * @return {module:ol/renderer/canvas/Layer} The renderer.\n */\nfunction createImageRenderer(source) {\n  const layer = new ImageLayer({source: source});\n  return new CanvasImageLayerRenderer(layer);\n}\n\n\n/**\n * Create a tile renderer for the provided source.\n * @param {module:ol/source/Tile} source The source.\n * @return {module:ol/renderer/canvas/Layer} The renderer.\n */\nfunction createTileRenderer(source) {\n  const layer = new TileLayer({source: source});\n  return new CanvasTileLayerRenderer(layer);\n}\n\n\n/**\n * @override\n */\nRasterSource.prototype.getImageInternal = function() {\n  return null; // not implemented\n};\n\n\nexport default RasterSource;\n","import 'ol/ol.css'; \nimport Map from 'ol/Map';\nimport View from 'ol/View';\nimport TileLayer from 'ol/layer/Tile';\nimport XYZSource from 'ol/source/XYZ';\nimport {fromLonLat} from 'ol/proj';\nimport ImageLayer from 'ol/layer/Image';\nimport RasterSource from 'ol/source/Raster';\n\n// Default public key from mapbox.com\nconst key = \"pk.eyJ1IjoibWhvbHRoYXVzZW4iLCJhIjoiY2puZnp1M2x4MDU3ajN2cW41dWc1emJ0YiJ9.HsBhoZy9z5WeQuyuVJgY1g\"\n\n// Flood-Function\nfunction flood(pixels, data)    {\n    const pixel = pixels[0];\n    if(pixel[3])    {\n        // R, G, B values as elevation\n        const height = -10000 + ((pixel[0] * 256 * 256 + pixel[1] * 256 + pixel[2]) * 0.1);\n        if(height <= data.level)    {\n            // sea blue\n            pixel[0] = 145; // red\n            pixel[1] = 175; // green\n            pixel[2] = 186; // blue\n            pixel[3] = 255; // alpha\n        }   else {\n            pixel[3] = 0; // transparent\n        }\n    }\n    return pixel;\n}\n\n// Terrain-RGB \nconst elevation = new XYZSource({\n    url: 'https://api.mapbox.com/v4/mapbox.terrain-rgb/{z}/{x}/{y}.pngraw?access_token=' + key,\n    crossOrigin: 'anonymous'\n  });\n\n// Raster source (elevation data), configured with flood operation\nconst raster = new RasterSource({\n    sources: [elevation],\n    operation: flood\n  });\n\n// Aktionen des Slider beobachten und Rasteroperationen erneut ausführen bei Änderungen\nconst control = document.getElementById('level');\nconst output = document.getElementById('output');\ncontrol.addEventListener('input', function() {\n  output.innerText = control.value;\n  raster.changed();\n});\noutput.innerText = control.value;\n\nraster.on('beforeoperations', function(event) {\n    event.data.level = control.value;\n  });\n\n// Neuer Tile Layer, der die Terrain-Quelle 'elevation' nutzt\n\nnew Map({\n    target: 'map-container',\n    layers: [\n        new TileLayer({\n            source: new XYZSource({\n                url: 'http://tile.stamen.com/terrain/{z}/{x}/{y}.jpg'\n            })\n        }),\n\n        new ImageLayer({\n            opacity: 0.8,\n            source: raster\n        }),\n    ],\n    // Startposition und Zoomstufe angeben\n    view: new View({\n        center: fromLonLat([6.936111, 50.9275]),\n        zoom: 16,\n    })\n})\n","var hasImageData = true;\ntry {\n  new ImageData(10, 10);\n} catch (_) {\n  hasImageData = false;\n}\n\nvar context = document.createElement('canvas').getContext('2d');\n\nfunction newImageData(data, width, height) {\n  if (hasImageData) {\n    return new ImageData(data, width, height);\n  } else {\n    var imageData = context.createImageData(width, height);\n    imageData.data.set(data);\n    return imageData;\n  }\n}\n\nexports.newImageData = newImageData;\n","var newImageData = require('./util').newImageData;\n\n/**\n * Create a function for running operations.  This function is serialized for\n * use in a worker.\n * @param {function(Array, Object):*} operation The operation.\n * @return {function(Object):ArrayBuffer} A function that takes an object with\n * buffers, meta, imageOps, width, and height properties and returns an array\n * buffer.\n */\nfunction createMinion(operation) {\n  var workerHasImageData = true;\n  try {\n    new ImageData(10, 10);\n  } catch (_) {\n    workerHasImageData = false;\n  }\n\n  function newWorkerImageData(data, width, height) {\n    if (workerHasImageData) {\n      return new ImageData(data, width, height);\n    } else {\n      return {data: data, width: width, height: height};\n    }\n  }\n\n  return function(data) {\n    // bracket notation for minification support\n    var buffers = data['buffers'];\n    var meta = data['meta'];\n    var imageOps = data['imageOps'];\n    var width = data['width'];\n    var height = data['height'];\n\n    var numBuffers = buffers.length;\n    var numBytes = buffers[0].byteLength;\n    var output, b;\n\n    if (imageOps) {\n      var images = new Array(numBuffers);\n      for (b = 0; b < numBuffers; ++b) {\n        images[b] = newWorkerImageData(\n            new Uint8ClampedArray(buffers[b]), width, height);\n      }\n      output = operation(images, meta).data;\n    } else {\n      output = new Uint8ClampedArray(numBytes);\n      var arrays = new Array(numBuffers);\n      var pixels = new Array(numBuffers);\n      for (b = 0; b < numBuffers; ++b) {\n        arrays[b] = new Uint8ClampedArray(buffers[b]);\n        pixels[b] = [0, 0, 0, 0];\n      }\n      for (var i = 0; i < numBytes; i += 4) {\n        for (var j = 0; j < numBuffers; ++j) {\n          var array = arrays[j];\n          pixels[j][0] = array[i];\n          pixels[j][1] = array[i + 1];\n          pixels[j][2] = array[i + 2];\n          pixels[j][3] = array[i + 3];\n        }\n        var pixel = operation(pixels, meta);\n        output[i] = pixel[0];\n        output[i + 1] = pixel[1];\n        output[i + 2] = pixel[2];\n        output[i + 3] = pixel[3];\n      }\n    }\n    return output.buffer;\n  };\n}\n\n/**\n * Create a worker for running operations.\n * @param {Object} config Configuration.\n * @param {function(MessageEvent)} onMessage Called with a message event.\n * @return {Worker} The worker.\n */\nfunction createWorker(config, onMessage) {\n  var lib = Object.keys(config.lib || {}).map(function(name) {\n    return 'var ' + name + ' = ' + config.lib[name].toString() + ';';\n  });\n\n  var lines = lib.concat([\n    'var __minion__ = (' + createMinion.toString() + ')(', config.operation.toString(), ');',\n    'self.addEventListener(\"message\", function(event) {',\n    '  var buffer = __minion__(event.data);',\n    '  self.postMessage({buffer: buffer, meta: event.data.meta}, [buffer]);',\n    '});'\n  ]);\n\n  var blob = new Blob(lines, {type: 'text/javascript'});\n  var source = URL.createObjectURL(blob);\n  var worker = new Worker(source);\n  worker.addEventListener('message', onMessage);\n  return worker;\n}\n\n/**\n * Create a faux worker for running operations.\n * @param {Object} config Configuration.\n * @param {function(MessageEvent)} onMessage Called with a message event.\n * @return {Object} The faux worker.\n */\nfunction createFauxWorker(config, onMessage) {\n  var minion = createMinion(config.operation);\n  return {\n    postMessage: function(data) {\n      setTimeout(function() {\n        onMessage({'data': {'buffer': minion(data), 'meta': data['meta']}});\n      }, 0);\n    }\n  };\n}\n\n/**\n * A processor runs pixel or image operations in workers.\n * @param {Object} config Configuration.\n */\nfunction Processor(config) {\n  this._imageOps = !!config.imageOps;\n  var threads;\n  if (config.threads === 0) {\n    threads = 0;\n  } else if (this._imageOps) {\n    threads = 1;\n  } else {\n    threads = config.threads || 1;\n  }\n  var workers = [];\n  if (threads) {\n    for (var i = 0; i < threads; ++i) {\n      workers[i] = createWorker(config, this._onWorkerMessage.bind(this, i));\n    }\n  } else {\n    workers[0] = createFauxWorker(config, this._onWorkerMessage.bind(this, 0));\n  }\n  this._workers = workers;\n  this._queue = [];\n  this._maxQueueLength = config.queue || Infinity;\n  this._running = 0;\n  this._dataLookup = {};\n  this._job = null;\n}\n\n/**\n * Run operation on input data.\n * @param {Array.<Array|ImageData>} inputs Array of pixels or image data\n *     (depending on the operation type).\n * @param {Object} meta A user data object.  This is passed to all operations\n *     and must be serializable.\n * @param {function(Error, ImageData, Object)} callback Called when work\n *     completes.  The first argument is any error.  The second is the ImageData\n *     generated by operations.  The third is the user data object.\n */\nProcessor.prototype.process = function(inputs, meta, callback) {\n  this._enqueue({\n    inputs: inputs,\n    meta: meta,\n    callback: callback\n  });\n  this._dispatch();\n};\n\n/**\n * Stop responding to any completed work and destroy the processor.\n */\nProcessor.prototype.destroy = function() {\n  for (var key in this) {\n    this[key] = null;\n  }\n  this._destroyed = true;\n};\n\n/**\n * Add a job to the queue.\n * @param {Object} job The job.\n */\nProcessor.prototype._enqueue = function(job) {\n  this._queue.push(job);\n  while (this._queue.length > this._maxQueueLength) {\n    this._queue.shift().callback(null, null);\n  }\n};\n\n/**\n * Dispatch a job.\n */\nProcessor.prototype._dispatch = function() {\n  if (this._running === 0 && this._queue.length > 0) {\n    var job = this._job = this._queue.shift();\n    var width = job.inputs[0].width;\n    var height = job.inputs[0].height;\n    var buffers = job.inputs.map(function(input) {\n      return input.data.buffer;\n    });\n    var threads = this._workers.length;\n    this._running = threads;\n    if (threads === 1) {\n      this._workers[0].postMessage({\n        'buffers': buffers,\n        'meta': job.meta,\n        'imageOps': this._imageOps,\n        'width': width,\n        'height': height\n      }, buffers);\n    } else {\n      var length = job.inputs[0].data.length;\n      var segmentLength = 4 * Math.ceil(length / 4 / threads);\n      for (var i = 0; i < threads; ++i) {\n        var offset = i * segmentLength;\n        var slices = [];\n        for (var j = 0, jj = buffers.length; j < jj; ++j) {\n          slices.push(buffers[i].slice(offset, offset + segmentLength));\n        }\n        this._workers[i].postMessage({\n          'buffers': slices,\n          'meta': job.meta,\n          'imageOps': this._imageOps,\n          'width': width,\n          'height': height\n        }, slices);\n      }\n    }\n  }\n};\n\n/**\n * Handle messages from the worker.\n * @param {number} index The worker index.\n * @param {MessageEvent} event The message event.\n */\nProcessor.prototype._onWorkerMessage = function(index, event) {\n  if (this._destroyed) {\n    return;\n  }\n  this._dataLookup[index] = event.data;\n  --this._running;\n  if (this._running === 0) {\n    this._resolveJob();\n  }\n};\n\n/**\n * Resolve a job.  If there are no more worker threads, the processor callback\n * will be called.\n */\nProcessor.prototype._resolveJob = function() {\n  var job = this._job;\n  var threads = this._workers.length;\n  var data, meta;\n  if (threads === 1) {\n    data = new Uint8ClampedArray(this._dataLookup[0]['buffer']);\n    meta = this._dataLookup[0]['meta'];\n  } else {\n    var length = job.inputs[0].data.length;\n    data = new Uint8ClampedArray(length);\n    meta = new Array(length);\n    var segmentLength = 4 * Math.ceil(length / 4 / threads);\n    for (var i = 0; i < threads; ++i) {\n      var buffer = this._dataLookup[i]['buffer'];\n      var offset = i * segmentLength;\n      data.set(new Uint8ClampedArray(buffer), offset);\n      meta[i] = this._dataLookup[i]['meta'];\n    }\n  }\n  this._job = null;\n  this._dataLookup = {};\n  job.callback(null,\n      newImageData(data, job.inputs[0].width, job.inputs[0].height), meta);\n  this._dispatch();\n};\n\nmodule.exports = Processor;\n","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.quickselect = factory());\n}(this, (function () { 'use strict';\n\nfunction quickselect(arr, k, left, right, compare) {\n    quickselectStep(arr, k, left || 0, right || (arr.length - 1), compare || defaultCompare);\n}\n\nfunction quickselectStep(arr, k, left, right, compare) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            var n = right - left + 1;\n            var m = k - left + 1;\n            var z = Math.log(n);\n            var s = 0.5 * Math.exp(2 * z / 3);\n            var sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            var newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            var newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            quickselectStep(arr, k, newLeft, newRight, compare);\n        }\n\n        var t = arr[k];\n        var i = left;\n        var j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) i++;\n            while (compare(arr[j], t) > 0) j--;\n        }\n\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\nfunction swap(arr, i, j) {\n    var tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n\nreturn quickselect;\n\n})));\n","\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function \"fixes\" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== \"undefined\" && window.location;\n\n  if (!location) {\n    throw new Error(\"fixUrls requires window.location\");\n  }\n\n\t// blank or null?\n\tif (!css || typeof css !== \"string\") {\n\t  return css;\n  }\n\n  var baseUrl = location.protocol + \"//\" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, \"/\");\n\n\t// convert each url(...)\n\t/*\n\tThis regular expression is just a way to recursively match brackets within\n\ta string.\n\n\t /url\\s*\\(  = Match on the word \"url\" with any whitespace after it and then a parens\n\t   (  = Start a capturing group\n\t     (?:  = Start a non-capturing group\n\t         [^)(]  = Match anything that isn't a parentheses\n\t         |  = OR\n\t         \\(  = Match a start parentheses\n\t             (?:  = Start another non-capturing groups\n\t                 [^)(]+  = Match anything that isn't a parentheses\n\t                 |  = OR\n\t                 \\(  = Match a start parentheses\n\t                     [^)(]*  = Match anything that isn't a parentheses\n\t                 \\)  = Match a end parentheses\n\t             )  = End Group\n              *\\) = Match anything and then a close parens\n          )  = Close non-capturing group\n          *  = Match anything\n       )  = Close capturing group\n\t \\)  = Match a close parens\n\n\t /gi  = Get all matches, not the first.  Be case insensitive.\n\t */\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function(fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl\n\t\t\t.trim()\n\t\t\t.replace(/^\"(.*)\"$/, function(o, $1){ return $1; })\n\t\t\t.replace(/^'(.*)'$/, function(o, $1){ return $1; });\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/|\\s*$)/i.test(unquotedOrigUrl)) {\n\t\t  return fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf(\"//\") === 0) {\n\t\t  \t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf(\"/\") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with '/'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, \"\"); // Strip leading './'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn \"url(\" + JSON.stringify(newUrl) + \")\";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nvar stylesInDom = {};\n\nvar\tmemoize = function (fn) {\n\tvar memo;\n\n\treturn function () {\n\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\treturn memo;\n\t};\n};\n\nvar isOldIE = memoize(function () {\n\t// Test for IE <= 9 as proposed by Browserhacks\n\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t// Tests for existence of standard globals is to allow style-loader\n\t// to operate correctly into non-standard environments\n\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\treturn window && document && document.all && !window.atob;\n});\n\nvar getTarget = function (target) {\n  return document.querySelector(target);\n};\n\nvar getElement = (function (fn) {\n\tvar memo = {};\n\n\treturn function(target) {\n                // If passing function in options, then use it for resolve \"head\" element.\n                // Useful for Shadow Root style i.e\n                // {\n                //   insertInto: function () { return document.querySelector(\"#foo\").shadowRoot }\n                // }\n                if (typeof target === 'function') {\n                        return target();\n                }\n                if (typeof memo[target] === \"undefined\") {\n\t\t\tvar styleTarget = getTarget.call(this, target);\n\t\t\t// Special case to return head of iframe instead of iframe itself\n\t\t\tif (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n\t\t\t\ttry {\n\t\t\t\t\t// This will throw an exception if access to iframe is blocked\n\t\t\t\t\t// due to cross-origin restrictions\n\t\t\t\t\tstyleTarget = styleTarget.contentDocument.head;\n\t\t\t\t} catch(e) {\n\t\t\t\t\tstyleTarget = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tmemo[target] = styleTarget;\n\t\t}\n\t\treturn memo[target]\n\t};\n})();\n\nvar singleton = null;\nvar\tsingletonCounter = 0;\nvar\tstylesInsertedAtTop = [];\n\nvar\tfixUrls = require(\"./urls\");\n\nmodule.exports = function(list, options) {\n\tif (typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif (typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\n\toptions.attrs = typeof options.attrs === \"object\" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (!options.singleton && typeof options.singleton !== \"boolean\") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n        if (!options.insertInto) options.insertInto = \"head\";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (!options.insertAt) options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list, options);\n\n\taddStylesToDom(styles, options);\n\n\treturn function update (newList) {\n\t\tvar mayRemove = [];\n\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList, options);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\n\t\tfor (var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\n\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom (styles, options) {\n\tfor (var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles (list, options) {\n\tvar styles = [];\n\tvar newStyles = {};\n\n\tfor (var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = options.base ? item[0] + options.base : item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\n\t\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse newStyles[id].parts.push(part);\n\t}\n\n\treturn styles;\n}\n\nfunction insertStyleElement (options, style) {\n\tvar target = getElement(options.insertInto)\n\n\tif (!target) {\n\t\tthrow new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");\n\t}\n\n\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\n\n\tif (options.insertAt === \"top\") {\n\t\tif (!lastStyleElementInsertedAtTop) {\n\t\t\ttarget.insertBefore(style, target.firstChild);\n\t\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\ttarget.appendChild(style);\n\t\t}\n\t\tstylesInsertedAtTop.push(style);\n\t} else if (options.insertAt === \"bottom\") {\n\t\ttarget.appendChild(style);\n\t} else if (typeof options.insertAt === \"object\" && options.insertAt.before) {\n\t\tvar nextSibling = getElement(options.insertInto + \" \" + options.insertAt.before);\n\t\ttarget.insertBefore(style, nextSibling);\n\t} else {\n\t\tthrow new Error(\"[Style Loader]\\n\\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\\n Must be 'top', 'bottom', or Object.\\n (https://github.com/webpack-contrib/style-loader#insertat)\\n\");\n\t}\n}\n\nfunction removeStyleElement (style) {\n\tif (style.parentNode === null) return false;\n\tstyle.parentNode.removeChild(style);\n\n\tvar idx = stylesInsertedAtTop.indexOf(style);\n\tif(idx >= 0) {\n\t\tstylesInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement (options) {\n\tvar style = document.createElement(\"style\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\n\taddAttrs(style, options.attrs);\n\tinsertStyleElement(options, style);\n\n\treturn style;\n}\n\nfunction createLinkElement (options) {\n\tvar link = document.createElement(\"link\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\toptions.attrs.rel = \"stylesheet\";\n\n\taddAttrs(link, options.attrs);\n\tinsertStyleElement(options, link);\n\n\treturn link;\n}\n\nfunction addAttrs (el, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\tel.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction addStyle (obj, options) {\n\tvar style, update, remove, result;\n\n\t// If a transform function was defined, run it on the css\n\tif (options.transform && obj.css) {\n\t    result = options.transform(obj.css);\n\n\t    if (result) {\n\t    \t// If transform returns a value, use that instead of the original css.\n\t    \t// This allows running runtime transformations on the css.\n\t    \tobj.css = result;\n\t    } else {\n\t    \t// If the transform function returns a falsy value, don't add this css.\n\t    \t// This allows conditional loading of css\n\t    \treturn function() {\n\t    \t\t// noop\n\t    \t};\n\t    }\n\t}\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\n\t\tstyle = singleton || (singleton = createStyleElement(options));\n\n\t\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\n\n\t} else if (\n\t\tobj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\"\n\t) {\n\t\tstyle = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, style, options);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\n\t\t\tif(style.href) URL.revokeObjectURL(style.href);\n\t\t};\n\t} else {\n\t\tstyle = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, style);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle (newObj) {\n\t\tif (newObj) {\n\t\t\tif (\n\t\t\t\tnewObj.css === obj.css &&\n\t\t\t\tnewObj.media === obj.media &&\n\t\t\t\tnewObj.sourceMap === obj.sourceMap\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag (style, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (style.styleSheet) {\n\t\tstyle.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = style.childNodes;\n\n\t\tif (childNodes[index]) style.removeChild(childNodes[index]);\n\n\t\tif (childNodes.length) {\n\t\t\tstyle.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyle.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag (style, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyle.setAttribute(\"media\", media)\n\t}\n\n\tif(style.styleSheet) {\n\t\tstyle.styleSheet.cssText = css;\n\t} else {\n\t\twhile(style.firstChild) {\n\t\t\tstyle.removeChild(style.firstChild);\n\t\t}\n\n\t\tstyle.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink (link, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/*\n\t\tIf convertToAbsoluteUrls isn't defined, but sourcemaps are enabled\n\t\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\t\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\t\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls) {\n\t\tcss = fixUrls(css);\n\t}\n\n\tif (sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = link.href;\n\n\tlink.href = URL.createObjectURL(blob);\n\n\tif(oldSrc) URL.revokeObjectURL(oldSrc);\n}\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n","exports = module.exports = require(\"../css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".ol-box {\\n  box-sizing: border-box;\\n  border-radius: 2px;\\n  border: 2px solid blue;\\n}\\n\\n.ol-mouse-position {\\n  top: 8px;\\n  right: 8px;\\n  position: absolute;\\n}\\n\\n.ol-scale-line {\\n  background: rgba(0,60,136,0.3);\\n  border-radius: 4px;\\n  bottom: 8px;\\n  left: 8px;\\n  padding: 2px;\\n  position: absolute;\\n}\\n.ol-scale-line-inner {\\n  border: 1px solid #eee;\\n  border-top: none;\\n  color: #eee;\\n  font-size: 10px;\\n  text-align: center;\\n  margin: 1px;\\n  will-change: contents, width;\\n}\\n.ol-overlay-container {\\n  will-change: left,right,top,bottom;\\n}\\n\\n.ol-unsupported {\\n  display: none;\\n}\\n.ol-viewport, .ol-unselectable {\\n  -webkit-touch-callout: none;\\n  -webkit-user-select: none;\\n  -moz-user-select: none;\\n  -ms-user-select: none;\\n  user-select: none;\\n  -webkit-tap-highlight-color: rgba(0,0,0,0);\\n}\\n.ol-selectable {\\n  -webkit-touch-callout: default;\\n  -webkit-user-select: text;\\n  -moz-user-select: text;\\n  -ms-user-select: text;\\n  user-select: text;\\n}\\n.ol-grabbing {\\n  cursor: -webkit-grabbing;\\n  cursor: -moz-grabbing;\\n  cursor: grabbing;\\n}\\n.ol-grab {\\n  cursor: move;\\n  cursor: -webkit-grab;\\n  cursor: -moz-grab;\\n  cursor: grab;\\n}\\n.ol-control {\\n  position: absolute;\\n  background-color: rgba(255,255,255,0.4);\\n  border-radius: 4px;\\n  padding: 2px;\\n}\\n.ol-control:hover {\\n  background-color: rgba(255,255,255,0.6);\\n}\\n.ol-zoom {\\n  top: .5em;\\n  left: .5em;\\n}\\n.ol-rotate {\\n  top: .5em;\\n  right: .5em;\\n  transition: opacity .25s linear, visibility 0s linear;\\n}\\n.ol-rotate.ol-hidden {\\n  opacity: 0;\\n  visibility: hidden;\\n  transition: opacity .25s linear, visibility 0s linear .25s;\\n}\\n.ol-zoom-extent {\\n  top: 4.643em;\\n  left: .5em;\\n}\\n.ol-full-screen {\\n  right: .5em;\\n  top: .5em;\\n}\\n@media print {\\n  .ol-control {\\n    display: none;\\n  }\\n}\\n\\n.ol-control button {\\n  display: block;\\n  margin: 1px;\\n  padding: 0;\\n  color: white;\\n  font-size: 1.14em;\\n  font-weight: bold;\\n  text-decoration: none;\\n  text-align: center;\\n  height: 1.375em;\\n  width: 1.375em;\\n  line-height: .4em;\\n  background-color: rgba(0,60,136,0.5);\\n  border: none;\\n  border-radius: 2px;\\n}\\n.ol-control button::-moz-focus-inner {\\n  border: none;\\n  padding: 0;\\n}\\n.ol-zoom-extent button {\\n  line-height: 1.4em;\\n}\\n.ol-compass {\\n  display: block;\\n  font-weight: normal;\\n  font-size: 1.2em;\\n  will-change: transform;\\n}\\n.ol-touch .ol-control button {\\n  font-size: 1.5em;\\n}\\n.ol-touch .ol-zoom-extent {\\n  top: 5.5em;\\n}\\n.ol-control button:hover,\\n.ol-control button:focus {\\n  text-decoration: none;\\n  background-color: rgba(0,60,136,0.7);\\n}\\n.ol-zoom .ol-zoom-in {\\n  border-radius: 2px 2px 0 0;\\n}\\n.ol-zoom .ol-zoom-out {\\n  border-radius: 0 0 2px 2px;\\n}\\n\\n\\n.ol-attribution {\\n  text-align: right;\\n  bottom: .5em;\\n  right: .5em;\\n  max-width: calc(100% - 1.3em);\\n}\\n\\n.ol-attribution ul {\\n  margin: 0;\\n  padding: 0 .5em;\\n  font-size: .7rem;\\n  line-height: 1.375em;\\n  color: #000;\\n  text-shadow: 0 0 2px #fff;\\n}\\n.ol-attribution li {\\n  display: inline;\\n  list-style: none;\\n  line-height: inherit;\\n}\\n.ol-attribution li:not(:last-child):after {\\n  content: \\\" \\\";\\n}\\n.ol-attribution img {\\n  max-height: 2em;\\n  max-width: inherit;\\n  vertical-align: middle;\\n}\\n.ol-attribution ul, .ol-attribution button {\\n  display: inline-block;\\n}\\n.ol-attribution.ol-collapsed ul {\\n  display: none;\\n}\\n.ol-attribution:not(.ol-collapsed) {\\n  background: rgba(255,255,255,0.8);\\n}\\n.ol-attribution.ol-uncollapsible {\\n  bottom: 0;\\n  right: 0;\\n  border-radius: 4px 0 0;\\n  height: 1.1em;\\n  line-height: 1em;\\n}\\n.ol-attribution.ol-uncollapsible img {\\n  margin-top: -.2em;\\n  max-height: 1.6em;\\n}\\n.ol-attribution.ol-uncollapsible button {\\n  display: none;\\n}\\n\\n.ol-zoomslider {\\n  top: 4.5em;\\n  left: .5em;\\n  height: 200px;\\n}\\n.ol-zoomslider button {\\n  position: relative;\\n  height: 10px;\\n}\\n\\n.ol-touch .ol-zoomslider {\\n  top: 5.5em;\\n}\\n\\n.ol-overviewmap {\\n  left: 0.5em;\\n  bottom: 0.5em;\\n}\\n.ol-overviewmap.ol-uncollapsible {\\n  bottom: 0;\\n  left: 0;\\n  border-radius: 0 4px 0 0;\\n}\\n.ol-overviewmap .ol-overviewmap-map,\\n.ol-overviewmap button {\\n  display: inline-block;\\n}\\n.ol-overviewmap .ol-overviewmap-map {\\n  border: 1px solid #7b98bc;\\n  height: 150px;\\n  margin: 2px;\\n  width: 150px;\\n}\\n.ol-overviewmap:not(.ol-collapsed) button{\\n  bottom: 1px;\\n  left: 2px;\\n  position: absolute;\\n}\\n.ol-overviewmap.ol-collapsed .ol-overviewmap-map,\\n.ol-overviewmap.ol-uncollapsible button {\\n  display: none;\\n}\\n.ol-overviewmap:not(.ol-collapsed) {\\n  background: rgba(255,255,255,0.8);\\n}\\n.ol-overviewmap-box {\\n  border: 2px dotted rgba(0,60,136,0.7);\\n}\\n\\n.ol-overviewmap .ol-overviewmap-box:hover {\\n  cursor: move;\\n}\\n\", \"\"]);\n\n// exports\n","\nvar content = require(\"!!../css-loader/index.js!./ol.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../css-loader/index.js!./ol.css\", function() {\n\t\tvar newContent = require(\"!!../css-loader/index.js!./ol.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}"],"sourceRoot":""}